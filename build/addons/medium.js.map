{"version":3,"sources":["addons/medium.js","webpack:///webpack/bootstrap e0d562d2b6f31ae0be8b?a934**","./addons/medium/index.jsx","webpack:///external \"react\"?3c62**","./addons/medium/vendor/medium-editor.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireWildcard","obj","__esModule","default","_MediumEditor","_MediumEditor2","_React","_React2","Medium","createClass","displayName","propTypes","content","PropTypes","object","isRequired","onChange","func","getDefaultProps","html","text","options","buttons","firstHeader","secondHeader","diffLeft","diffTop","disableDoubleReturn","shouldComponentUpdate","props","state","componentDidMount","this","setState","editor","refs","getDOMNode","componentWillUnmount","deactivate","render","createElement","className","onBlur","_onBlur","role","aria-multiline","ref","dangerouslySetInnerHTML","__html","children","textContent","innerHTML",1,"require",15,"MediumEditor","elements","init","window","document","extend","b","a","prop","undefined","hasOwnProperty","isDescendant","parent","child","node","parentNode","saveSelection","i","len","ranges","sel","contentWindow","getSelection","getRangeAt","rangeCount","push","restoreSelection","savedSel","removeAllRanges","length","addRange","getSelectionStart","ownerDocument","anchorNode","startNode","nodeType","getSelectionHtml","container","appendChild","cloneContents","selection","type","createRange","htmlText","isElement","prototype","defaults","allowMultiParagraphSelection","anchorInputPlaceholder","anchorPreviewHideDelay","buttonLabels","checkLinkFormat","cleanPastedHTML","delay","disableReturn","disableToolbar","disableEditing","elementsContainer","forcePlainText","placeholder","targetBlank","anchorTarget","anchorButton","anchorButtonClass","extensions","activeButtonClass","firstButtonClass","lastButtonClass","isIE","navigator","appName","RegExp","exec","userAgent","setElementSelection","parentElements","body","querySelectorAll","setup","events","isActive","initElements","bindSelect","bindPaste","setPlaceholders","bindWindowActions","passInstance","on","target","event","listener","useCapture","addEventListener","off","e","index","indexOf","splice","removeEventListener","removeAllEvents","pop","updateElementList","addToolbar","getAttribute","setAttribute","bindParagraphCreation","bindReturn","bindTab","initToolbar","bindButtons","bindAnchorForm","bindAnchorPreview","selector","elementSelection","serialize","elementid","value","trim","callExtensions","funcName","arguments","ext","name","args","Array","slice","apply","self","base","tagName","which","toLowerCase","execCommand","editorElement","getSelectionElement","isListItemChild","shiftKey","preventDefault","innerText","tag","buttonTemplate","btnType","getButtonLabels","buttonTemplates","bold","italic","underline","strikethrough","superscript","subscript","anchor","image","header1","header2","quote","orderedlist","unorderedlist","pre","indent","outdent","justifyCenter","justifyFull","justifyLeft","justifyRight","buttonLabelType","customButtonLabels","attrname","toolbar","createToolbar","keepToolbarAlive","anchorForm","querySelector","anchorInput","toolbarActions","anchorPreview","createAnchorPreview","toolbarButtons","toolbarFormAnchor","li","btn","btns","ul","getButton","input","target_label","button_label","button","close","save","insertBefore","firstChild","timer","checkSelectionWrapper","clickingIntoArchorForm","clearTimeout","setTimeout","checkSelection","documentElement","newSelection","selectionElement","toString","hasMultiParagraphs","selectionInContentEditableFalse","hideToolbarActions","checkSelectionElement","relatedTarget","selectionHtml","replace","match","selectionRange","setToolbarButtonStates","setToolbarPosition","showToolbarActions","findMatchingSelectionParent","testElementFunction","range","current","commonAncestorContainer","el","nodeName","buttonHeight","boundary","getBoundingClientRect","defaultLeft","offsetWidth","middleBoundary","left","right","halfOffsetWidth","top","classList","add","remove","style","bottom","pageYOffset","offsetHeight","innerWidth","hideAnchorPreview","checkActiveButtons","getSelectedParentElement","activateButton","triggerAction","stopPropagation","hasAttribute","execAction","setFirstAndLastItems","action","execFormatBlock","triggerAnchorAction","rangeSelectsSingleNode","startContainer","endContainer","hasChildNodes","endOffset","startOffset","selectedParentElement","childNodes","display","showAnchorForm","selectionData","getSelectionData","getFirstChild","nextSibling","contains","_saveSelection","savedSelection","_restoreSelection","link_value","focus","linkCancel","linkSave","keyCode","checked","createLink","showAnchorPreview","anchorEl","href","observeAnchorPreview","Math","round","lastOver","Date","getTime","over","stamp","unstamp","test","interval_timer","setInterval","durr","clearInterval","anchorPreviewTemplate","anchorPreviewClickHandler","activeAnchor","selectNodeContents","editorAnchorObserver","overAnchor","leaveAnchor","_leaveAnchor","outerHTML","editorAnchorObserverWrapper","re","setTargetBlank","getElementsByTagName","setButtonClass","buttonClass","j","classes","split","createEvent","initEvent","dispatchEvent","timerResize","windowResizeHandler","activate","removeChild","removeAttribute","htmlEntities","str","String","pasteWrapper","paragraphs","clipboardData","getData","defaultPrevented","cleanPaste","activatePlaceholder","placeholderWrapper","elList","workEl","multiline","replacements","pasteHTML","join","filterCommonBlocks","filterLineBreak","fragmentBody","pasteBlock","createDocumentFragment","cleanupSpans","isCommonBlock","previousElementSibling","lastChild","childElementCount","removeWithParent","container_el","new_el","spans","replaceChild","createTextNode",37],"mappings":"AAAAA,OAAOC,QACE,SAAUC,GCGnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAH,OAGA,IAAAD,GAAAK,EAAAD,IACAH,WACAK,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAR,EAAAC,QAAAD,IAAAC,QAAAE,GAGAH,EAAAO,QAAA,EAGAP,EAAAC,QAvBA,GAAAI,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDOM,EACA,SAASH,EAAQC,EAASE,GAE/B,YAEA,IAAIS,GAA0B,SAAUC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,IAS7FG,EAAgBb,EEpDI,IFsDpBc,EAAiBL,EAAwBI,GAEzCE,EAASf,EEvDW,GFyDpBgB,EAAUP,EAAwBM,EEvDvCf,GAAQ,GAER,IAAIiB,GAASD,EAAA,WAAME,aF0DhBC,YAAa,SExDdC,WACEC,QAAWL,EAAA,WAAMM,UAAUC,OAAOC,WAClCC,SAAWT,EAAA,WAAMM,UAAUI,KAAKF,YAGlCG,gBAAe,WACb,OACEN,SAAWO,KAAM,GAAIC,KAAM,IAC3BC,SACEC,SAAW,UAAW,UAAW,OAAQ,SAAU,YAAa,SAAU,QAAU,gBAAiB,eACrGC,YAAa,KACbC,aAAc,KACdC,SAAU,EACVC,QAAS,IACTC,qBAAqB,KAK3BC,sBAAqB,SAACC,EAAeC,GACnC,OAAO,GAGTC,kBAAiB,WACfC,KAAKC,UACHC,OAAQ,GAAA7B,GAAA,WAAiB2B,KAAKG,KAAKD,OAAOE,aAAcJ,KAAKH,MAAMR,YAIvEgB,qBAAoB,WAClBL,KAAKF,MAAMI,OAAOI,cAGpBC,OAAM,WACJ,MACEhC,GAAA,WAAAiC,cF0DC,OE1DIC,UAAU,oBACblC,EAAA,WAAAiC,cAAA,OAAKC,UAAU,aAAaC,OAASV,KAAKW,QAAUC,KAAK,WAAWC,iBAAe,OAAOC,IAAI,SAASC,yBAA2BC,OAAQhB,KAAKH,MAAMjB,QAAQO,QAC3Ja,KAAKH,MAAMoB,WAKnBN,QAAO,WACL,GAAIT,GAASF,KAAKG,KAAKD,OAAOE,YAE9BJ,MAAKH,MAAMb,UACTI,KAAMc,EAAOgB,YACb/B,KAAMe,EAAOiB,cAMnB/D,GAAOC,QAAUmB,GF8DX4C,EACA,SAAShE,EAAQC,EAASE,GGlIhCH,EAAAC,QAAAgE,QAAA,UHwIMC,GACA,SAASlE,EAAQC,EAASE,GAI/B,YI3ID,SAASgE,GAAaC,EAAUnC,GAE5B,MAAOW,MAAKyB,KAAKD,EAAUnC,GAI3BjC,EAAOC,QAAUkE,EAUpB,SAAUG,EAAQC,GAGf,QAASC,GAAOC,EAAGC,GACf,GAAIC,EACJ,IAAUC,SAANH,EACA,MAAOC,EAEX,KAAKC,IAAQD,GACLA,EAAEG,eAAeF,IAASF,EAAEI,eAAeF,MAAU,IACrDF,EAAEE,GAAQD,EAAEC,GAGpB,OAAOF,GAGX,QAASK,GAAaC,EAAQC,GAEzB,IADA,GAAIC,GAAOD,EAAME,WACD,OAATD,GAAe,CAClB,GAAIA,IAASF,EACT,OAAO,CAEXE,GAAOA,EAAKC,WAEhB,OAAO,EAKZ,QAASC,KACL,GAAIC,GACAC,EACAC,EACAC,EAAM3C,KAAKX,QAAQuD,cAAcC,cACrC,IAAIF,EAAIG,YAAcH,EAAII,WAAY,CAElC,IADAL,KACKF,EAAI,EAAGC,EAAME,EAAII,WAAgBN,EAAJD,EAASA,GAAK,EAC5CE,EAAOM,KAAKL,EAAIG,WAAWN,GAE/B,OAAOE,GAEX,MAAO,MAGX,QAASO,GAAiBC,GACtB,GAAIV,GACAC,EACAE,EAAM3C,KAAKX,QAAQuD,cAAcC,cACrC,IAAIK,EAEA,IADAP,EAAIQ,kBACCX,EAAI,EAAGC,EAAMS,EAASE,OAAYX,EAAJD,EAASA,GAAK,EAC7CG,EAAIU,SAASH,EAASV,IAOlC,QAASc,KACL,GAAIjB,GAAOrC,KAAKX,QAAQkE,cAAcV,eAAeW,WACjDC,EAAapB,GAA0B,IAAlBA,EAAKqB,SAAiBrB,EAAKC,WAAaD,CACjE,OAAOoB,GAKX,QAASE,KACL,GAAInB,GAEAG,EACAF,EACAmB,EAHAzE,EAAO,EAIX,IAAgD6C,SAA5ChC,KAAKX,QAAQuD,cAAcC,cAE3B,GADAF,EAAM3C,KAAKX,QAAQuD,cAAcC,eAC7BF,EAAII,WAAY,CAEhB,IADAa,EAAY5D,KAAKX,QAAQkE,cAAc/C,cAAc,OAChDgC,EAAI,EAAGC,EAAME,EAAII,WAAgBN,EAAJD,EAASA,GAAK,EAC5CoB,EAAUC,YAAYlB,EAAIG,WAAWN,GAAGsB,gBAE5C3E,GAAOyE,EAAUzC,eAE2Ba,UAAzChC,KAAKX,QAAQkE,cAAcQ,WACgB,SAA9C/D,KAAKX,QAAQkE,cAAcQ,UAAUC,OACrC7E,EAAOa,KAAKX,QAAQkE,cAAcQ,UAAUE,cAAcC,SAGlE,OAAO/E,GAIX,QAASgF,GAAUlG,GACf,SAAUA,GAAwB,IAAjBA,EAAIyF,UAGzBnC,EAAa6C,WACTC,UACIC,8BAA8B,EAC9BC,uBAAwB,uBACxBC,uBAAwB,IACxBlF,SAAU,OAAQ,SAAU,YAAa,SAAU,UAAW,UAAW,SACzEmF,cAAc,EACdC,iBAAiB,EACjBC,iBAAiB,EACjBC,MAAO,EACPnF,SAAU,EACVC,QAAS,IACTmF,eAAe,EACflF,qBAAqB,EACrBmF,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,EACnBpC,cAAelB,EACf6B,cAAe5B,EACfpC,YAAa,KACb0F,gBAAgB,EAChBC,YAAa,iBACb1F,aAAc,KACd2F,aAAa,EACbC,cAAc,EACdC,cAAc,EACdC,kBAAmB,MACnBC,cACAC,kBAAmB,8BACnBC,iBAAkB,6BAClBC,gBAAiB,6BAKrBC,KAA8B,gCAAtBC,UAAUC,SAAsE,aAAtBD,UAAUC,SAA2G,OAA/E,GAAIC,QAAO,sCAAsCC,KAAKH,UAAUI,WAExKvE,KAAM,SAAUD,EAAUnC,GAGtB,MAFAW,MAAKX,QAAUuC,EAAOvC,EAASW,KAAKqE,UACpCrE,KAAKiG,oBAAoBzE,GACI,IAAzBxB,KAAKwB,SAAS4B,QAGlBpD,KAAKkG,gBAAkB,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,aAAc,OACzElG,KAAKX,QAAQ2F,oBACdhF,KAAKX,QAAQ2F,kBAAoBrD,EAASwE,MAE9CnG,KAAKtC,GAAKsC,KAAKX,QAAQ2F,kBAAkBoB,iBAAiB,0BAA0BhD,OAAS,EACtFpD,KAAKqG,SARZ,QAWJA,MAAO,WACHrG,KAAKsG,UACLtG,KAAKuG,UAAW,EAChBvG,KAAKwG,eACAC,aACAC,YACAC,kBACAC,oBACAC,gBAGTC,GAAI,SAASC,EAAQC,EAAOC,EAAUC,GAClCH,EAAOI,iBAAiBH,EAAOC,EAAUC,GACzClH,KAAKsG,OAAOtD,MAAM+D,EAAQC,EAAOC,EAAUC,KAG/CE,IAAK,SAASL,EAAQC,EAAOC,EAAUC,GACnC,GACIG,GADAC,EAAQtH,KAAKsG,OAAOiB,SAASR,EAAQC,EAAOC,EAAUC,GAE7C,MAAVI,IACCD,EAAIrH,KAAKsG,OAAOkB,OAAOF,EAAO,GAC9BD,EAAE,GAAGI,oBAAoBJ,EAAE,GAAIA,EAAE,GAAIA,EAAE,MAI/CK,gBAAiB,WAEb,IADA,GAAIL,GAAIrH,KAAKsG,OAAOqB,MACdN,GACFA,EAAE,GAAGI,oBAAoBJ,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACvCA,EAAIrH,KAAKsG,OAAOqB,OAIxBnB,aAAc,WACVxG,KAAK4H,mBACL,IAAIpF,GACAqF,GAAa,CACjB,KAAKrF,EAAI,EAAGA,EAAIxC,KAAKwB,SAAS4B,OAAQZ,GAAK,EAClCxC,KAAKX,QAAQ0F,gBAAmB/E,KAAKwB,SAASgB,GAAGsF,aAAa,yBAC/D9H,KAAKwB,SAASgB,GAAGuF,aAAa,mBAAmB,GAEhD/H,KAAKwB,SAASgB,GAAGsF,aAAa,qBAC/B9H,KAAKwB,SAASgB,GAAGuF,aAAa,mBAAoB/H,KAAKX,QAAQ6F,aAEnElF,KAAKwB,SAASgB,GAAGuF,aAAa,uBAAuB,GACrD/H,KAAKgI,sBAAsBxF,GAAGyF,WAAWzF,GAAG0F,QAAQ1F,GAC/CxC,KAAKX,QAAQyF,gBAAmB9E,KAAKwB,SAASgB,GAAGsF,aAAa,0BAC/DD,GAAa,EAUrB,OANIA,IACA7H,KAAKmI,cACAC,cACAC,iBACAC,oBAEFtI,MAGXiG,oBAAqB,SAAUsC,GAC3BvI,KAAKwI,iBAAmBD,EACxBvI,KAAK4H,qBAGTA,kBAAmB,WACf5H,KAAKwB,SAA4C,gBAA1BxB,MAAKwI,iBAAgCxI,KAAKX,QAAQkE,cAAc6C,iBAAiBpG,KAAKwI,kBAAoBxI,KAAKwI,iBACvG,IAA3BxI,KAAKwB,SAASkC,WACd1D,KAAKwB,UAAYxB,KAAKwB,YAI9BiH,UAAW,WACP,GAAIjG,GACAkG,EACA9J,IACJ,KAAK4D,EAAI,EAAGA,EAAIxC,KAAKwB,SAAS4B,OAAQZ,GAAK,EACvCkG,EAAqC,KAAxB1I,KAAKwB,SAASgB,GAAG9E,GAAasC,KAAKwB,SAASgB,GAAG9E,GAAK,WAAa8E,EAC9E5D,EAAQ8J,IACJC,MAAO3I,KAAKwB,SAASgB,GAAGrB,UAAUyH,OAG1C,OAAOhK,IAUXiK,eAAgB,SAAUC,GACtB,KAAIC,UAAU3F,OAAS,GAAvB,CAIA,GACI4F,GACAC,EAFAC,EAAOC,MAAM/E,UAAUgF,MAAMxL,KAAKmL,UAAW,EAIjD,KAAKE,IAAQjJ,MAAKX,QAAQkG,WAClBvF,KAAKX,QAAQkG,WAAWtD,eAAegH,KACvCD,EAAMhJ,KAAKX,QAAQkG,WAAW0D,GACRjH,SAAlBgH,EAAIF,IACJE,EAAIF,GAAUO,MAAML,EAAKE,MAWzCrC,aAAc,WACV,GACImC,GACAC,EAFAK,EAAOtJ,IAIX,KAAKiJ,IAAQK,GAAKjK,QAAQkG,WAClB+D,EAAKjK,QAAQkG,WAAWtD,eAAegH,KACvCD,EAAMM,EAAKjK,QAAQkG,WAAW0D,GAE1BD,EAAI7G,SACJ6G,EAAIO,KAAOD,GAKvB,OAAOA,IAGXtB,sBAAuB,SAAUV,GAC7B,GAAIgC,GAAOtJ,IAoCX,OAnCAA,MAAK8G,GAAG9G,KAAKwB,SAAS8F,GAAQ,WAAY,SAAUD,GAChD,GACImC,GADAnH,EAAOiB,EAAkB1F,KAAK0L,EAElB,MAAZjC,EAAEoC,QACFD,EAAUnH,EAAKmH,QAAQE,cACP,MAAZF,GACA7H,EAASgI,YAAY,UAAU,EAAO,SAKlD3J,KAAK8G,GAAG9G,KAAKwB,SAAS8F,GAAQ,QAAS,SAAUD,GAC7C,GACImC,GACAI,EAFAvH,EAAOiB,EAAkB1F,KAAK0L,EAI9BjH,IAAQA,EAAKyF,aAAa,wBAAmD,IAAzBzF,EAAKpB,SAASmC,SAAkBkG,EAAKjK,QAAQwF,gBAAiBxC,EAAKyF,aAAa,wBACpInG,EAASgI,YAAY,eAAe,EAAO,KAE/B,KAAZtC,EAAEoC,QACFpH,EAAOiB,EAAkB1F,KAAK0L,GAC9BE,EAAUnH,EAAKmH,QAAQE,cACvBE,EAAgBN,EAAKO,sBAEfP,EAAKjK,QAAQwF,eAAiB+E,EAAc9B,aAAa,wBAC/C,OAAZ0B,GAAqBF,EAAKQ,gBAAgBzH,KACrCgF,EAAE0C,UACHpI,EAASgI,YAAY,eAAe,EAAO,KAE/B,MAAZH,GACA7H,EAASgI,YAAY,UAAU,EAAO,UAK/C3J,MAGX8J,gBAAiB,SAAUzH,GAGvB,IAFA,GAAIC,GAAaD,EAAKC,WAClBkH,EAAUlH,EAAWkH,QAAQE,cACe,KAAzC1J,KAAKkG,eAAeqB,QAAQiC,IAA+B,QAAZA,GAAmB,CACrE,GAAgB,OAAZA,EACA,OAAO,CAGX,IADAlH,EAAaA,EAAWA,YACpBA,IAAcA,EAAWkH,QAGzB,OAAO,CAFPA,GAAUlH,EAAWkH,QAAQE,cAKrC,OAAO,GAGXzB,WAAY,SAAUX,GAClB,GAAIgC,GAAOtJ,IAaX,OAZAA,MAAK8G,GAAG9G,KAAKwB,SAAS8F,GAAQ,WAAY,SAAUD,GAChD,GAAgB,KAAZA,EAAEoC,MACF,GAAIH,EAAKjK,QAAQwF,eAAiB7E,KAAK8H,aAAa,uBAChDT,EAAE2C,qBACC,IAAIV,EAAKjK,QAAQM,qBAAuBK,KAAK8H,aAAa,8BAA+B,CAC5F,GAAIzF,GAAOiB,EAAkB1F,KAAK0L,EAC9BjH,IAA2B,OAAnBA,EAAK4H,WACb5C,EAAE2C,oBAKXhK,MAGXkI,QAAS,SAAUZ,GACf,GAAIgC,GAAOtJ,IAuBX,OAtBAA,MAAK8G,GAAG9G,KAAKwB,SAAS8F,GAAQ,UAAW,SAAUD,GAC/C,GAAgB,IAAZA,EAAEoC,MAAa,CAEf,GAAIS,GAAM5G,EAAkB1F,KAAK0L,GAAME,QAAQE,aACnC,SAARQ,IACA7C,EAAE2C,iBACFrI,EAASgI,YAAY,aAAc,KAAM,SAIjC,OAARO,IACA7C,EAAE2C,iBAGE3C,EAAE0C,SACFpI,EAASgI,YAAY,UAAWtC,GAEhC1F,EAASgI,YAAY,SAAUtC,OAKxCrH,MAGXmK,eAAgB,SAAUC,GACtB,GAAI3F,GAAezE,KAAKqK,gBAAgBrK,KAAKX,QAAQoF,cACjD6F,GACIC,KAAQ,sGAAwG9F,EAAa8F,KAAO,YACpIC,OAAU,0GAA4G/F,EAAa+F,OAAS,YAC5IC,UAAa,gHAAkHhG,EAAagG,UAAY,YACxJC,cAAiB,6HAA+HjG,EAAaiG,cAAe,YAC5KC,YAAe,sHAAwHlG,EAAakG,YAAc,YAClKC,UAAa,kHAAoHnG,EAAamG,UAAY,YAC1JC,OAAU,0GAA4GpG,EAAaoG,OAAS,YAC5IC,MAAS,0GAA4GrG,EAAaqG,MAAQ,YAC1IC,QAAW,yFAA2F/K,KAAKX,QAAQE,YAAc,mBAAqBS,KAAKX,QAAQE,YAAc,KAAOkF,EAAasG,QAAU,YAC/MC,QAAW,yFAA2FhL,KAAKX,QAAQG,aAAe,mBAAqBQ,KAAKX,QAAQG,aAAe,KAAOiF,EAAauG,QAAU,YACjNC,MAAS,6HAA+HxG,EAAawG,MAAQ,YAC7JC,YAAe,2HAA6HzG,EAAayG,YAAc,YACvKC,cAAiB,+HAAiI1G,EAAa0G,cAAgB,YAC/KC,IAAO,6GAA+G3G,EAAa2G,IAAM,YACzIC,OAAU,2GAA6G5G,EAAa4G,OAAS,YAC7IC,QAAW,6GAA+G7G,EAAa6G,QAAU,YACjJC,cAAiB,uHAAyH9G,EAAa8G,cAAgB,YACvKC,YAAe,mHAAqH/G,EAAa+G,YAAc,YAC/JC,YAAe,mHAAqHhH,EAAagH,YAAc,YAC/JC,aAAgB,qHAAuHjH,EAAaiH,aAAe,YAE3K,OAAOpB,GAAgBF,KAAY,GAIvCC,gBAAiB,SAAUsB,GACvB,GAAIC,GACAC,EACApH,GACI8F,KAAQ,WACRC,OAAU,kBACVC,UAAa,kBACbC,cAAiB,WACjBC,YAAe,uBACfC,UAAa,uBACbC,OAAU,WACVC,MAAS,eACTC,QAAW,YACXC,QAAW,YACXC,MAAS,iBACTC,YAAe,YACfC,cAAiB,gBACjBC,IAAO,cACPC,OAAU,gBACVC,QAAW,gBACXC,cAAiB,WACjBC,YAAe,WACfC,YAAe,WACfC,aAAgB,WA0BxB,IAxBwB,gBAApBC,EACAC,GACIrB,KAAQ,6BACRC,OAAU,+BACVC,UAAa,kCACbC,cAAiB,sCACjBC,YAAe,oCACfC,UAAa,kCACbC,OAAU,6BACVC,MAAS,kCACTG,MAAS,oCACTC,YAAe,gCACfC,cAAiB,gCACjBC,IAAO,mCACPC,OAAU,+BACVC,QAAW,gCACXC,cAAiB,qCACjBC,YAAe,sCACfC,YAAe,mCACfC,aAAgB,qCAEc,gBAApBC,KACdC,EAAqBD,GAES,gBAAvBC,GACP,IAAKC,IAAYD,GACTA,EAAmB3J,eAAe4J,KAClCpH,EAAaoH,GAAYD,EAAmBC,GAIxD,OAAOpH,IAGX0D,YAAa,WACT,MAAInI,MAAK8L,QACE9L,MAEXA,KAAK8L,QAAU9L,KAAK+L,gBACpB/L,KAAKgM,kBAAmB,EACxBhM,KAAKiM,WAAajM,KAAK8L,QAAQI,cAAc,sCAC7ClM,KAAKmM,YAAcnM,KAAKiM,WAAWC,cAAc,4CACjDlM,KAAKoF,aAAepF,KAAKiM,WAAWC,cAAc,6CAClDlM,KAAKqF,aAAerF,KAAKiM,WAAWC,cAAc,6CAClDlM,KAAKoM,eAAiBpM,KAAK8L,QAAQI,cAAc,kCACjDlM,KAAKqM,cAAgBrM,KAAKsM,sBAEnBtM,OAGX+L,cAAe,WACX,GAAID,GAAUnK,EAASnB,cAAc,MAMrC,OALAsL,GAAQpO,GAAK,yBAA2BsC,KAAKtC,GAC7CoO,EAAQrL,UAAY,wBACpBqL,EAAQjI,YAAY7D,KAAKuM,kBACzBT,EAAQjI,YAAY7D,KAAKwM,qBACzBxM,KAAKX,QAAQ2F,kBAAkBnB,YAAYiI,GACpCA,GAIXS,eAAgB,WACZ,GAEIE,GACAjK,EACAkK,EACA1D,EALA2D,EAAO3M,KAAKX,QAAQC,QACpBsN,EAAKjL,EAASnB,cAAc,KAShC,KAHAoM,EAAGlP,GAAK,gCACRkP,EAAGnM,UAAY,yCAEV+B,EAAI,EAAGA,EAAImK,EAAKvJ,OAAQZ,GAAK,EAC1BxC,KAAKX,QAAQkG,WAAWtD,eAAe0K,EAAKnK,KAC5CwG,EAAMhJ,KAAKX,QAAQkG,WAAWoH,EAAKnK,IACnCkK,EAAwB1K,SAAlBgH,EAAI6D,UAA0B7D,EAAI6D,YAAc,MAEtDH,EAAM1M,KAAKmK,eAAewC,EAAKnK,IAG/BkK,IACAD,EAAK9K,EAASnB,cAAc,MACxB2D,EAAUuI,GACVD,EAAG5I,YAAY6I,GAEfD,EAAGtL,UAAYuL,EAEnBE,EAAG/I,YAAY4I,GAIvB,OAAOG,IAGXJ,kBAAmB,WACf,GAAI3B,GAASlJ,EAASnB,cAAc,OAChCsM,EAAQnL,EAASnB,cAAc,SAC/BuM,EAAepL,EAASnB,cAAc,SACtCuG,EAASpF,EAASnB,cAAc,SAChCwM,EAAerL,EAASnB,cAAc,SACtCyM,EAAStL,EAASnB,cAAc,SAChC0M,EAAQvL,EAASnB,cAAc,KAC/B2M,EAAOxL,EAASnB,cAAc,IAyClC,OAvCA0M,GAAMnF,aAAa,OAAQ,KAC3BmF,EAAMzM,UAAY,oCAClByM,EAAM/L,UAAY,UAElBgM,EAAKpF,aAAa,OAAQ,KAC1BoF,EAAK1M,UAAY,mCACjB0M,EAAKhM,UAAY,WAEjB2L,EAAM/E,aAAa,OAAQ,QAC3B+E,EAAMrM,UAAY,qCAClBqM,EAAM/E,aAAa,cAAe/H,KAAKX,QAAQkF,wBAG/CwC,EAAOgB,aAAa,OAAQ,YAC5BhB,EAAOtG,UAAY,sCACnBsM,EAAa5L,UAAY,sBACzB4L,EAAaK,aAAarG,EAAQgG,EAAaM,YAE/CJ,EAAOlF,aAAa,OAAQ,YAC5BkF,EAAOxM,UAAY,sCACnBuM,EAAa7L,UAAY,SACzB6L,EAAaI,aAAaH,EAAQD,EAAaK,YAG/CxC,EAAOpK,UAAY,oCACnBoK,EAAOnN,GAAK,oCACZmN,EAAOhH,YAAYiJ,GAEnBjC,EAAOhH,YAAYsJ,GACnBtC,EAAOhH,YAAYqJ,GAEflN,KAAKX,QAAQ+F,cACbyF,EAAOhH,YAAYkJ,GAGnB/M,KAAKX,QAAQgG,cACbwF,EAAOhH,YAAYmJ,GAGhBnC,GAGXpE,WAAY,WACR,GAEIjE,GAFA8G,EAAOtJ,KACPsN,EAAQ,EAkBZ,KAfAtN,KAAKuN,sBAAwB,SAAUlG,GAGnC,MAAIA,IAAKiC,EAAKkE,uBAAuBnG,IAC1B,GAGXoG,aAAaH,QACbA,EAAQI,WAAW,WACfpE,EAAKqE,kBACNrE,EAAKjK,QAAQuF,UAGpB5E,KAAK8G,GAAGnF,EAASiM,gBAAiB,UAAW5N,KAAKuN,uBAE7C/K,EAAI,EAAGA,EAAIxC,KAAKwB,SAAS4B,OAAQZ,GAAK,EACvCxC,KAAK8G,GAAG9G,KAAKwB,SAASgB,GAAI,QAASxC,KAAKuN,uBACxCvN,KAAK8G,GAAG9G,KAAKwB,SAASgB,GAAI,OAAQxC,KAAKuN,sBAE3C,OAAOvN,OAGX2N,eAAgB,WACZ,GAAIE,GACAC,CAkBJ,OAhBI9N,MAAKgM,oBAAqB,GAAShM,KAAKX,QAAQyF,iBAEhD+I,EAAe7N,KAAKX,QAAQuD,cAAcC,eACH,KAAnCgL,EAAaE,WAAWnF,QACvB5I,KAAKX,QAAQiF,gCAAiC,GAAStE,KAAKgO,sBAC7DhO,KAAKiO,kCACLjO,KAAKkO,sBAELJ,EAAmB9N,KAAK6J,uBACnBiE,GAAoBA,EAAiBhG,aAAa,wBACnD9H,KAAKkO,qBAELlO,KAAKmO,sBAAsBN,EAAcC,KAI9C9N,MAGXwN,uBAAwB,SAAUnG,GAC9B,GAAIiC,GAAOtJ,IAEX,OAAIqH,GAAErD,MAAiC,SAAzBqD,EAAErD,KAAK0F,eAA4BrC,EAAE+G,eAAiB/G,EAAE+G,gBAAkB9E,EAAK6C,aAClF,GAGJ,GAGX6B,mBAAoB,QAAAA,KAChB,GAAIK,GAAgB1K,EAAiB/F,KAAKoC,MAAMsO,QAAQ,sBAAuB,IAC3EN,EAAqBK,EAAcE,MAAM,8DAE7C,OAAQP,GAAqBA,EAAmB5K,OAAS,GAG7D+K,sBAAuB,SAAUN,EAAcC,GAC3C,GAAItL,EAGJ,KAFAxC,KAAK+D,UAAY8J,EACjB7N,KAAKwO,eAAiBxO,KAAK+D,UAAUjB,WAAW,GAC3CN,EAAI,EAAGA,EAAIxC,KAAKwB,SAAS4B,OAAQZ,GAAK,EACvC,GAAIxC,KAAKwB,SAASgB,KAAOsL,EAIrB,WAHA9N,MAAKyO,yBACAC,qBACAC,oBAIb3O,MAAKkO,sBAGTU,4BAA6B,SAASC,GAClC,GAA2DC,GAAOC,EAA9DhL,EAAY/D,KAAKX,QAAQuD,cAAcC,cAE3C,IAA6B,IAAzBkB,EAAUhB,WACV,OAAO,CAGX+L,GAAQ/K,EAAUjB,WAAW,GAC7BiM,EAAUD,EAAME,uBAEhB,GAAG,CACD,GAAyB,IAArBD,EAAQrL,SAAe,CACzB,GAAKmL,EAAoBE,GAErB,MAAOA,EAGX,IAAIA,EAAQjH,aAAa,uBACrB,OAAO,EAIbiH,EAAUA,EAAQzM,iBACXyM,EAET,QAAO,GAGXlF,oBAAqB,WACjB,MAAO7J,MAAK4O,4BAA4B,SAASK,GAC7C,MAAOA,GAAGnH,aAAa,0BAI/BmG,gCAAiC,WAC7B,MAAOjO,MAAK4O,4BAA4B,SAASK,GAC7C,MAAQA,IAAsB,UAAhBA,EAAGC,UAA+D,UAAvCD,EAAGnH,aAAa,sBAIjE4G,mBAAoB,WAChB,GAAIS,GAAe,GACfpL,EAAY/D,KAAKX,QAAQuD,cAAcC,eACvCiM,EAAQ/K,EAAUjB,WAAW,GAC7BsM,EAAWN,EAAMO,wBACjBC,EAAetP,KAAKX,QAAQI,SAAaO,KAAK8L,QAAQyD,YAAc,EACpEC,GAAkBJ,EAASK,KAAOL,EAASM,OAAS,EACpDC,EAAkB3P,KAAK8L,QAAQyD,YAAc,CAoBjD,OAnBIH,GAASQ,IAAMT,GACfnP,KAAK8L,QAAQ+D,UAAUC,IAAI,6BAC3B9P,KAAK8L,QAAQ+D,UAAUE,OAAO,8BAC9B/P,KAAK8L,QAAQkE,MAAMJ,IAAMT,EAAeC,EAASa,OAASjQ,KAAKX,QAAQK,QAAUM,KAAKX,QAAQuD,cAAcsN,YAAclQ,KAAK8L,QAAQqE,aAAe,OAEtJnQ,KAAK8L,QAAQ+D,UAAUC,IAAI,8BAC3B9P,KAAK8L,QAAQ+D,UAAUE,OAAO,6BAC9B/P,KAAK8L,QAAQkE,MAAMJ,IAAMR,EAASQ,IAAM5P,KAAKX,QAAQK,QAAUM,KAAKX,QAAQuD,cAAcsN,YAAclQ,KAAK8L,QAAQqE,aAAe,MAEnHR,EAAjBH,EACAxP,KAAK8L,QAAQkE,MAAMP,KAAOH,EAAcK,EAAkB,KAClD3P,KAAKX,QAAQuD,cAAcwN,WAAaZ,EAAkBG,EAClE3P,KAAK8L,QAAQkE,MAAMP,KAAOzP,KAAKX,QAAQuD,cAAcwN,WAAad,EAAcK,EAAkB,KAElG3P,KAAK8L,QAAQkE,MAAMP,KAAOH,EAAcE,EAAiB,KAG7DxP,KAAKqQ,oBAEErQ,MAGXyO,uBAAwB,WACpB,GACIjM,GADAlD,EAAUU,KAAKoM,eAAehG,iBAAiB,SAEnD,KAAK5D,EAAI,EAAGA,EAAIlD,EAAQ8D,OAAQZ,GAAK,EACjClD,EAAQkD,GAAGqN,UAAUE,OAAO/P,KAAKX,QAAQmG,kBAG7C,OADAxF,MAAKsQ,qBACEtQ,MAGXsQ,mBAAoB,WAGhB,IAFA,GAAI9O,GAAW2H,MAAM/E,UAAUgF,MAAMxL,KAAKoC,KAAKwB,UAC3Cc,EAAatC,KAAKuQ,2BACQvO,SAAvBM,EAAWkH,SAAyF,KAAhExJ,KAAKkG,eAAeqB,QAAQjF,EAAWkH,QAAQE,eACtF1J,KAAKwQ,eAAelO,EAAWkH,QAAQE,eACvC1J,KAAK6I,eAAe,aAAcvG,GAGG,KAAjCd,EAAS+F,QAAQjF,KAGrBA,EAAaA,EAAWA,YAIhCkO,eAAgB,SAAUtG,GACtB,GAAI+E,GAAKjP,KAAK8L,QAAQI,cAAc,kBAAoBhC,EAAM,KACnD,QAAP+E,GAAwE,KAAzDA,EAAGxO,UAAU8G,QAAQvH,KAAKX,QAAQmG,qBACjDyJ,EAAGxO,WAAa,IAAMT,KAAKX,QAAQmG,oBAI3C4C,YAAa,WACT,GACI5F,GADAlD,EAAUU,KAAK8L,QAAQ1F,iBAAiB,UAExCkD,EAAOtJ,KACPyQ,EAAgB,SAAUpJ,GACtBA,EAAE2C,iBACF3C,EAAEqJ,kBACqB1O,SAAnBsH,EAAKvF,WACLuF,EAAKqE,iBAEL3N,KAAKS,UAAU8G,QAAQ+B,EAAKjK,QAAQmG,mBAAqB,GACzDxF,KAAK6P,UAAUE,OAAOzG,EAAKjK,QAAQmG,mBAEnCxF,KAAKS,WAAa,IAAM6I,EAAKjK,QAAQmG,kBAErCxF,KAAK2Q,aAAa,gBAClBrH,EAAKsH,WAAW5Q,KAAK8H,aAAa,eAAgBT,GAG9D,KAAK7E,EAAI,EAAGA,EAAIlD,EAAQ8D,OAAQZ,GAAK,EACjCxC,KAAK8G,GAAGxH,EAAQkD,GAAI,QAASiO,EAGjC,OADAzQ,MAAK6Q,qBAAqBvR,GACnBU,MAGX6Q,qBAAsB,SAAUvR,GAK5B,MAJIA,GAAQ8D,OAAS,IACjB9D,EAAQ,GAAGmB,WAAa,IAAMT,KAAKX,QAAQoG,iBAC3CnG,EAAQA,EAAQ8D,OAAS,GAAG3C,WAAa,IAAMT,KAAKX,QAAQqG,iBAEzD1F,MAGX4Q,WAAY,SAAUE,EAAQzJ,GACtByJ,EAAOvJ,QAAQ,WAAa,IAC5BvH,KAAK+Q,gBAAgBD,EAAOxC,QAAQ,UAAW,KAC/CtO,KAAK0O,qBACL1O,KAAKyO,0BACa,WAAXqC,EACP9Q,KAAKgR,oBAAoB3J,GACP,UAAXyJ,EACP9Q,KAAKX,QAAQkE,cAAcoG,YAAY,eAAe,EAAO3J,KAAKX,QAAQuD,cAAcC,iBAExF7C,KAAKX,QAAQkE,cAAcoG,YAAYmH,GAAQ,EAAO,MACtD9Q,KAAK0O,uBAKbuC,uBAAwB,SAAUnC,GAC9B,GAAIrL,GAAYqL,EAAMoC,cACtB,OAAOzN,KAAcqL,EAAMqC,cACvB1N,EAAU2N,iBACVtC,EAAMuC,YAAcvC,EAAMwC,YAAc,GAGhDf,yBAA0B,WACtB,GAAIgB,GAAwB,KACxBzC,EAAQ9O,KAAKwO,cAQjB,OANI+C,GADAvR,KAAKiR,uBAAuBnC,GACJA,EAAMoC,eAAeM,WAAW1C,EAAMwC,aACrB,IAAlCxC,EAAMoC,eAAexN,SACJoL,EAAMoC,eAAe5O,WAErBwM,EAAMoC,gBAKtCF,oBAAqB,WACjB,GAAIO,GAAwBvR,KAAKuQ,0BAWjC,OAVIgB,GAAsB/H,SAC8B,MAAhD+H,EAAsB/H,QAAQE,cAClC1J,KAAKX,QAAQkE,cAAcoG,YAAY,UAAU,EAAO,MAElB,UAAlC3J,KAAKiM,WAAW+D,MAAMyB,QACtBzR,KAAK2O,qBAEL3O,KAAK0R,iBAGN1R,MAGX+Q,gBAAiB,SAAU9B,GACvB,GAAI0C,GAAgB3R,KAAK4R,iBAAiB5R,KAAK+D,UAAUP,WAIzD,IAAW,eAAPyL,GAAuB0C,EAAc1C,IACiB,eAAtD0C,EAAc1C,GAAG3M,WAAWkH,QAAQE,cACpC,MAAO1J,MAAKX,QAAQkE,cAAcoG,YAAY,WAAW,EAAO,KASpE,IAPIgI,EAAcnI,UAAYyF,IAC1BA,EAAK,KAMLjP,KAAK2F,KAAM,CACX,GAAW,eAAPsJ,EACA,MAAOjP,MAAKX,QAAQkE,cAAcoG,YAAY,UAAU,EAAOsF,EAEnEA,GAAK,IAAMA,EAAK,IAEpB,MAAOjP,MAAKX,QAAQkE,cAAcoG,YAAY,eAAe,EAAOsF,IAGxE2C,iBAAkB,SAAU3C,GACxB,GAAIzF,EAMJ,KAJIyF,GAAMA,EAAGzF,UACTA,EAAUyF,EAAGzF,QAAQE,eAGlBuF,GAA+C,KAAzCjP,KAAKkG,eAAeqB,QAAQiC,IACrCyF,EAAKA,EAAG3M,WACJ2M,GAAMA,EAAGzF,UACTA,EAAUyF,EAAGzF,QAAQE,cAI7B,QACIuF,GAAIA,EACJzF,QAASA,IAIjBqI,cAAe,SAAU5C,GAErB,IADA,GAAI5B,GAAa4B,EAAG5B,WACE,OAAfA,GAA+C,IAAxBA,EAAW3J,UACrC2J,EAAaA,EAAWyE,WAE5B,OAAOzE,IAGXa,mBAAoB,WAChBlO,KAAKgM,kBAAmB,EACHhK,SAAjBhC,KAAK8L,SACL9L,KAAK8L,QAAQ+D,UAAUE,OAAO,iCAItCpB,mBAAoB,WAChB,GACIrB,GADAhE,EAAOtJ,IAEXA,MAAKiM,WAAW+D,MAAMyB,QAAU,OAChCzR,KAAKoM,eAAe4D,MAAMyB,QAAU,QACpCzR,KAAKgM,kBAAmB,EACxByB,aAAaH,GACbA,EAAQI,WAAW,WACXpE,EAAKwC,UAAYxC,EAAKwC,QAAQ+D,UAAUkC,SAAS,iCACjDzI,EAAKwC,QAAQ+D,UAAUC,IAAI,iCAEhC,MAGPvN,cAAa,SAAAyP,GJ2HR,QAASzP,KACL,MAAOyP,GAAe3I,MAAMrJ,KAAM+I,WAOtC,MAJAxG,GAAcwL,SAAW,WACrB,MAAOiE,GAAejE,YAGnBxL,GInIG,WACXvC,KAAKiS,eAAiB1P,EAAc3E,KAAKoC,QAG7CiD,iBAAgB,SAAAiP,GJqIX,QAASjP,KACL,MAAOiP,GAAkB7I,MAAMrJ,KAAM+I,WAOzC,MAJA9F,GAAiB8K,SAAW,WACxB,MAAOmE,GAAkBnE,YAGtB9K,GI7IM,WACdA,EAAiBrF,KAAKoC,KAAMA,KAAKiS,kBAGrCP,eAAgB,SAAUS,GACtBnS,KAAKoM,eAAe4D,MAAMyB,QAAU,OACpCzR,KAAKuC,gBACLvC,KAAKiM,WAAW+D,MAAMyB,QAAU,QAChCzR,KAAK0O,qBACL1O,KAAKgM,kBAAmB,EACxBhM,KAAKmM,YAAYiG,QACjBpS,KAAKmM,YAAYxD,MAAQwJ,GAAc,IAG3C9J,eAAgB,WACZ,GAAIgK,GAAarS,KAAKiM,WAAWC,cAAc,uCAC3CoG,EAAWtS,KAAKiM,WAAWC,cAAc,sCACzC5C,EAAOtJ,IAuEX,OArEAA,MAAK8G,GAAG9G,KAAKiM,WAAY,QAAS,SAAU5E,GACxCA,EAAEqJ,kBACFpH,EAAK0C,kBAAmB,IAG5BhM,KAAK8G,GAAG9G,KAAKmM,YAAa,QAAS,SAAU9E,GACzC,GACIN,GADAkG,EAAS,IAGK,MAAd5F,EAAEkL,UACFlL,EAAE2C,iBAEEjD,EADAuC,EAAKjK,QAAQ+F,cAAgBkE,EAAKlE,aAAaoN,QACtC,SAGA,QAGTlJ,EAAKjK,QAAQgG,cAAgBiE,EAAKjE,aAAamN,UAC/CvF,EAAS3D,EAAKjK,QAAQiG,mBAG1BgE,EAAKmJ,WAAWzS,KAAM+G,EAAQkG,MAItCjN,KAAK8G,GAAGwL,EAAU,QAAS,SAASjL,GAChC,GACIN,GADAkG,EAAS,IAEb5F,GAAE2C,iBAEEjD,EADCuC,EAAKjK,QAAQ+F,cAAgBkE,EAAKlE,aAAaoN,QACvC,SAGA,QAGTlJ,EAAKjK,QAAQgG,cAAgBiE,EAAKjE,aAAamN,UAC/CvF,EAAS3D,EAAKjK,QAAQiG,mBAG1BgE,EAAKmJ,WAAWnJ,EAAK6C,YAAapF,EAAQkG,KAC3C,GAEHjN,KAAK8G,GAAG9G,KAAKmM,YAAa,QAAS,SAAU9E,GAEzCA,EAAEqJ,kBACFpH,EAAK0C,kBAAmB,IAI5BhM,KAAK8G,GAAG9G,KAAKX,QAAQkE,cAAc4C,KAAM,QAAS,SAAUkB,GACpDA,EAAEN,SAAWuC,EAAK2C,YAAe/J,EAAaoH,EAAK2C,WAAY5E,EAAEN,SAAY7E,EAAaoH,EAAK8C,eAAgB/E,EAAEN,UACjHuC,EAAK0C,kBAAmB,EACxB1C,EAAKqE,oBAEV,GACH3N,KAAK8G,GAAG9G,KAAKX,QAAQkE,cAAc4C,KAAM,QAAS,SAAUkB,GACpDA,EAAEN,SAAWuC,EAAK2C,YAAe/J,EAAaoH,EAAK2C,WAAY5E,EAAEN,SAAY7E,EAAaoH,EAAK8C,eAAgB/E,EAAEN,UACjHuC,EAAK0C,kBAAmB,EACxB1C,EAAKqE,oBAEV,GAEH3N,KAAK8G,GAAGuL,EAAY,QAAS,SAAUhL,GACnCA,EAAE2C,iBACFV,EAAKqF,qBACL1L,EAAiBrF,KAAK0L,EAAMA,EAAK2I,kBAE9BjS,MAIXqQ,kBAAmB,WACfrQ,KAAKqM,cAAcwD,UAAUE,OAAO,wCAIxC2C,kBAAmB,SAAUC,GACzB,GAAI3S,KAAKqM,cAAcwD,UAAUkC,SAAS,wCACnCY,EAAS7K,aAAa,wBACzB,OAAO,CAGX,IAII6H,GACAL,EACAhC,EANAhE,EAAOtJ,KACPmP,EAAe,GACfC,EAAWuD,EAAStD,wBACpBG,GAAkBJ,EAASK,KAAOL,EAASM,OAAS,CA6BxD,OAxBApG,GAAK+C,cAAcH,cAAc,KAAKhL,YAAcyR,EAASC,KAC7DjD,EAAkBrG,EAAK+C,cAAckD,YAAc,EACnDD,EAAchG,EAAKjK,QAAQI,SAAWkQ,EAEtClC,aAAaH,GACbA,EAAQI,WAAW,WACXpE,EAAK+C,gBAAkB/C,EAAK+C,cAAcwD,UAAUkC,SAAS,wCAC7DzI,EAAK+C,cAAcwD,UAAUC,IAAI,wCAEtC,KAEHxG,EAAKuJ,qBAAqBF,GAE1BrJ,EAAK+C,cAAcwD,UAAUC,IAAI,6BACjCxG,EAAK+C,cAAcwD,UAAUE,OAAO,8BACpCzG,EAAK+C,cAAc2D,MAAMJ,IAAMkD,KAAKC,MAAM5D,EAAeC,EAASa,OAAS3G,EAAKjK,QAAQK,QAAUM,KAAKX,QAAQuD,cAAcsN,YAAc5G,EAAK+C,cAAc8D,cAAgB,KACzJR,EAAjBH,EACAlG,EAAK+C,cAAc2D,MAAMP,KAAOH,EAAcK,EAAkB,KACxD3P,KAAKX,QAAQuD,cAAcwN,WAAaZ,EAAkBG,EAClErG,EAAK+C,cAAc2D,MAAMP,KAAOzP,KAAKX,QAAQuD,cAAcwN,WAAad,EAAcK,EAAkB,KAExGrG,EAAK+C,cAAc2D,MAAMP,KAAOH,EAAcE,EAAiB,KAG5DxP,MAIX6S,qBAAsB,SAAUF,GAC5B,GAAIrJ,GAAOtJ,KACPgT,GAAY,GAAIC,OAAQC,UACxBC,GAAO,EACPC,EAAQ,WACJJ,GAAY,GAAIC,OAAQC,UACxBC,GAAO,GAEXE,EAAU,SAAUhM,GACXA,EAAE+G,eAAkB,iBAAiBkF,KAAKjM,EAAE+G,cAAc3N,aAC3D0S,GAAO,IAGfI,EAAiBC,YAAY,WACzB,GAAIL,EACA,OAAO,CAEX,IAAIM,IAAQ,GAAIR,OAAQC,UAAYF,CAChCS,GAAOnK,EAAKjK,QAAQmF,yBAEpB8E,EAAK+G,oBAGLqD,cAAcH,GACdjK,EAAKlC,IAAIkC,EAAK+C,cAAe,YAAa+G,GAC1C9J,EAAKlC,IAAIkC,EAAK+C,cAAe,WAAYgH,GACzC/J,EAAKlC,IAAIuL,EAAU,YAAaS,GAChC9J,EAAKlC,IAAIuL,EAAU,WAAYU,KAGpC,IAEPrT,MAAK8G,GAAGwC,EAAK+C,cAAe,YAAa+G,GACzCpT,KAAK8G,GAAGwC,EAAK+C,cAAe,WAAYgH,GACxCrT,KAAK8G,GAAG6L,EAAU,YAAaS,GAC/BpT,KAAK8G,GAAG6L,EAAU,WAAYU,IAGlC/G,oBAAqB,WACjB,GAAIhD,GAAOtJ,KACPqM,EAAgBrM,KAAKX,QAAQkE,cAAc/C,cAAc,MAW7D,OATA6L,GAAc3O,GAAK,gCAAkCsC,KAAKtC,GAC1D2O,EAAc5L,UAAY,+BAC1B4L,EAAclL,UAAYnB,KAAK2T,wBAC/B3T,KAAKX,QAAQ2F,kBAAkBnB,YAAYwI,GAE3CrM,KAAK8G,GAAGuF,EAAe,QAAS,WAC5B/C,EAAKsK,8BAGFvH,GAGXsH,sBAAuB,WACnB,MAAO,oKAKXC,0BAA2B,SAAUvM,GACjC,GAAIrH,KAAK6T,aAAc,CAEnB,GAAIvK,GAAOtJ,KACP8O,EAAQ9O,KAAKX,QAAQkE,cAAcU,cACnCtB,EAAM3C,KAAKX,QAAQuD,cAAcC,cAErCiM,GAAMgF,mBAAmBxK,EAAKuK,cAC9BlR,EAAIQ,kBACJR,EAAIU,SAASyL,GACbpB,WAAW,WACHpE,EAAKuK,cACLvK,EAAKoI,eAAepI,EAAKuK,aAAajB,MAE1CtJ,EAAK0C,kBAAmB,GACzB,IAAM1C,EAAKjK,QAAQuF,OAI1B5E,KAAKqQ,qBAGT0D,qBAAsB,SAAU1M,GAC5B,GAAIiC,GAAOtJ,KACPgU,GAAa,EACbC,EAAW,SAAAC,GJuIV,QAASD,KACL,MAAOC,GAAa7K,MAAMrJ,KAAM+I,WAOpC,MAJAkL,GAAYlG,SAAW,WACnB,MAAOmG,GAAanG,YAGjBkG,GI/IM,WAEVD,GAAa,EACb1K,EAAKlC,IAAIkC,EAAKuK,aAAc,WAAYI,IAGhD,IAAI5M,EAAEN,QAA6C,MAAnCM,EAAEN,OAAOyC,QAAQE,cAAuB,CAKpD,IAAK,mBAAmB4J,KAAKjM,EAAEN,OAAOoN,YAAc,oBAAoBb,KAAKjM,EAAEN,OAAOoN,WAClF,OAAO,CAIX,IAAInU,KAAK8L,QAAQ+D,UAAUkC,SAAS,gCAEhC,OAAO,CAEX/R,MAAK6T,aAAexM,EAAEN,OACtB/G,KAAK8G,GAAG9G,KAAK6T,aAAc,WAAYI,GAGvCvG,WAAW,WACHsG,GACA1K,EAAKoJ,kBAAkBrL,EAAEN,SAE9BuC,EAAKjK,QAAQuF,SAMxB0D,kBAAmB,SAAUhB,GACzB,GAAI9E,GAAG8G,EAAOtJ,IAId,KAHAA,KAAKoU,4BAA8B,SAAU/M,GACzCiC,EAAKyK,qBAAqB1M,IAEzB7E,EAAI,EAAGA,EAAIxC,KAAKwB,SAAS4B,OAAQZ,GAAK,EACvCxC,KAAK8G,GAAG9G,KAAKwB,SAASgB,GAAI,YAAaxC,KAAKoU,4BAEhD,OAAOpU,OAGX0E,gBAAiB,SAAUiE,GACvB,GAAI0L,GAAK,qCACT,QAAQA,EAAGf,KAAK3K,GAAS,GAAK,WAAaA,GAG/C2L,eAAgB,SAAUrF,GACtB,GAAIzM,EAEJ,IADAyM,EAAKA,GAAM3L,EAAkB1F,KAAKoC,MACD,MAA7BiP,EAAGzF,QAAQE,cACXuF,EAAGlI,OAAS,aAIZ,KAFAkI,EAAKA,EAAGsF,qBAAqB,KAExB/R,EAAI,EAAGA,EAAIyM,EAAG7L,OAAQZ,GAAK,EAC5ByM,EAAGzM,GAAGuE,OAAS,UAK3ByN,eAAgB,SAAUC,GACtB,GAEIjS,GAAGkS,EAFHzF,EAAK3L,EAAkB1F,KAAKoC,MAC5B2U,EAAUF,EAAYG,MAAM,IAEhC,IAAiC,MAA7B3F,EAAGzF,QAAQE,cACX,IAAKgL,EAAI,EAAGA,EAAIC,EAAQvR,OAAQsR,GAAK,EACjCzF,EAAGY,UAAUC,IAAI6E,EAAQD,QAI7B,KADAzF,EAAKA,EAAGsF,qBAAqB,KACxB/R,EAAI,EAAGA,EAAIyM,EAAG7L,OAAQZ,GAAK,EAC5B,IAAKkS,EAAI,EAAGA,EAAIC,EAAQvR,OAAQsR,GAAK,EACjCzF,EAAGzM,GAAGqN,UAAUC,IAAI6E,EAAQD,KAM5CjC,WAAY,SAAU3F,EAAO/F,EAAQ0N,GACjC,GAAIjS,GAAGwE,CAEP,IAAkC,IAA9B8F,EAAMnE,MAAMC,OAAOxF,OAEnB,WADApD,MAAKkO,oBAoBT,IAhBAjL,EAAiBrF,KAAKoC,KAAMA,KAAKiS,gBAE7BjS,KAAKX,QAAQqF,kBACboI,EAAMnE,MAAQ3I,KAAK0E,gBAAgBoI,EAAMnE,QAG7C3I,KAAKX,QAAQkE,cAAcoG,YAAY,cAAc,EAAOmD,EAAMnE,QAE9D3I,KAAKX,QAAQ8F,aAA0B,WAAX4B,IAC5B/G,KAAKsU,iBAGLG,GACAzU,KAAKwU,eAAeC,GAGpBzU,KAAKX,QAAQ8F,aAA0B,WAAX4B,GAAuB0N,EAGnD,IAFAzN,EAAQhH,KAAKX,QAAQkE,cAAcsR,YAAY,cAC/C7N,EAAM8N,UAAU,SAAS,GAAM,EAAM9U,KAAKX,QAAQuD,eAC7CJ,EAAI,EAAGA,EAAIxC,KAAKwB,SAAS4B,OAAQZ,GAAK,EACvCxC,KAAKwB,SAASgB,GAAGuS,cAAc/N,EAIvChH,MAAK2N,iBACL3N,KAAK2O,qBACL7B,EAAMnE,MAAQ,IAGlB/B,kBAAmB,WACf,GAAIoO,GACA1L,EAAOtJ,IAUX,OATAA,MAAKiV,oBAAsB,WACvBxH,aAAauH,GACbA,EAActH,WAAW,WACjBpE,EAAKwC,SAAWxC,EAAKwC,QAAQ+D,UAAUkC,SAAS,iCAChDzI,EAAKoF,sBAEV,MAEP1O,KAAK8G,GAAG9G,KAAKX,QAAQuD,cAAe,SAAU5C,KAAKiV,qBAC5CjV,MAGXkV,SAAU,WACFlV,KAAKuG,UAITvG,KAAKqG,SAIT/F,WAAY,WACR,GAAIkC,EACJ,IAAKxC,KAAKuG,SAAV,CAYA,IATAvG,KAAKuG,UAAW,EAEKvE,SAAjBhC,KAAK8L,UACL9L,KAAKX,QAAQ2F,kBAAkBmQ,YAAYnV,KAAKqM,eAChDrM,KAAKX,QAAQ2F,kBAAkBmQ,YAAYnV,KAAK8L,eACzC9L,MAAK8L,cACL9L,MAAKqM,eAGX7J,EAAI,EAAGA,EAAIxC,KAAKwB,SAAS4B,OAAQZ,GAAK,EACvCxC,KAAKwB,SAASgB,GAAG4S,gBAAgB,mBACjCpV,KAAKwB,SAASgB,GAAG4S,gBAAgB,sBAGrCpV,MAAK0H,oBAGT2N,aAAc,SAAUC,GAGpB,MAAOC,QAAOD,GAAKhH,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,WAGxG5H,UAAW,WACP,GAAIlE,GAAG8G,EAAOtJ,IAmCd,KAlCAA,KAAKwV,aAAe,SAAUnO,GAC1B,GAAIoO,GAEA1X,EADAoB,EAAO,EAIX,IADAa,KAAK6P,UAAUE,OAAO,8BACjBzG,EAAKjK,QAAQ4F,iBAAmBqE,EAAKjK,QAAQsF,gBAC9C,MAAO3E,KAGX,IAAIqH,EAAEqO,eAAiBrO,EAAEqO,cAAcC,UAAYtO,EAAEuO,iBAAkB,CAGnE,GAFAvO,EAAE2C,iBAEEV,EAAKjK,QAAQsF,iBAAmB0C,EAAEqO,cAAcC,QAAQ,aACxD,MAAOrM,GAAKuM,WAAWxO,EAAEqO,cAAcC,QAAQ,aAEnD,IAAMrM,EAAKjK,QAAQwF,eAAiB7E,KAAK8H,aAAa,uBAalD3I,EAAOmK,EAAK+L,aAAahO,EAAEqO,cAAcC,QAAQ,eACjDrM,EAAKjK,QAAQkE,cAAcoG,YAAY,cAAc,EAAOxK,OAde,CAE3E,IADAsW,EAAapO,EAAEqO,cAAcC,QAAQ,cAAcf,MAAM,WACpD7W,EAAI,EAAGA,EAAI0X,EAAWrS,OAAQrF,GAAK,EACd,KAAlB0X,EAAW1X,KAEPoB,GADAyG,UAAUI,UAAUuI,MAAM,aAAqB,IAANxQ,EACjCuL,EAAK+L,aAAaI,EAAW1X,IAE7B,MAAQuL,EAAK+L,aAAaI,EAAW1X,IAAM,OAI/DuL,GAAKjK,QAAQkE,cAAcoG,YAAY,cAAc,EAAOxK,MAOnEqD,EAAI,EAAGA,EAAIxC,KAAKwB,SAAS4B,OAAQZ,GAAK,EACvCxC,KAAK8G,GAAG9G,KAAKwB,SAASgB,GAAI,QAASxC,KAAKwV,aAE5C,OAAOxV,OAGX2G,gBAAiB,WACb,GAAInE,GACAsT,EAAsB,SAAU7G,GACtBA,EAAG/C,cAAc,QACb+C,EAAG/C,cAAc,eAC0B,KAA7C+C,EAAG/N,YAAYoN,QAAQ,aAAc,KACzCW,EAAGY,UAAUC,IAAI,8BAGzBiG,EAAqB,SAAU1O,GAC3BrH,KAAK6P,UAAUE,OAAO,6BACP,aAAX1I,EAAErD,MACF8R,EAAoB9V,MAGhC,KAAKwC,EAAI,EAAGA,EAAIxC,KAAKwB,SAAS4B,OAAQZ,GAAK,EACvCsT,EAAoB9V,KAAKwB,SAASgB,IAClCxC,KAAK8G,GAAG9G,KAAKwB,SAASgB,GAAI,OAAQuT,GAClC/V,KAAK8G,GAAG9G,KAAKwB,SAASgB,GAAI,WAAYuT,EAE1C,OAAO/V,OAGX6V,WAAY,SAAUzW,GASlB,GAAIoD,GAAGwT,EAAQC,EACXhH,EAAKjP,KAAK6J,sBACVqM,EAAY,cAAc5C,KAAKlU,GAC/B+W,IAGK,GAAIrQ,QAAO,oCAAqC,KAChD,GAAIA,QAAO,wBAAyB,KAGpC,GAAIA,QAAO,oDAAqD,MAChE,GAAIA,QAAO,2CAA4C,SAGvD,GAAIA,QAAO,6FAA8F,4CAGzG,GAAIA,QAAO,uCAAwC,uCAGnD,GAAIA,QAAO,sCAAuC,qCAGlD,GAAIA,QAAO,0BAA2B,WAGtC,GAAIA,QAAO,sFAAuF,iBAK3G,KAAKtD,EAAI,EAAGA,EAAI2T,EAAa/S,OAAQZ,GAAK,EACtCpD,EAAOA,EAAKkP,QAAQ6H,EAAa3T,GAAG,GAAI2T,EAAa3T,GAAG,GAG5D,IAAI0T,EAUA,IAPAF,EAAS5W,EAAKwV,MAAM,YAEpB5U,KAAKoW,UAAU,MAAQJ,EAAOK,KAAK,WAAa,QAChDrW,KAAKX,QAAQkE,cAAcoG,YAAY,cAAc,EAAO,MAG5DqM,EAAS/G,EAAG7I,iBAAiB,cACxB5D,EAAI,EAAGA,EAAIwT,EAAO5S,OAAQZ,GAAK,EAIhC,OAFAyT,EAASD,EAAOxT,GAERyT,EAAOzM,QAAQE,eACvB,IAAK,IACG1J,KAAKX,QAAQ8F,aACfnF,KAAKsU,eAAe2B,EAEtB,MACJ,KAAK,IACL,IAAK,MACDjW,KAAKsW,mBAAmBL,EACxB,MACJ,KAAK,KACDjW,KAAKuW,gBAAgBN,OAS7BjW,MAAKoW,UAAUhX,IAMvBgX,UAAW,SAAUjX,GACjB,GAAI6W,GAAQC,EAAQzT,EAAGgU,EAAcC,EAAazW,KAAKX,QAAQkE,cAAcmT,wBAU7E,KARAD,EAAW5S,YAAY7D,KAAKX,QAAQkE,cAAc/C,cAAc,SAEhEgW,EAAeC,EAAWvK,cAAc,QACxCsK,EAAarV,UAAYhC,EAEzBa,KAAK2W,aAAaH,GAElBR,EAASQ,EAAapQ,iBAAiB,KAClC5D,EAAI,EAAGA,EAAIwT,EAAO5S,OAAQZ,GAAK,EAEhCyT,EAASD,EAAOxT,GAGhByT,EAAOb,gBAAgB,SACvBa,EAAOb,gBAAgB,SACvBa,EAAOb,gBAAgB,OAEc,SAAjCa,EAAOzM,QAAQE,eACfuM,EAAO3T,WAAW6S,YAAYc,EAItCjW,MAAKX,QAAQkE,cAAcoG,YAAY,cAAc,EAAO6M,EAAarV,UAAUmN,QAAQ,UAAW,OAE1GsI,cAAe,SAAU3H,GACrB,MAAQA,KAAoC,MAA7BA,EAAGzF,QAAQE,eAAsD,QAA7BuF,EAAGzF,QAAQE,gBAElE4M,mBAAoB,SAAUrH,GACtB,QAAQqE,KAAKrE,EAAGhF,YAChBgF,EAAG3M,WAAW6S,YAAYlG;;EAGlCsH,gBAAiB,SAAUtH,GACnBjP,KAAK4W,cAAc3H,EAAG4H,wBAGtB5H,EAAG3M,WAAW6S,YAAYlG,IAEnBjP,KAAK4W,cAAc3H,EAAG3M,aAAgB2M,EAAG3M,WAAW+K,aAAe4B,GAAMA,EAAG3M,WAAWwU,YAAc7H,EAKjE,IAApCA,EAAG3M,WAAWyU,mBAGrB/W,KAAKgX,iBAAiB/H,GALtBA,EAAG3M,WAAW6S,YAAYlG,IAYlC+H,iBAAkB,SAAU/H,GACpBA,GAAMA,EAAG3M,aACL2M,EAAG3M,WAAWA,YAAkD,IAApC2M,EAAG3M,WAAWyU,kBAC1C9H,EAAG3M,WAAWA,WAAW6S,YAAYlG,EAAG3M,YAExC2M,EAAG3M,WAAW6S,YAAYlG,EAAG3M,cAKzCqU,aAAc,SAAUM,GAEpB,GAAIzU,GACAyM,EACAiI,EACAC,EAAQF,EAAa7Q,iBAAiB,gBAE1C,KAAK5D,EAAI,EAAGA,EAAI2U,EAAM/T,OAAQZ,GAAK,EAE/ByM,EAAKkI,EAAM3U,GACX0U,EAASlX,KAAKX,QAAQkE,cAAc/C,cAAcyO,EAAGY,UAAUkC,SAAS,QAAU,IAAM,KAEpF9C,EAAGY,UAAUkC,SAAS,SAAW9C,EAAGY,UAAUkC,SAAS,UAGvDmF,EAAO/V,UAAY,MAAQ8N,EAAG9N,UAAY,OAI1C+V,EAAO/V,UAAY8N,EAAG9N,UAG1B8N,EAAG3M,WAAW8U,aAAaF,EAAQjI,EAKvC,KADAkI,EAAQF,EAAa7Q,iBAAiB,QACjC5D,EAAI,EAAGA,EAAI2U,EAAM/T,OAAQZ,GAAK,EAE/ByM,EAAKkI,EAAM3U,GAGP,QAAQ8Q,OACRrE,EAAG3M,WAAW6S,YAAYlG,GAE1BA,EAAG3M,WAAW8U,aAAapX,KAAKX,QAAQkE,cAAc8T,eAAepI,EAAGhF,WAAYgF,MAStGvN,OAAQC,WJqIJ2V,GACA,SAASla,EAAQC,EAASE","file":"addons/medium.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\t\n\t/**\n\t * This component adds a medium.com-like rich text editor block type.\n\t *\n\t * Source for this component can be found here:\n\t * https://github.com/daviferreira/medium-editor\n\t */\n\t\n\tvar _MediumEditor = __webpack_require__(15);\n\t\n\tvar _MediumEditor2 = _interopRequireWildcard(_MediumEditor);\n\t\n\tvar _React = __webpack_require__(1);\n\t\n\tvar _React2 = _interopRequireWildcard(_React);\n\t\n\t__webpack_require__(37);\n\t\n\tvar Medium = _React2['default'].createClass({\n\t  displayName: 'Medium',\n\t\n\t  propTypes: {\n\t    content: _React2['default'].PropTypes.object.isRequired,\n\t    onChange: _React2['default'].PropTypes.func.isRequired\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      content: { html: '', text: '' },\n\t      options: {\n\t        buttons: ['header1', 'header2', 'bold', 'italic', 'underline', 'anchor', 'quote', 'unorderedlist', 'orderedlist'],\n\t        firstHeader: 'h1',\n\t        secondHeader: 'h2',\n\t        diffLeft: 0,\n\t        diffTop: -10,\n\t        disableDoubleReturn: true\n\t      }\n\t    };\n\t  },\n\t\n\t  shouldComponentUpdate: function shouldComponentUpdate(props, state) {\n\t    return false;\n\t  },\n\t\n\t  componentDidMount: function componentDidMount() {\n\t    this.setState({\n\t      editor: new _MediumEditor2['default'](this.refs.editor.getDOMNode(), this.props.options)\n\t    });\n\t  },\n\t\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    this.state.editor.deactivate();\n\t  },\n\t\n\t  render: function render() {\n\t    return _React2['default'].createElement(\n\t      'div',\n\t      { className: 'col-block-medium' },\n\t      _React2['default'].createElement('div', { className: 'col-medium', onBlur: this._onBlur, role: 'textarea', 'aria-multiline': 'true', ref: 'editor', dangerouslySetInnerHTML: { __html: this.props.content.html } }),\n\t      this.props.children\n\t    );\n\t  },\n\t\n\t  _onBlur: function _onBlur() {\n\t    var editor = this.refs.editor.getDOMNode();\n\t\n\t    this.props.onChange({\n\t      text: editor.textContent,\n\t      html: editor.innerHTML\n\t    });\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = Medium;\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"react\");\n\n/***/ },\n\n/***/ 15:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*global module, console, define*/\n\t\n\t'use strict';\n\t\n\tfunction MediumEditor(elements, options) {\n\t    'use strict';\n\t    return this.init(elements, options);\n\t}\n\t\n\tif (true) {\n\t    module.exports = MediumEditor;\n\t}\n\t// AMD support\n\telse if (typeof define === 'function' && define.amd) {\n\t    define(function () {\n\t        'use strict';\n\t        return MediumEditor;\n\t    });\n\t}\n\t\n\t(function (window, document) {\n\t    'use strict';\n\t\n\t    function extend(b, a) {\n\t        var prop;\n\t        if (b === undefined) {\n\t            return a;\n\t        }\n\t        for (prop in a) {\n\t            if (a.hasOwnProperty(prop) && b.hasOwnProperty(prop) === false) {\n\t                b[prop] = a[prop];\n\t            }\n\t        }\n\t        return b;\n\t    }\n\t\n\t    function isDescendant(parent, child) {\n\t        var node = child.parentNode;\n\t        while (node !== null) {\n\t            if (node === parent) {\n\t                return true;\n\t            }\n\t            node = node.parentNode;\n\t        }\n\t        return false;\n\t    }\n\t\n\t    // http://stackoverflow.com/questions/5605401/insert-link-in-contenteditable-element\n\t    // by Tim Down\n\t    function saveSelection() {\n\t        var i,\n\t            len,\n\t            ranges,\n\t            sel = this.options.contentWindow.getSelection();\n\t        if (sel.getRangeAt && sel.rangeCount) {\n\t            ranges = [];\n\t            for (i = 0, len = sel.rangeCount; i < len; i += 1) {\n\t                ranges.push(sel.getRangeAt(i));\n\t            }\n\t            return ranges;\n\t        }\n\t        return null;\n\t    }\n\t\n\t    function restoreSelection(savedSel) {\n\t        var i,\n\t            len,\n\t            sel = this.options.contentWindow.getSelection();\n\t        if (savedSel) {\n\t            sel.removeAllRanges();\n\t            for (i = 0, len = savedSel.length; i < len; i += 1) {\n\t                sel.addRange(savedSel[i]);\n\t            }\n\t        }\n\t    }\n\t\n\t    // http://stackoverflow.com/questions/1197401/how-can-i-get-the-element-the-caret-is-in-with-javascript-when-using-contentedi\n\t    // by You\n\t    function getSelectionStart() {\n\t        var node = this.options.ownerDocument.getSelection().anchorNode,\n\t            startNode = node && node.nodeType === 3 ? node.parentNode : node;\n\t        return startNode;\n\t    }\n\t\n\t    // http://stackoverflow.com/questions/4176923/html-of-selected-text\n\t    // by Tim Down\n\t    function getSelectionHtml() {\n\t        var i,\n\t            html = '',\n\t            sel,\n\t            len,\n\t            container;\n\t        if (this.options.contentWindow.getSelection !== undefined) {\n\t            sel = this.options.contentWindow.getSelection();\n\t            if (sel.rangeCount) {\n\t                container = this.options.ownerDocument.createElement('div');\n\t                for (i = 0, len = sel.rangeCount; i < len; i += 1) {\n\t                    container.appendChild(sel.getRangeAt(i).cloneContents());\n\t                }\n\t                html = container.innerHTML;\n\t            }\n\t        } else if (this.options.ownerDocument.selection !== undefined) {\n\t            if (this.options.ownerDocument.selection.type === 'Text') {\n\t                html = this.options.ownerDocument.selection.createRange().htmlText;\n\t            }\n\t        }\n\t        return html;\n\t    }\n\t\n\t    // https://github.com/jashkenas/underscore\n\t    function isElement(obj) {\n\t        return !!(obj && obj.nodeType === 1);\n\t    }\n\t\n\t    MediumEditor.prototype = {\n\t        defaults: {\n\t            allowMultiParagraphSelection: true,\n\t            anchorInputPlaceholder: 'Paste or type a link',\n\t            anchorPreviewHideDelay: 500,\n\t            buttons: ['bold', 'italic', 'underline', 'anchor', 'header1', 'header2', 'quote'],\n\t            buttonLabels: false,\n\t            checkLinkFormat: false,\n\t            cleanPastedHTML: false,\n\t            delay: 0,\n\t            diffLeft: 0,\n\t            diffTop: -10,\n\t            disableReturn: false,\n\t            disableDoubleReturn: false,\n\t            disableToolbar: false,\n\t            disableEditing: false,\n\t            elementsContainer: false,\n\t            contentWindow: window,\n\t            ownerDocument: document,\n\t            firstHeader: 'h3',\n\t            forcePlainText: true,\n\t            placeholder: 'Type your text',\n\t            secondHeader: 'h4',\n\t            targetBlank: false,\n\t            anchorTarget: false,\n\t            anchorButton: false,\n\t            anchorButtonClass: 'btn',\n\t            extensions: {},\n\t            activeButtonClass: 'medium-editor-button-active',\n\t            firstButtonClass: 'medium-editor-button-first',\n\t            lastButtonClass: 'medium-editor-button-last'\n\t        },\n\t\n\t        // http://stackoverflow.com/questions/17907445/how-to-detect-ie11#comment30165888_17907562\n\t        // by rg89\n\t        isIE: navigator.appName === 'Microsoft Internet Explorer' || navigator.appName === 'Netscape' && new RegExp('Trident/.*rv:([0-9]{1,}[.0-9]{0,})').exec(navigator.userAgent) !== null,\n\t\n\t        init: function init(elements, options) {\n\t            this.options = extend(options, this.defaults);\n\t            this.setElementSelection(elements);\n\t            if (this.elements.length === 0) {\n\t                return;\n\t            }\n\t            this.parentElements = ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'pre'];\n\t            if (!this.options.elementsContainer) {\n\t                this.options.elementsContainer = document.body;\n\t            }\n\t            this.id = this.options.elementsContainer.querySelectorAll('.medium-editor-toolbar').length + 1;\n\t            return this.setup();\n\t        },\n\t\n\t        setup: function setup() {\n\t            this.events = [];\n\t            this.isActive = true;\n\t            this.initElements().bindSelect().bindPaste().setPlaceholders().bindWindowActions().passInstance();\n\t        },\n\t\n\t        on: function on(target, event, listener, useCapture) {\n\t            target.addEventListener(event, listener, useCapture);\n\t            this.events.push([target, event, listener, useCapture]);\n\t        },\n\t\n\t        off: function off(target, event, listener, useCapture) {\n\t            var index = this.events.indexOf([target, event, listener, useCapture]),\n\t                e;\n\t            if (index !== -1) {\n\t                e = this.events.splice(index, 1);\n\t                e[0].removeEventListener(e[1], e[2], e[3]);\n\t            }\n\t        },\n\t\n\t        removeAllEvents: function removeAllEvents() {\n\t            var e = this.events.pop();\n\t            while (e) {\n\t                e[0].removeEventListener(e[1], e[2], e[3]);\n\t                e = this.events.pop();\n\t            }\n\t        },\n\t\n\t        initElements: function initElements() {\n\t            this.updateElementList();\n\t            var i,\n\t                addToolbar = false;\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                if (!this.options.disableEditing && !this.elements[i].getAttribute('data-disable-editing')) {\n\t                    this.elements[i].setAttribute('contentEditable', true);\n\t                }\n\t                if (!this.elements[i].getAttribute('data-placeholder')) {\n\t                    this.elements[i].setAttribute('data-placeholder', this.options.placeholder);\n\t                }\n\t                this.elements[i].setAttribute('data-medium-element', true);\n\t                this.bindParagraphCreation(i).bindReturn(i).bindTab(i);\n\t                if (!this.options.disableToolbar && !this.elements[i].getAttribute('data-disable-toolbar')) {\n\t                    addToolbar = true;\n\t                }\n\t            }\n\t            // Init toolbar\n\t            if (addToolbar) {\n\t                this.initToolbar().bindButtons().bindAnchorForm().bindAnchorPreview();\n\t            }\n\t            return this;\n\t        },\n\t\n\t        setElementSelection: function setElementSelection(selector) {\n\t            this.elementSelection = selector;\n\t            this.updateElementList();\n\t        },\n\t\n\t        updateElementList: function updateElementList() {\n\t            this.elements = typeof this.elementSelection === 'string' ? this.options.ownerDocument.querySelectorAll(this.elementSelection) : this.elementSelection;\n\t            if (this.elements.nodeType === 1) {\n\t                this.elements = [this.elements];\n\t            }\n\t        },\n\t\n\t        serialize: function serialize() {\n\t            var i,\n\t                elementid,\n\t                content = {};\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                elementid = this.elements[i].id !== '' ? this.elements[i].id : 'element-' + i;\n\t                content[elementid] = {\n\t                    value: this.elements[i].innerHTML.trim()\n\t                };\n\t            }\n\t            return content;\n\t        },\n\t\n\t        /**\n\t         * Helper function to call a method with a number of parameters on all registered extensions.\n\t         * The function assures that the function exists before calling.\n\t         *\n\t         * @param {string} funcName name of the function to call\n\t         * @param [args] arguments passed into funcName\n\t         */\n\t        callExtensions: function callExtensions(funcName) {\n\t            if (arguments.length < 1) {\n\t                return;\n\t            }\n\t\n\t            var args = Array.prototype.slice.call(arguments, 1),\n\t                ext,\n\t                name;\n\t\n\t            for (name in this.options.extensions) {\n\t                if (this.options.extensions.hasOwnProperty(name)) {\n\t                    ext = this.options.extensions[name];\n\t                    if (ext[funcName] !== undefined) {\n\t                        ext[funcName].apply(ext, args);\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Pass current Medium Editor instance to all extensions\n\t         * if extension constructor has 'parent' attribute set to 'true'\n\t         *\n\t         */\n\t        passInstance: function passInstance() {\n\t            var self = this,\n\t                ext,\n\t                name;\n\t\n\t            for (name in self.options.extensions) {\n\t                if (self.options.extensions.hasOwnProperty(name)) {\n\t                    ext = self.options.extensions[name];\n\t\n\t                    if (ext.parent) {\n\t                        ext.base = self;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return self;\n\t        },\n\t\n\t        bindParagraphCreation: function bindParagraphCreation(index) {\n\t            var self = this;\n\t            this.on(this.elements[index], 'keypress', function (e) {\n\t                var node = getSelectionStart.call(self),\n\t                    tagName;\n\t                if (e.which === 32) {\n\t                    tagName = node.tagName.toLowerCase();\n\t                    if (tagName === 'a') {\n\t                        document.execCommand('unlink', false, null);\n\t                    }\n\t                }\n\t            });\n\t\n\t            this.on(this.elements[index], 'keyup', function (e) {\n\t                var node = getSelectionStart.call(self),\n\t                    tagName,\n\t                    editorElement;\n\t\n\t                if (node && node.getAttribute('data-medium-element') && node.children.length === 0 && !(self.options.disableReturn || node.getAttribute('data-disable-return'))) {\n\t                    document.execCommand('formatBlock', false, 'p');\n\t                }\n\t                if (e.which === 13) {\n\t                    node = getSelectionStart.call(self);\n\t                    tagName = node.tagName.toLowerCase();\n\t                    editorElement = self.getSelectionElement();\n\t\n\t                    if (!(self.options.disableReturn || editorElement.getAttribute('data-disable-return')) && tagName !== 'li' && !self.isListItemChild(node)) {\n\t                        if (!e.shiftKey) {\n\t                            document.execCommand('formatBlock', false, 'p');\n\t                        }\n\t                        if (tagName === 'a') {\n\t                            document.execCommand('unlink', false, null);\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t            return this;\n\t        },\n\t\n\t        isListItemChild: function isListItemChild(node) {\n\t            var parentNode = node.parentNode,\n\t                tagName = parentNode.tagName.toLowerCase();\n\t            while (this.parentElements.indexOf(tagName) === -1 && tagName !== 'div') {\n\t                if (tagName === 'li') {\n\t                    return true;\n\t                }\n\t                parentNode = parentNode.parentNode;\n\t                if (parentNode && parentNode.tagName) {\n\t                    tagName = parentNode.tagName.toLowerCase();\n\t                } else {\n\t                    return false;\n\t                }\n\t            }\n\t            return false;\n\t        },\n\t\n\t        bindReturn: function bindReturn(index) {\n\t            var self = this;\n\t            this.on(this.elements[index], 'keypress', function (e) {\n\t                if (e.which === 13) {\n\t                    if (self.options.disableReturn || this.getAttribute('data-disable-return')) {\n\t                        e.preventDefault();\n\t                    } else if (self.options.disableDoubleReturn || this.getAttribute('data-disable-double-return')) {\n\t                        var node = getSelectionStart.call(self);\n\t                        if (node && node.innerText === '\\n') {\n\t                            e.preventDefault();\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t            return this;\n\t        },\n\t\n\t        bindTab: function bindTab(index) {\n\t            var self = this;\n\t            this.on(this.elements[index], 'keydown', function (e) {\n\t                if (e.which === 9) {\n\t                    // Override tab only for pre nodes\n\t                    var tag = getSelectionStart.call(self).tagName.toLowerCase();\n\t                    if (tag === 'pre') {\n\t                        e.preventDefault();\n\t                        document.execCommand('insertHtml', null, '    ');\n\t                    }\n\t\n\t                    // Tab to indent list structures!\n\t                    if (tag === 'li') {\n\t                        e.preventDefault();\n\t\n\t                        // If Shift is down, outdent, otherwise indent\n\t                        if (e.shiftKey) {\n\t                            document.execCommand('outdent', e);\n\t                        } else {\n\t                            document.execCommand('indent', e);\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t            return this;\n\t        },\n\t\n\t        buttonTemplate: function buttonTemplate(btnType) {\n\t            var buttonLabels = this.getButtonLabels(this.options.buttonLabels),\n\t                buttonTemplates = {\n\t                bold: '<button class=\"medium-editor-action medium-editor-action-bold\" data-action=\"bold\" data-element=\"b\">' + buttonLabels.bold + '</button>',\n\t                italic: '<button class=\"medium-editor-action medium-editor-action-italic\" data-action=\"italic\" data-element=\"i\">' + buttonLabels.italic + '</button>',\n\t                underline: '<button class=\"medium-editor-action medium-editor-action-underline\" data-action=\"underline\" data-element=\"u\">' + buttonLabels.underline + '</button>',\n\t                strikethrough: '<button class=\"medium-editor-action medium-editor-action-strikethrough\" data-action=\"strikethrough\" data-element=\"strike\">' + buttonLabels.strikethrough + '</button>',\n\t                superscript: '<button class=\"medium-editor-action medium-editor-action-superscript\" data-action=\"superscript\" data-element=\"sup\">' + buttonLabels.superscript + '</button>',\n\t                subscript: '<button class=\"medium-editor-action medium-editor-action-subscript\" data-action=\"subscript\" data-element=\"sub\">' + buttonLabels.subscript + '</button>',\n\t                anchor: '<button class=\"medium-editor-action medium-editor-action-anchor\" data-action=\"anchor\" data-element=\"a\">' + buttonLabels.anchor + '</button>',\n\t                image: '<button class=\"medium-editor-action medium-editor-action-image\" data-action=\"image\" data-element=\"img\">' + buttonLabels.image + '</button>',\n\t                header1: '<button class=\"medium-editor-action medium-editor-action-header1\" data-action=\"append-' + this.options.firstHeader + '\" data-element=\"' + this.options.firstHeader + '\">' + buttonLabels.header1 + '</button>',\n\t                header2: '<button class=\"medium-editor-action medium-editor-action-header2\" data-action=\"append-' + this.options.secondHeader + '\" data-element=\"' + this.options.secondHeader + '\">' + buttonLabels.header2 + '</button>',\n\t                quote: '<button class=\"medium-editor-action medium-editor-action-quote\" data-action=\"append-blockquote\" data-element=\"blockquote\">' + buttonLabels.quote + '</button>',\n\t                orderedlist: '<button class=\"medium-editor-action medium-editor-action-orderedlist\" data-action=\"insertorderedlist\" data-element=\"ol\">' + buttonLabels.orderedlist + '</button>',\n\t                unorderedlist: '<button class=\"medium-editor-action medium-editor-action-unorderedlist\" data-action=\"insertunorderedlist\" data-element=\"ul\">' + buttonLabels.unorderedlist + '</button>',\n\t                pre: '<button class=\"medium-editor-action medium-editor-action-pre\" data-action=\"append-pre\" data-element=\"pre\">' + buttonLabels.pre + '</button>',\n\t                indent: '<button class=\"medium-editor-action medium-editor-action-indent\" data-action=\"indent\" data-element=\"ul\">' + buttonLabels.indent + '</button>',\n\t                outdent: '<button class=\"medium-editor-action medium-editor-action-outdent\" data-action=\"outdent\" data-element=\"ul\">' + buttonLabels.outdent + '</button>',\n\t                justifyCenter: '<button class=\"medium-editor-action medium-editor-action-justifyCenter\" data-action=\"justifyCenter\" data-element=\"\">' + buttonLabels.justifyCenter + '</button>',\n\t                justifyFull: '<button class=\"medium-editor-action medium-editor-action-justifyFull\" data-action=\"justifyFull\" data-element=\"\">' + buttonLabels.justifyFull + '</button>',\n\t                justifyLeft: '<button class=\"medium-editor-action medium-editor-action-justifyLeft\" data-action=\"justifyLeft\" data-element=\"\">' + buttonLabels.justifyLeft + '</button>',\n\t                justifyRight: '<button class=\"medium-editor-action medium-editor-action-justifyRight\" data-action=\"justifyRight\" data-element=\"\">' + buttonLabels.justifyRight + '</button>'\n\t            };\n\t            return buttonTemplates[btnType] || false;\n\t        },\n\t\n\t        // TODO: break method\n\t        getButtonLabels: function getButtonLabels(buttonLabelType) {\n\t            var customButtonLabels,\n\t                attrname,\n\t                buttonLabels = {\n\t                bold: '<b>B</b>',\n\t                italic: '<b><i>I</i></b>',\n\t                underline: '<b><u>U</u></b>',\n\t                strikethrough: '<s>A</s>',\n\t                superscript: '<b>x<sup>1</sup></b>',\n\t                subscript: '<b>x<sub>1</sub></b>',\n\t                anchor: '<b>#</b>',\n\t                image: '<b>image</b>',\n\t                header1: '<b>H1</b>',\n\t                header2: '<b>H2</b>',\n\t                quote: '<b>&ldquo;</b>',\n\t                orderedlist: '<b>1.</b>',\n\t                unorderedlist: '<b>&bull;</b>',\n\t                pre: '<b>0101</b>',\n\t                indent: '<b>&rarr;</b>',\n\t                outdent: '<b>&larr;</b>',\n\t                justifyCenter: '<b>C</b>',\n\t                justifyFull: '<b>J</b>',\n\t                justifyLeft: '<b>L</b>',\n\t                justifyRight: '<b>R</b>'\n\t            };\n\t            if (buttonLabelType === 'fontawesome') {\n\t                customButtonLabels = {\n\t                    bold: '<i class=\"fa fa-bold\"></i>',\n\t                    italic: '<i class=\"fa fa-italic\"></i>',\n\t                    underline: '<i class=\"fa fa-underline\"></i>',\n\t                    strikethrough: '<i class=\"fa fa-strikethrough\"></i>',\n\t                    superscript: '<i class=\"fa fa-superscript\"></i>',\n\t                    subscript: '<i class=\"fa fa-subscript\"></i>',\n\t                    anchor: '<i class=\"fa fa-link\"></i>',\n\t                    image: '<i class=\"fa fa-picture-o\"></i>',\n\t                    quote: '<i class=\"fa fa-quote-right\"></i>',\n\t                    orderedlist: '<i class=\"fa fa-list-ol\"></i>',\n\t                    unorderedlist: '<i class=\"fa fa-list-ul\"></i>',\n\t                    pre: '<i class=\"fa fa-code fa-lg\"></i>',\n\t                    indent: '<i class=\"fa fa-indent\"></i>',\n\t                    outdent: '<i class=\"fa fa-outdent\"></i>',\n\t                    justifyCenter: '<i class=\"fa fa-align-center\"></i>',\n\t                    justifyFull: '<i class=\"fa fa-align-justify\"></i>',\n\t                    justifyLeft: '<i class=\"fa fa-align-left\"></i>',\n\t                    justifyRight: '<i class=\"fa fa-align-right\"></i>'\n\t                };\n\t            } else if (typeof buttonLabelType === 'object') {\n\t                customButtonLabels = buttonLabelType;\n\t            }\n\t            if (typeof customButtonLabels === 'object') {\n\t                for (attrname in customButtonLabels) {\n\t                    if (customButtonLabels.hasOwnProperty(attrname)) {\n\t                        buttonLabels[attrname] = customButtonLabels[attrname];\n\t                    }\n\t                }\n\t            }\n\t            return buttonLabels;\n\t        },\n\t\n\t        initToolbar: function initToolbar() {\n\t            if (this.toolbar) {\n\t                return this;\n\t            }\n\t            this.toolbar = this.createToolbar();\n\t            this.keepToolbarAlive = false;\n\t            this.anchorForm = this.toolbar.querySelector('.medium-editor-toolbar-form-anchor');\n\t            this.anchorInput = this.anchorForm.querySelector('input.medium-editor-toolbar-anchor-input');\n\t            this.anchorTarget = this.anchorForm.querySelector('input.medium-editor-toolbar-anchor-target');\n\t            this.anchorButton = this.anchorForm.querySelector('input.medium-editor-toolbar-anchor-button');\n\t            this.toolbarActions = this.toolbar.querySelector('.medium-editor-toolbar-actions');\n\t            this.anchorPreview = this.createAnchorPreview();\n\t\n\t            return this;\n\t        },\n\t\n\t        createToolbar: function createToolbar() {\n\t            var toolbar = document.createElement('div');\n\t            toolbar.id = 'medium-editor-toolbar-' + this.id;\n\t            toolbar.className = 'medium-editor-toolbar';\n\t            toolbar.appendChild(this.toolbarButtons());\n\t            toolbar.appendChild(this.toolbarFormAnchor());\n\t            this.options.elementsContainer.appendChild(toolbar);\n\t            return toolbar;\n\t        },\n\t\n\t        //TODO: actionTemplate\n\t        toolbarButtons: function toolbarButtons() {\n\t            var btns = this.options.buttons,\n\t                ul = document.createElement('ul'),\n\t                li,\n\t                i,\n\t                btn,\n\t                ext;\n\t\n\t            ul.id = 'medium-editor-toolbar-actions';\n\t            ul.className = 'medium-editor-toolbar-actions clearfix';\n\t\n\t            for (i = 0; i < btns.length; i += 1) {\n\t                if (this.options.extensions.hasOwnProperty(btns[i])) {\n\t                    ext = this.options.extensions[btns[i]];\n\t                    btn = ext.getButton !== undefined ? ext.getButton() : null;\n\t                } else {\n\t                    btn = this.buttonTemplate(btns[i]);\n\t                }\n\t\n\t                if (btn) {\n\t                    li = document.createElement('li');\n\t                    if (isElement(btn)) {\n\t                        li.appendChild(btn);\n\t                    } else {\n\t                        li.innerHTML = btn;\n\t                    }\n\t                    ul.appendChild(li);\n\t                }\n\t            }\n\t\n\t            return ul;\n\t        },\n\t\n\t        toolbarFormAnchor: function toolbarFormAnchor() {\n\t            var anchor = document.createElement('div'),\n\t                input = document.createElement('input'),\n\t                target_label = document.createElement('label'),\n\t                target = document.createElement('input'),\n\t                button_label = document.createElement('label'),\n\t                button = document.createElement('input'),\n\t                close = document.createElement('a'),\n\t                save = document.createElement('a');\n\t\n\t            close.setAttribute('href', '#');\n\t            close.className = 'medium-editor-toobar-anchor-close';\n\t            close.innerHTML = '&times;';\n\t\n\t            save.setAttribute('href', '#');\n\t            save.className = 'medium-editor-toobar-anchor-save';\n\t            save.innerHTML = '&#10003;';\n\t\n\t            input.setAttribute('type', 'text');\n\t            input.className = 'medium-editor-toolbar-anchor-input';\n\t            input.setAttribute('placeholder', this.options.anchorInputPlaceholder);\n\t\n\t            target.setAttribute('type', 'checkbox');\n\t            target.className = 'medium-editor-toolbar-anchor-target';\n\t            target_label.innerHTML = 'Open in New Window?';\n\t            target_label.insertBefore(target, target_label.firstChild);\n\t\n\t            button.setAttribute('type', 'checkbox');\n\t            button.className = 'medium-editor-toolbar-anchor-button';\n\t            button_label.innerHTML = 'Button';\n\t            button_label.insertBefore(button, button_label.firstChild);\n\t\n\t            anchor.className = 'medium-editor-toolbar-form-anchor';\n\t            anchor.id = 'medium-editor-toolbar-form-anchor';\n\t            anchor.appendChild(input);\n\t\n\t            anchor.appendChild(save);\n\t            anchor.appendChild(close);\n\t\n\t            if (this.options.anchorTarget) {\n\t                anchor.appendChild(target_label);\n\t            }\n\t\n\t            if (this.options.anchorButton) {\n\t                anchor.appendChild(button_label);\n\t            }\n\t\n\t            return anchor;\n\t        },\n\t\n\t        bindSelect: function bindSelect() {\n\t            var self = this,\n\t                timer = '',\n\t                i;\n\t\n\t            this.checkSelectionWrapper = function (e) {\n\t\n\t                // Do not close the toolbar when bluring the editable area and clicking into the anchor form\n\t                if (e && self.clickingIntoArchorForm(e)) {\n\t                    return false;\n\t                }\n\t\n\t                clearTimeout(timer);\n\t                timer = setTimeout(function () {\n\t                    self.checkSelection();\n\t                }, self.options.delay);\n\t            };\n\t\n\t            this.on(document.documentElement, 'mouseup', this.checkSelectionWrapper);\n\t\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                this.on(this.elements[i], 'keyup', this.checkSelectionWrapper);\n\t                this.on(this.elements[i], 'blur', this.checkSelectionWrapper);\n\t            }\n\t            return this;\n\t        },\n\t\n\t        checkSelection: function checkSelection() {\n\t            var newSelection, selectionElement;\n\t\n\t            if (this.keepToolbarAlive !== true && !this.options.disableToolbar) {\n\t\n\t                newSelection = this.options.contentWindow.getSelection();\n\t                if (newSelection.toString().trim() === '' || this.options.allowMultiParagraphSelection === false && this.hasMultiParagraphs() || this.selectionInContentEditableFalse()) {\n\t                    this.hideToolbarActions();\n\t                } else {\n\t                    selectionElement = this.getSelectionElement();\n\t                    if (!selectionElement || selectionElement.getAttribute('data-disable-toolbar')) {\n\t                        this.hideToolbarActions();\n\t                    } else {\n\t                        this.checkSelectionElement(newSelection, selectionElement);\n\t                    }\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t\n\t        clickingIntoArchorForm: function clickingIntoArchorForm(e) {\n\t            var self = this;\n\t\n\t            if (e.type && e.type.toLowerCase() === 'blur' && e.relatedTarget && e.relatedTarget === self.anchorInput) {\n\t                return true;\n\t            }\n\t\n\t            return false;\n\t        },\n\t\n\t        hasMultiParagraphs: function hasMultiParagraphs() {\n\t            var selectionHtml = getSelectionHtml.call(this).replace(/<[\\S]+><\\/[\\S]+>/gim, ''),\n\t                hasMultiParagraphs = selectionHtml.match(/<(p|h[0-6]|blockquote)>([\\s\\S]*?)<\\/(p|h[0-6]|blockquote)>/g);\n\t\n\t            return hasMultiParagraphs ? hasMultiParagraphs.length : 0;\n\t        },\n\t\n\t        checkSelectionElement: function checkSelectionElement(newSelection, selectionElement) {\n\t            var i;\n\t            this.selection = newSelection;\n\t            this.selectionRange = this.selection.getRangeAt(0);\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                if (this.elements[i] === selectionElement) {\n\t                    this.setToolbarButtonStates().setToolbarPosition().showToolbarActions();\n\t                    return;\n\t                }\n\t            }\n\t            this.hideToolbarActions();\n\t        },\n\t\n\t        findMatchingSelectionParent: function findMatchingSelectionParent(testElementFunction) {\n\t            var selection = this.options.contentWindow.getSelection(),\n\t                range,\n\t                current;\n\t\n\t            if (selection.rangeCount === 0) {\n\t                return false;\n\t            }\n\t\n\t            range = selection.getRangeAt(0);\n\t            current = range.commonAncestorContainer;\n\t\n\t            do {\n\t                if (current.nodeType === 1) {\n\t                    if (testElementFunction(current)) {\n\t                        return current;\n\t                    }\n\t                    // do not traverse upwards past the nearest containing editor\n\t                    if (current.getAttribute('data-medium-element')) {\n\t                        return false;\n\t                    }\n\t                }\n\t\n\t                current = current.parentNode;\n\t            } while (current);\n\t\n\t            return false;\n\t        },\n\t\n\t        getSelectionElement: function getSelectionElement() {\n\t            return this.findMatchingSelectionParent(function (el) {\n\t                return el.getAttribute('data-medium-element');\n\t            });\n\t        },\n\t\n\t        selectionInContentEditableFalse: function selectionInContentEditableFalse() {\n\t            return this.findMatchingSelectionParent(function (el) {\n\t                return el && el.nodeName !== '#text' && el.getAttribute('contenteditable') === 'false';\n\t            });\n\t        },\n\t\n\t        setToolbarPosition: function setToolbarPosition() {\n\t            var buttonHeight = 50,\n\t                selection = this.options.contentWindow.getSelection(),\n\t                range = selection.getRangeAt(0),\n\t                boundary = range.getBoundingClientRect(),\n\t                defaultLeft = this.options.diffLeft - this.toolbar.offsetWidth / 2,\n\t                middleBoundary = (boundary.left + boundary.right) / 2,\n\t                halfOffsetWidth = this.toolbar.offsetWidth / 2;\n\t            if (boundary.top < buttonHeight) {\n\t                this.toolbar.classList.add('medium-toolbar-arrow-over');\n\t                this.toolbar.classList.remove('medium-toolbar-arrow-under');\n\t                this.toolbar.style.top = buttonHeight + boundary.bottom - this.options.diffTop + this.options.contentWindow.pageYOffset - this.toolbar.offsetHeight + 'px';\n\t            } else {\n\t                this.toolbar.classList.add('medium-toolbar-arrow-under');\n\t                this.toolbar.classList.remove('medium-toolbar-arrow-over');\n\t                this.toolbar.style.top = boundary.top + this.options.diffTop + this.options.contentWindow.pageYOffset - this.toolbar.offsetHeight + 'px';\n\t            }\n\t            if (middleBoundary < halfOffsetWidth) {\n\t                this.toolbar.style.left = defaultLeft + halfOffsetWidth + 'px';\n\t            } else if (this.options.contentWindow.innerWidth - middleBoundary < halfOffsetWidth) {\n\t                this.toolbar.style.left = this.options.contentWindow.innerWidth + defaultLeft - halfOffsetWidth + 'px';\n\t            } else {\n\t                this.toolbar.style.left = defaultLeft + middleBoundary + 'px';\n\t            }\n\t\n\t            this.hideAnchorPreview();\n\t\n\t            return this;\n\t        },\n\t\n\t        setToolbarButtonStates: function setToolbarButtonStates() {\n\t            var buttons = this.toolbarActions.querySelectorAll('button'),\n\t                i;\n\t            for (i = 0; i < buttons.length; i += 1) {\n\t                buttons[i].classList.remove(this.options.activeButtonClass);\n\t            }\n\t            this.checkActiveButtons();\n\t            return this;\n\t        },\n\t\n\t        checkActiveButtons: function checkActiveButtons() {\n\t            var elements = Array.prototype.slice.call(this.elements),\n\t                parentNode = this.getSelectedParentElement();\n\t            while (parentNode.tagName !== undefined && this.parentElements.indexOf(parentNode.tagName.toLowerCase) === -1) {\n\t                this.activateButton(parentNode.tagName.toLowerCase());\n\t                this.callExtensions('checkState', parentNode);\n\t\n\t                // we can abort the search upwards if we leave the contentEditable element\n\t                if (elements.indexOf(parentNode) !== -1) {\n\t                    break;\n\t                }\n\t                parentNode = parentNode.parentNode;\n\t            }\n\t        },\n\t\n\t        activateButton: function activateButton(tag) {\n\t            var el = this.toolbar.querySelector('[data-element=\"' + tag + '\"]');\n\t            if (el !== null && el.className.indexOf(this.options.activeButtonClass) === -1) {\n\t                el.className += ' ' + this.options.activeButtonClass;\n\t            }\n\t        },\n\t\n\t        bindButtons: function bindButtons() {\n\t            var buttons = this.toolbar.querySelectorAll('button'),\n\t                i,\n\t                self = this,\n\t                triggerAction = function triggerAction(e) {\n\t                e.preventDefault();\n\t                e.stopPropagation();\n\t                if (self.selection === undefined) {\n\t                    self.checkSelection();\n\t                }\n\t                if (this.className.indexOf(self.options.activeButtonClass) > -1) {\n\t                    this.classList.remove(self.options.activeButtonClass);\n\t                } else {\n\t                    this.className += ' ' + self.options.activeButtonClass;\n\t                }\n\t                if (this.hasAttribute('data-action')) {\n\t                    self.execAction(this.getAttribute('data-action'), e);\n\t                }\n\t            };\n\t            for (i = 0; i < buttons.length; i += 1) {\n\t                this.on(buttons[i], 'click', triggerAction);\n\t            }\n\t            this.setFirstAndLastItems(buttons);\n\t            return this;\n\t        },\n\t\n\t        setFirstAndLastItems: function setFirstAndLastItems(buttons) {\n\t            if (buttons.length > 0) {\n\t                buttons[0].className += ' ' + this.options.firstButtonClass;\n\t                buttons[buttons.length - 1].className += ' ' + this.options.lastButtonClass;\n\t            }\n\t            return this;\n\t        },\n\t\n\t        execAction: function execAction(action, e) {\n\t            if (action.indexOf('append-') > -1) {\n\t                this.execFormatBlock(action.replace('append-', ''));\n\t                this.setToolbarPosition();\n\t                this.setToolbarButtonStates();\n\t            } else if (action === 'anchor') {\n\t                this.triggerAnchorAction(e);\n\t            } else if (action === 'image') {\n\t                this.options.ownerDocument.execCommand('insertImage', false, this.options.contentWindow.getSelection());\n\t            } else {\n\t                this.options.ownerDocument.execCommand(action, false, null);\n\t                this.setToolbarPosition();\n\t            }\n\t        },\n\t\n\t        // http://stackoverflow.com/questions/15867542/range-object-get-selection-parent-node-chrome-vs-firefox\n\t        rangeSelectsSingleNode: function rangeSelectsSingleNode(range) {\n\t            var startNode = range.startContainer;\n\t            return startNode === range.endContainer && startNode.hasChildNodes() && range.endOffset === range.startOffset + 1;\n\t        },\n\t\n\t        getSelectedParentElement: function getSelectedParentElement() {\n\t            var selectedParentElement = null,\n\t                range = this.selectionRange;\n\t            if (this.rangeSelectsSingleNode(range)) {\n\t                selectedParentElement = range.startContainer.childNodes[range.startOffset];\n\t            } else if (range.startContainer.nodeType === 3) {\n\t                selectedParentElement = range.startContainer.parentNode;\n\t            } else {\n\t                selectedParentElement = range.startContainer;\n\t            }\n\t            return selectedParentElement;\n\t        },\n\t\n\t        triggerAnchorAction: function triggerAnchorAction() {\n\t            var selectedParentElement = this.getSelectedParentElement();\n\t            if (selectedParentElement.tagName && selectedParentElement.tagName.toLowerCase() === 'a') {\n\t                this.options.ownerDocument.execCommand('unlink', false, null);\n\t            } else {\n\t                if (this.anchorForm.style.display === 'block') {\n\t                    this.showToolbarActions();\n\t                } else {\n\t                    this.showAnchorForm();\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t\n\t        execFormatBlock: function execFormatBlock(el) {\n\t            var selectionData = this.getSelectionData(this.selection.anchorNode);\n\t            // FF handles blockquote differently on formatBlock\n\t            // allowing nesting, we need to use outdent\n\t            // https://developer.mozilla.org/en-US/docs/Rich-Text_Editing_in_Mozilla\n\t            if (el === 'blockquote' && selectionData.el && selectionData.el.parentNode.tagName.toLowerCase() === 'blockquote') {\n\t                return this.options.ownerDocument.execCommand('outdent', false, null);\n\t            }\n\t            if (selectionData.tagName === el) {\n\t                el = 'p';\n\t            }\n\t            // When IE we need to add <> to heading elements and\n\t            //  blockquote needs to be called as indent\n\t            // http://stackoverflow.com/questions/10741831/execcommand-formatblock-headings-in-ie\n\t            // http://stackoverflow.com/questions/1816223/rich-text-editor-with-blockquote-function/1821777#1821777\n\t            if (this.isIE) {\n\t                if (el === 'blockquote') {\n\t                    return this.options.ownerDocument.execCommand('indent', false, el);\n\t                }\n\t                el = '<' + el + '>';\n\t            }\n\t            return this.options.ownerDocument.execCommand('formatBlock', false, el);\n\t        },\n\t\n\t        getSelectionData: function getSelectionData(el) {\n\t            var tagName;\n\t\n\t            if (el && el.tagName) {\n\t                tagName = el.tagName.toLowerCase();\n\t            }\n\t\n\t            while (el && this.parentElements.indexOf(tagName) === -1) {\n\t                el = el.parentNode;\n\t                if (el && el.tagName) {\n\t                    tagName = el.tagName.toLowerCase();\n\t                }\n\t            }\n\t\n\t            return {\n\t                el: el,\n\t                tagName: tagName\n\t            };\n\t        },\n\t\n\t        getFirstChild: function getFirstChild(el) {\n\t            var firstChild = el.firstChild;\n\t            while (firstChild !== null && firstChild.nodeType !== 1) {\n\t                firstChild = firstChild.nextSibling;\n\t            }\n\t            return firstChild;\n\t        },\n\t\n\t        hideToolbarActions: function hideToolbarActions() {\n\t            this.keepToolbarAlive = false;\n\t            if (this.toolbar !== undefined) {\n\t                this.toolbar.classList.remove('medium-editor-toolbar-active');\n\t            }\n\t        },\n\t\n\t        showToolbarActions: function showToolbarActions() {\n\t            var self = this,\n\t                timer;\n\t            this.anchorForm.style.display = 'none';\n\t            this.toolbarActions.style.display = 'block';\n\t            this.keepToolbarAlive = false;\n\t            clearTimeout(timer);\n\t            timer = setTimeout(function () {\n\t                if (self.toolbar && !self.toolbar.classList.contains('medium-editor-toolbar-active')) {\n\t                    self.toolbar.classList.add('medium-editor-toolbar-active');\n\t                }\n\t            }, 100);\n\t        },\n\t\n\t        saveSelection: (function (_saveSelection) {\n\t            function saveSelection() {\n\t                return _saveSelection.apply(this, arguments);\n\t            }\n\t\n\t            saveSelection.toString = function () {\n\t                return _saveSelection.toString();\n\t            };\n\t\n\t            return saveSelection;\n\t        })(function () {\n\t            this.savedSelection = saveSelection.call(this);\n\t        }),\n\t\n\t        restoreSelection: (function (_restoreSelection) {\n\t            function restoreSelection() {\n\t                return _restoreSelection.apply(this, arguments);\n\t            }\n\t\n\t            restoreSelection.toString = function () {\n\t                return _restoreSelection.toString();\n\t            };\n\t\n\t            return restoreSelection;\n\t        })(function () {\n\t            restoreSelection.call(this, this.savedSelection);\n\t        }),\n\t\n\t        showAnchorForm: function showAnchorForm(link_value) {\n\t            this.toolbarActions.style.display = 'none';\n\t            this.saveSelection();\n\t            this.anchorForm.style.display = 'block';\n\t            this.setToolbarPosition();\n\t            this.keepToolbarAlive = true;\n\t            this.anchorInput.focus();\n\t            this.anchorInput.value = link_value || '';\n\t        },\n\t\n\t        bindAnchorForm: function bindAnchorForm() {\n\t            var linkCancel = this.anchorForm.querySelector('a.medium-editor-toobar-anchor-close'),\n\t                linkSave = this.anchorForm.querySelector('a.medium-editor-toobar-anchor-save'),\n\t                self = this;\n\t\n\t            this.on(this.anchorForm, 'click', function (e) {\n\t                e.stopPropagation();\n\t                self.keepToolbarAlive = true;\n\t            });\n\t\n\t            this.on(this.anchorInput, 'keyup', function (e) {\n\t                var button = null,\n\t                    target;\n\t\n\t                if (e.keyCode === 13) {\n\t                    e.preventDefault();\n\t                    if (self.options.anchorTarget && self.anchorTarget.checked) {\n\t                        target = '_blank';\n\t                    } else {\n\t                        target = '_self';\n\t                    }\n\t\n\t                    if (self.options.anchorButton && self.anchorButton.checked) {\n\t                        button = self.options.anchorButtonClass;\n\t                    }\n\t\n\t                    self.createLink(this, target, button);\n\t                }\n\t            });\n\t\n\t            this.on(linkSave, 'click', function (e) {\n\t                var button = null,\n\t                    target;\n\t                e.preventDefault();\n\t                if (self.options.anchorTarget && self.anchorTarget.checked) {\n\t                    target = '_blank';\n\t                } else {\n\t                    target = '_self';\n\t                }\n\t\n\t                if (self.options.anchorButton && self.anchorButton.checked) {\n\t                    button = self.options.anchorButtonClass;\n\t                }\n\t\n\t                self.createLink(self.anchorInput, target, button);\n\t            }, true);\n\t\n\t            this.on(this.anchorInput, 'click', function (e) {\n\t                // make sure not to hide form when cliking into the input\n\t                e.stopPropagation();\n\t                self.keepToolbarAlive = true;\n\t            });\n\t\n\t            // Hide the anchor form when focusing outside of it.\n\t            this.on(this.options.ownerDocument.body, 'click', function (e) {\n\t                if (e.target !== self.anchorForm && !isDescendant(self.anchorForm, e.target) && !isDescendant(self.toolbarActions, e.target)) {\n\t                    self.keepToolbarAlive = false;\n\t                    self.checkSelection();\n\t                }\n\t            }, true);\n\t            this.on(this.options.ownerDocument.body, 'focus', function (e) {\n\t                if (e.target !== self.anchorForm && !isDescendant(self.anchorForm, e.target) && !isDescendant(self.toolbarActions, e.target)) {\n\t                    self.keepToolbarAlive = false;\n\t                    self.checkSelection();\n\t                }\n\t            }, true);\n\t\n\t            this.on(linkCancel, 'click', function (e) {\n\t                e.preventDefault();\n\t                self.showToolbarActions();\n\t                restoreSelection.call(self, self.savedSelection);\n\t            });\n\t            return this;\n\t        },\n\t\n\t        hideAnchorPreview: function hideAnchorPreview() {\n\t            this.anchorPreview.classList.remove('medium-editor-anchor-preview-active');\n\t        },\n\t\n\t        // TODO: break method\n\t        showAnchorPreview: function showAnchorPreview(anchorEl) {\n\t            if (this.anchorPreview.classList.contains('medium-editor-anchor-preview-active') || anchorEl.getAttribute('data-disable-preview')) {\n\t                return true;\n\t            }\n\t\n\t            var self = this,\n\t                buttonHeight = 40,\n\t                boundary = anchorEl.getBoundingClientRect(),\n\t                middleBoundary = (boundary.left + boundary.right) / 2,\n\t                halfOffsetWidth,\n\t                defaultLeft,\n\t                timer;\n\t\n\t            self.anchorPreview.querySelector('i').textContent = anchorEl.href;\n\t            halfOffsetWidth = self.anchorPreview.offsetWidth / 2;\n\t            defaultLeft = self.options.diffLeft - halfOffsetWidth;\n\t\n\t            clearTimeout(timer);\n\t            timer = setTimeout(function () {\n\t                if (self.anchorPreview && !self.anchorPreview.classList.contains('medium-editor-anchor-preview-active')) {\n\t                    self.anchorPreview.classList.add('medium-editor-anchor-preview-active');\n\t                }\n\t            }, 100);\n\t\n\t            self.observeAnchorPreview(anchorEl);\n\t\n\t            self.anchorPreview.classList.add('medium-toolbar-arrow-over');\n\t            self.anchorPreview.classList.remove('medium-toolbar-arrow-under');\n\t            self.anchorPreview.style.top = Math.round(buttonHeight + boundary.bottom - self.options.diffTop + this.options.contentWindow.pageYOffset - self.anchorPreview.offsetHeight) + 'px';\n\t            if (middleBoundary < halfOffsetWidth) {\n\t                self.anchorPreview.style.left = defaultLeft + halfOffsetWidth + 'px';\n\t            } else if (this.options.contentWindow.innerWidth - middleBoundary < halfOffsetWidth) {\n\t                self.anchorPreview.style.left = this.options.contentWindow.innerWidth + defaultLeft - halfOffsetWidth + 'px';\n\t            } else {\n\t                self.anchorPreview.style.left = defaultLeft + middleBoundary + 'px';\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        // TODO: break method\n\t        observeAnchorPreview: function observeAnchorPreview(anchorEl) {\n\t            var self = this,\n\t                lastOver = new Date().getTime(),\n\t                over = true,\n\t                stamp = function stamp() {\n\t                lastOver = new Date().getTime();\n\t                over = true;\n\t            },\n\t                unstamp = function unstamp(e) {\n\t                if (!e.relatedTarget || !/anchor-preview/.test(e.relatedTarget.className)) {\n\t                    over = false;\n\t                }\n\t            },\n\t                interval_timer = setInterval(function () {\n\t                if (over) {\n\t                    return true;\n\t                }\n\t                var durr = new Date().getTime() - lastOver;\n\t                if (durr > self.options.anchorPreviewHideDelay) {\n\t                    // hide the preview 1/2 second after mouse leaves the link\n\t                    self.hideAnchorPreview();\n\t\n\t                    // cleanup\n\t                    clearInterval(interval_timer);\n\t                    self.off(self.anchorPreview, 'mouseover', stamp);\n\t                    self.off(self.anchorPreview, 'mouseout', unstamp);\n\t                    self.off(anchorEl, 'mouseover', stamp);\n\t                    self.off(anchorEl, 'mouseout', unstamp);\n\t                }\n\t            }, 200);\n\t\n\t            this.on(self.anchorPreview, 'mouseover', stamp);\n\t            this.on(self.anchorPreview, 'mouseout', unstamp);\n\t            this.on(anchorEl, 'mouseover', stamp);\n\t            this.on(anchorEl, 'mouseout', unstamp);\n\t        },\n\t\n\t        createAnchorPreview: function createAnchorPreview() {\n\t            var self = this,\n\t                anchorPreview = this.options.ownerDocument.createElement('div');\n\t\n\t            anchorPreview.id = 'medium-editor-anchor-preview-' + this.id;\n\t            anchorPreview.className = 'medium-editor-anchor-preview';\n\t            anchorPreview.innerHTML = this.anchorPreviewTemplate();\n\t            this.options.elementsContainer.appendChild(anchorPreview);\n\t\n\t            this.on(anchorPreview, 'click', function () {\n\t                self.anchorPreviewClickHandler();\n\t            });\n\t\n\t            return anchorPreview;\n\t        },\n\t\n\t        anchorPreviewTemplate: function anchorPreviewTemplate() {\n\t            return '<div class=\"medium-editor-toolbar-anchor-preview\" id=\"medium-editor-toolbar-anchor-preview\">' + '    <i class=\"medium-editor-toolbar-anchor-preview-inner\"></i>' + '</div>';\n\t        },\n\t\n\t        anchorPreviewClickHandler: function anchorPreviewClickHandler(e) {\n\t            if (this.activeAnchor) {\n\t\n\t                var self = this,\n\t                    range = this.options.ownerDocument.createRange(),\n\t                    sel = this.options.contentWindow.getSelection();\n\t\n\t                range.selectNodeContents(self.activeAnchor);\n\t                sel.removeAllRanges();\n\t                sel.addRange(range);\n\t                setTimeout(function () {\n\t                    if (self.activeAnchor) {\n\t                        self.showAnchorForm(self.activeAnchor.href);\n\t                    }\n\t                    self.keepToolbarAlive = false;\n\t                }, 100 + self.options.delay);\n\t            }\n\t\n\t            this.hideAnchorPreview();\n\t        },\n\t\n\t        editorAnchorObserver: function editorAnchorObserver(e) {\n\t            var self = this,\n\t                overAnchor = true,\n\t                leaveAnchor = (function (_leaveAnchor) {\n\t                function leaveAnchor() {\n\t                    return _leaveAnchor.apply(this, arguments);\n\t                }\n\t\n\t                leaveAnchor.toString = function () {\n\t                    return _leaveAnchor.toString();\n\t                };\n\t\n\t                return leaveAnchor;\n\t            })(function () {\n\t                // mark the anchor as no longer hovered, and stop listening\n\t                overAnchor = false;\n\t                self.off(self.activeAnchor, 'mouseout', leaveAnchor);\n\t            });\n\t\n\t            if (e.target && e.target.tagName.toLowerCase() === 'a') {\n\t\n\t                // Detect empty href attributes\n\t                // The browser will make href=\"\" or href=\"#top\"\n\t                // into absolute urls when accessed as e.targed.href, so check the html\n\t                if (!/href=[\"']\\S+[\"']/.test(e.target.outerHTML) || /href=[\"']#\\S+[\"']/.test(e.target.outerHTML)) {\n\t                    return true;\n\t                }\n\t\n\t                // only show when hovering on anchors\n\t                if (this.toolbar.classList.contains('medium-editor-toolbar-active')) {\n\t                    // only show when toolbar is not present\n\t                    return true;\n\t                }\n\t                this.activeAnchor = e.target;\n\t                this.on(this.activeAnchor, 'mouseout', leaveAnchor);\n\t                // show the anchor preview according to the configured delay\n\t                // if the mouse has not left the anchor tag in that time\n\t                setTimeout(function () {\n\t                    if (overAnchor) {\n\t                        self.showAnchorPreview(e.target);\n\t                    }\n\t                }, self.options.delay);\n\t            }\n\t        },\n\t\n\t        bindAnchorPreview: function bindAnchorPreview(index) {\n\t            var i,\n\t                self = this;\n\t            this.editorAnchorObserverWrapper = function (e) {\n\t                self.editorAnchorObserver(e);\n\t            };\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                this.on(this.elements[i], 'mouseover', this.editorAnchorObserverWrapper);\n\t            }\n\t            return this;\n\t        },\n\t\n\t        checkLinkFormat: function checkLinkFormat(value) {\n\t            var re = /^(https?|ftps?|rtmpt?):\\/\\/|mailto:/;\n\t            return (re.test(value) ? '' : 'http://') + value;\n\t        },\n\t\n\t        setTargetBlank: function setTargetBlank(el) {\n\t            var i;\n\t            el = el || getSelectionStart.call(this);\n\t            if (el.tagName.toLowerCase() === 'a') {\n\t                el.target = '_blank';\n\t            } else {\n\t                el = el.getElementsByTagName('a');\n\t\n\t                for (i = 0; i < el.length; i += 1) {\n\t                    el[i].target = '_blank';\n\t                }\n\t            }\n\t        },\n\t\n\t        setButtonClass: function setButtonClass(buttonClass) {\n\t            var el = getSelectionStart.call(this),\n\t                classes = buttonClass.split(' '),\n\t                i,\n\t                j;\n\t            if (el.tagName.toLowerCase() === 'a') {\n\t                for (j = 0; j < classes.length; j += 1) {\n\t                    el.classList.add(classes[j]);\n\t                }\n\t            } else {\n\t                el = el.getElementsByTagName('a');\n\t                for (i = 0; i < el.length; i += 1) {\n\t                    for (j = 0; j < classes.length; j += 1) {\n\t                        el[i].classList.add(classes[j]);\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        createLink: function createLink(input, target, buttonClass) {\n\t            var i, event;\n\t\n\t            if (input.value.trim().length === 0) {\n\t                this.hideToolbarActions();\n\t                return;\n\t            }\n\t\n\t            restoreSelection.call(this, this.savedSelection);\n\t\n\t            if (this.options.checkLinkFormat) {\n\t                input.value = this.checkLinkFormat(input.value);\n\t            }\n\t\n\t            this.options.ownerDocument.execCommand('createLink', false, input.value);\n\t\n\t            if (this.options.targetBlank || target === '_blank') {\n\t                this.setTargetBlank();\n\t            }\n\t\n\t            if (buttonClass) {\n\t                this.setButtonClass(buttonClass);\n\t            }\n\t\n\t            if (this.options.targetBlank || target === '_blank' || buttonClass) {\n\t                event = this.options.ownerDocument.createEvent('HTMLEvents');\n\t                event.initEvent('input', true, true, this.options.contentWindow);\n\t                for (i = 0; i < this.elements.length; i += 1) {\n\t                    this.elements[i].dispatchEvent(event);\n\t                }\n\t            }\n\t\n\t            this.checkSelection();\n\t            this.showToolbarActions();\n\t            input.value = '';\n\t        },\n\t\n\t        bindWindowActions: function bindWindowActions() {\n\t            var timerResize,\n\t                self = this;\n\t            this.windowResizeHandler = function () {\n\t                clearTimeout(timerResize);\n\t                timerResize = setTimeout(function () {\n\t                    if (self.toolbar && self.toolbar.classList.contains('medium-editor-toolbar-active')) {\n\t                        self.setToolbarPosition();\n\t                    }\n\t                }, 100);\n\t            };\n\t            this.on(this.options.contentWindow, 'resize', this.windowResizeHandler);\n\t            return this;\n\t        },\n\t\n\t        activate: function activate() {\n\t            if (this.isActive) {\n\t                return;\n\t            }\n\t\n\t            this.setup();\n\t        },\n\t\n\t        // TODO: break method\n\t        deactivate: function deactivate() {\n\t            var i;\n\t            if (!this.isActive) {\n\t                return;\n\t            }\n\t            this.isActive = false;\n\t\n\t            if (this.toolbar !== undefined) {\n\t                this.options.elementsContainer.removeChild(this.anchorPreview);\n\t                this.options.elementsContainer.removeChild(this.toolbar);\n\t                delete this.toolbar;\n\t                delete this.anchorPreview;\n\t            }\n\t\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                this.elements[i].removeAttribute('contentEditable');\n\t                this.elements[i].removeAttribute('data-medium-element');\n\t            }\n\t\n\t            this.removeAllEvents();\n\t        },\n\t\n\t        htmlEntities: function htmlEntities(str) {\n\t            // converts special characters (like <) into their escaped/encoded values (like &lt;).\n\t            // This allows you to show to display the string without the browser reading it as HTML.\n\t            return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\t        },\n\t\n\t        bindPaste: function bindPaste() {\n\t            var i,\n\t                self = this;\n\t            this.pasteWrapper = function (e) {\n\t                var paragraphs,\n\t                    html = '',\n\t                    p;\n\t\n\t                this.classList.remove('medium-editor-placeholder');\n\t                if (!self.options.forcePlainText && !self.options.cleanPastedHTML) {\n\t                    return this;\n\t                }\n\t\n\t                if (e.clipboardData && e.clipboardData.getData && !e.defaultPrevented) {\n\t                    e.preventDefault();\n\t\n\t                    if (self.options.cleanPastedHTML && e.clipboardData.getData('text/html')) {\n\t                        return self.cleanPaste(e.clipboardData.getData('text/html'));\n\t                    }\n\t                    if (!(self.options.disableReturn || this.getAttribute('data-disable-return'))) {\n\t                        paragraphs = e.clipboardData.getData('text/plain').split(/[\\r\\n]/g);\n\t                        for (p = 0; p < paragraphs.length; p += 1) {\n\t                            if (paragraphs[p] !== '') {\n\t                                if (navigator.userAgent.match(/firefox/i) && p === 0) {\n\t                                    html += self.htmlEntities(paragraphs[p]);\n\t                                } else {\n\t                                    html += '<p>' + self.htmlEntities(paragraphs[p]) + '</p>';\n\t                                }\n\t                            }\n\t                        }\n\t                        self.options.ownerDocument.execCommand('insertHTML', false, html);\n\t                    } else {\n\t                        html = self.htmlEntities(e.clipboardData.getData('text/plain'));\n\t                        self.options.ownerDocument.execCommand('insertHTML', false, html);\n\t                    }\n\t                }\n\t            };\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                this.on(this.elements[i], 'paste', this.pasteWrapper);\n\t            }\n\t            return this;\n\t        },\n\t\n\t        setPlaceholders: function setPlaceholders() {\n\t            var i,\n\t                activatePlaceholder = function activatePlaceholder(el) {\n\t                if (!el.querySelector('img') && !el.querySelector('blockquote') && el.textContent.replace(/^\\s+|\\s+$/g, '') === '') {\n\t                    el.classList.add('medium-editor-placeholder');\n\t                }\n\t            },\n\t                placeholderWrapper = function placeholderWrapper(e) {\n\t                this.classList.remove('medium-editor-placeholder');\n\t                if (e.type !== 'keypress') {\n\t                    activatePlaceholder(this);\n\t                }\n\t            };\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                activatePlaceholder(this.elements[i]);\n\t                this.on(this.elements[i], 'blur', placeholderWrapper);\n\t                this.on(this.elements[i], 'keypress', placeholderWrapper);\n\t            }\n\t            return this;\n\t        },\n\t\n\t        cleanPaste: function cleanPaste(text) {\n\t\n\t            /*jslint regexp: true*/\n\t            /*\n\t                jslint does not allow character negation, because the negation\n\t                will not match any unicode characters. In the regexes in this\n\t                block, negation is used specifically to match the end of an html\n\t                tag, and in fact unicode characters *should* be allowed.\n\t            */\n\t            var i,\n\t                elList,\n\t                workEl,\n\t                el = this.getSelectionElement(),\n\t                multiline = /<p|<br|<div/.test(text),\n\t                replacements = [\n\t\n\t            // replace two bogus tags that begin pastes from google docs\n\t            [new RegExp(/<[^>]*docs-internal-guid[^>]*>/gi), ''], [new RegExp(/<\\/b>(<br[^>]*>)?$/gi), ''],\n\t\n\t            // un-html spaces and newlines inserted by OS X\n\t            [new RegExp(/<span class=\"Apple-converted-space\">\\s+<\\/span>/g), ' '], [new RegExp(/<br class=\"Apple-interchange-newline\">/g), '<br>'],\n\t\n\t            // replace google docs italics+bold with a span to be replaced once the html is inserted\n\t            [new RegExp(/<span[^>]*(font-style:italic;font-weight:bold|font-weight:bold;font-style:italic)[^>]*>/gi), '<span class=\"replace-with italic bold\">'],\n\t\n\t            // replace google docs italics with a span to be replaced once the html is inserted\n\t            [new RegExp(/<span[^>]*font-style:italic[^>]*>/gi), '<span class=\"replace-with italic\">'],\n\t\n\t            //[replace google docs bolds with a span to be replaced once the html is inserted\n\t            [new RegExp(/<span[^>]*font-weight:bold[^>]*>/gi), '<span class=\"replace-with bold\">'],\n\t\n\t            // replace manually entered b/i/a tags with real ones\n\t            [new RegExp(/&lt;(\\/?)(i|b|a)&gt;/gi), '<$1$2>'],\n\t\n\t            // replace manually a tags with real ones, converting smart-quotes from google docs\n\t            [new RegExp(/&lt;a\\s+href=(&quot;|&rdquo;|&ldquo;|“|”)([^&]+)(&quot;|&rdquo;|&ldquo;|“|”)&gt;/gi), '<a href=\"$2\">']];\n\t            /*jslint regexp: false*/\n\t\n\t            for (i = 0; i < replacements.length; i += 1) {\n\t                text = text.replace(replacements[i][0], replacements[i][1]);\n\t            }\n\t\n\t            if (multiline) {\n\t\n\t                // double br's aren't converted to p tags, but we want paragraphs.\n\t                elList = text.split('<br><br>');\n\t\n\t                this.pasteHTML('<p>' + elList.join('</p><p>') + '</p>');\n\t                this.options.ownerDocument.execCommand('insertText', false, '\\n');\n\t\n\t                // block element cleanup\n\t                elList = el.querySelectorAll('a,p,div,br');\n\t                for (i = 0; i < elList.length; i += 1) {\n\t\n\t                    workEl = elList[i];\n\t\n\t                    switch (workEl.tagName.toLowerCase()) {\n\t                        case 'a':\n\t                            if (this.options.targetBlank) {\n\t                                this.setTargetBlank(workEl);\n\t                            }\n\t                            break;\n\t                        case 'p':\n\t                        case 'div':\n\t                            this.filterCommonBlocks(workEl);\n\t                            break;\n\t                        case 'br':\n\t                            this.filterLineBreak(workEl);\n\t                            break;\n\t                    }\n\t                }\n\t            } else {\n\t\n\t                this.pasteHTML(text);\n\t            }\n\t        },\n\t\n\t        pasteHTML: function pasteHTML(html) {\n\t            var elList,\n\t                workEl,\n\t                i,\n\t                fragmentBody,\n\t                pasteBlock = this.options.ownerDocument.createDocumentFragment();\n\t\n\t            pasteBlock.appendChild(this.options.ownerDocument.createElement('body'));\n\t\n\t            fragmentBody = pasteBlock.querySelector('body');\n\t            fragmentBody.innerHTML = html;\n\t\n\t            this.cleanupSpans(fragmentBody);\n\t\n\t            elList = fragmentBody.querySelectorAll('*');\n\t            for (i = 0; i < elList.length; i += 1) {\n\t\n\t                workEl = elList[i];\n\t\n\t                // delete ugly attributes\n\t                workEl.removeAttribute('class');\n\t                workEl.removeAttribute('style');\n\t                workEl.removeAttribute('dir');\n\t\n\t                if (workEl.tagName.toLowerCase() === 'meta') {\n\t                    workEl.parentNode.removeChild(workEl);\n\t                }\n\t            }\n\t            this.options.ownerDocument.execCommand('insertHTML', false, fragmentBody.innerHTML.replace(/&nbsp;/g, ' '));\n\t        },\n\t        isCommonBlock: function isCommonBlock(el) {\n\t            return el && (el.tagName.toLowerCase() === 'p' || el.tagName.toLowerCase() === 'div');\n\t        },\n\t        filterCommonBlocks: function filterCommonBlocks(el) {\n\t            if (/^\\s*$/.test(el.innerText)) {\n\t                el.parentNode.removeChild(el);\n\t            }\n\t        },\n\t        filterLineBreak: function filterLineBreak(el) {\n\t            if (this.isCommonBlock(el.previousElementSibling)) {\n\t\n\t                // remove stray br's following common block elements\n\t                el.parentNode.removeChild(el);\n\t            } else if (this.isCommonBlock(el.parentNode) && (el.parentNode.firstChild === el || el.parentNode.lastChild === el)) {\n\t\n\t                // remove br's just inside open or close tags of a div/p\n\t                el.parentNode.removeChild(el);\n\t            } else if (el.parentNode.childElementCount === 1) {\n\t\n\t                // and br's that are the only child of a div/p\n\t                this.removeWithParent(el);\n\t            }\n\t        },\n\t\n\t        // remove an element, including its parent, if it is the only element within its parent\n\t        removeWithParent: function removeWithParent(el) {\n\t            if (el && el.parentNode) {\n\t                if (el.parentNode.parentNode && el.parentNode.childElementCount === 1) {\n\t                    el.parentNode.parentNode.removeChild(el.parentNode);\n\t                } else {\n\t                    el.parentNode.removeChild(el.parentNode);\n\t                }\n\t            }\n\t        },\n\t\n\t        cleanupSpans: function cleanupSpans(container_el) {\n\t\n\t            var i,\n\t                el,\n\t                new_el,\n\t                spans = container_el.querySelectorAll('.replace-with');\n\t\n\t            for (i = 0; i < spans.length; i += 1) {\n\t\n\t                el = spans[i];\n\t                new_el = this.options.ownerDocument.createElement(el.classList.contains('bold') ? 'b' : 'i');\n\t\n\t                if (el.classList.contains('bold') && el.classList.contains('italic')) {\n\t\n\t                    // add an i tag as well if this has both italics and bold\n\t                    new_el.innerHTML = '<i>' + el.innerHTML + '</i>';\n\t                } else {\n\t\n\t                    new_el.innerHTML = el.innerHTML;\n\t                }\n\t                el.parentNode.replaceChild(new_el, el);\n\t            }\n\t\n\t            spans = container_el.querySelectorAll('span');\n\t            for (i = 0; i < spans.length; i += 1) {\n\t\n\t                el = spans[i];\n\t\n\t                // remove empty spans, replace others with their contents\n\t                if (/^\\s*$/.test()) {\n\t                    el.parentNode.removeChild(el);\n\t                } else {\n\t                    el.parentNode.replaceChild(this.options.ownerDocument.createTextNode(el.innerText), el);\n\t                }\n\t            }\n\t        }\n\t\n\t    };\n\t})(window, document);\n\n/***/ },\n\n/***/ 37:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** addons/medium.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e0d562d2b6f31ae0be8b\n **/","/**\n * This component adds a medium.com-like rich text editor block type.\n *\n * Source for this component can be found here:\n * https://github.com/daviferreira/medium-editor\n */\n\nimport MediumEditor from './vendor/medium-editor'\nimport React        from 'react'\n\nrequire('./style')\n\nvar Medium = React.createClass({\n\n  propTypes: {\n    content  : React.PropTypes.object.isRequired,\n    onChange : React.PropTypes.func.isRequired\n  },\n\n  getDefaultProps() {\n    return {\n      content: { html: '', text: ''},\n      options: {\n        buttons: [ 'header1', 'header2', 'bold', 'italic', 'underline', 'anchor', 'quote',  'unorderedlist', 'orderedlist' ],\n        firstHeader: 'h1',\n        secondHeader: 'h2',\n        diffLeft: 0,\n        diffTop: -10,\n        disableDoubleReturn: true\n      }\n    }\n  },\n\n  shouldComponentUpdate(props: Object, state: Object){\n    return false\n  },\n\n  componentDidMount() {\n    this.setState({\n      editor: new MediumEditor(this.refs.editor.getDOMNode(), this.props.options)\n    })\n  },\n\n  componentWillUnmount() {\n    this.state.editor.deactivate()\n  },\n\n  render() {\n    return (\n      <div className=\"col-block-medium\">\n        <div className=\"col-medium\" onBlur={ this._onBlur } role=\"textarea\" aria-multiline=\"true\" ref=\"editor\" dangerouslySetInnerHTML={{ __html: this.props.content.html }} />\n        { this.props.children }\n      </div>\n    )\n  },\n\n  _onBlur() {\n    var editor = this.refs.editor.getDOMNode()\n\n    this.props.onChange({\n      text: editor.textContent,\n      html: editor.innerHTML\n    })\n  }\n\n})\n\nmodule.exports = Medium\n\n\n\n/** WEBPACK FOOTER **\n ** ./addons/medium/index.jsx\n **/","module.exports = require(\"react\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react\"\n ** module id = 1\n ** module chunks = 0 1 2 3\n **/","/*global module, console, define*/\n\nfunction MediumEditor(elements, options) {\n    'use strict';\n    return this.init(elements, options);\n}\n\nif (typeof module === 'object') {\n    module.exports = MediumEditor;\n}\n// AMD support\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {\n        'use strict';\n        return MediumEditor;\n    });\n}\n\n(function (window, document) {\n    'use strict';\n\n    function extend(b, a) {\n        var prop;\n        if (b === undefined) {\n            return a;\n        }\n        for (prop in a) {\n            if (a.hasOwnProperty(prop) && b.hasOwnProperty(prop) === false) {\n                b[prop] = a[prop];\n            }\n        }\n        return b;\n    }\n\n    function isDescendant(parent, child) {\n         var node = child.parentNode;\n         while (node !== null) {\n             if (node === parent) {\n                 return true;\n             }\n             node = node.parentNode;\n         }\n         return false;\n    }\n\n    // http://stackoverflow.com/questions/5605401/insert-link-in-contenteditable-element\n    // by Tim Down\n    function saveSelection() {\n        var i,\n            len,\n            ranges,\n            sel = this.options.contentWindow.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            ranges = [];\n            for (i = 0, len = sel.rangeCount; i < len; i += 1) {\n                ranges.push(sel.getRangeAt(i));\n            }\n            return ranges;\n        }\n        return null;\n    }\n\n    function restoreSelection(savedSel) {\n        var i,\n            len,\n            sel = this.options.contentWindow.getSelection();\n        if (savedSel) {\n            sel.removeAllRanges();\n            for (i = 0, len = savedSel.length; i < len; i += 1) {\n                sel.addRange(savedSel[i]);\n            }\n        }\n    }\n\n    // http://stackoverflow.com/questions/1197401/how-can-i-get-the-element-the-caret-is-in-with-javascript-when-using-contentedi\n    // by You\n    function getSelectionStart() {\n        var node = this.options.ownerDocument.getSelection().anchorNode,\n            startNode = (node && node.nodeType === 3 ? node.parentNode : node);\n        return startNode;\n    }\n\n    // http://stackoverflow.com/questions/4176923/html-of-selected-text\n    // by Tim Down\n    function getSelectionHtml() {\n        var i,\n            html = '',\n            sel,\n            len,\n            container;\n        if (this.options.contentWindow.getSelection !== undefined) {\n            sel = this.options.contentWindow.getSelection();\n            if (sel.rangeCount) {\n                container = this.options.ownerDocument.createElement('div');\n                for (i = 0, len = sel.rangeCount; i < len; i += 1) {\n                    container.appendChild(sel.getRangeAt(i).cloneContents());\n                }\n                html = container.innerHTML;\n            }\n        } else if (this.options.ownerDocument.selection !== undefined) {\n            if (this.options.ownerDocument.selection.type === 'Text') {\n                html = this.options.ownerDocument.selection.createRange().htmlText;\n            }\n        }\n        return html;\n    }\n\n    // https://github.com/jashkenas/underscore\n    function isElement(obj) {\n        return !!(obj && obj.nodeType === 1);\n    }\n\n    MediumEditor.prototype = {\n        defaults: {\n            allowMultiParagraphSelection: true,\n            anchorInputPlaceholder: 'Paste or type a link',\n            anchorPreviewHideDelay: 500,\n            buttons: ['bold', 'italic', 'underline', 'anchor', 'header1', 'header2', 'quote'],\n            buttonLabels: false,\n            checkLinkFormat: false,\n            cleanPastedHTML: false,\n            delay: 0,\n            diffLeft: 0,\n            diffTop: -10,\n            disableReturn: false,\n            disableDoubleReturn: false,\n            disableToolbar: false,\n            disableEditing: false,\n            elementsContainer: false,\n            contentWindow: window,\n            ownerDocument: document,\n            firstHeader: 'h3',\n            forcePlainText: true,\n            placeholder: 'Type your text',\n            secondHeader: 'h4',\n            targetBlank: false,\n            anchorTarget: false,\n            anchorButton: false,\n            anchorButtonClass: 'btn',\n            extensions: {},\n            activeButtonClass: 'medium-editor-button-active',\n            firstButtonClass: 'medium-editor-button-first',\n            lastButtonClass: 'medium-editor-button-last'\n        },\n\n        // http://stackoverflow.com/questions/17907445/how-to-detect-ie11#comment30165888_17907562\n        // by rg89\n        isIE: ((navigator.appName === 'Microsoft Internet Explorer') || ((navigator.appName === 'Netscape') && (new RegExp('Trident/.*rv:([0-9]{1,}[.0-9]{0,})').exec(navigator.userAgent) !== null))),\n\n        init: function (elements, options) {\n            this.options = extend(options, this.defaults);\n            this.setElementSelection(elements);\n            if (this.elements.length === 0) {\n                return;\n            }\n            this.parentElements = ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'pre'];\n            if (!this.options.elementsContainer) {\n                this.options.elementsContainer = document.body;\n            }\n            this.id = this.options.elementsContainer.querySelectorAll('.medium-editor-toolbar').length + 1;\n            return this.setup();\n        },\n\n        setup: function () {\n            this.events = [];\n            this.isActive = true;\n            this.initElements()\n                .bindSelect()\n                .bindPaste()\n                .setPlaceholders()\n                .bindWindowActions()\n                .passInstance();\n        },\n\n        on: function(target, event, listener, useCapture) {\n            target.addEventListener(event, listener, useCapture);\n            this.events.push([target, event, listener, useCapture]);\n        },\n\n        off: function(target, event, listener, useCapture) {\n            var index = this.events.indexOf([target, event, listener, useCapture]),\n                e;\n            if(index !== -1) {\n                e = this.events.splice(index, 1);\n                e[0].removeEventListener(e[1], e[2], e[3]);\n            }\n        },\n\n        removeAllEvents: function() {\n            var e = this.events.pop();\n            while(e) {\n                e[0].removeEventListener(e[1], e[2], e[3]);\n                e = this.events.pop();\n            }\n        },\n\n        initElements: function () {\n            this.updateElementList();\n            var i,\n                addToolbar = false;\n            for (i = 0; i < this.elements.length; i += 1) {\n                if (!this.options.disableEditing && !this.elements[i].getAttribute('data-disable-editing')) {\n                    this.elements[i].setAttribute('contentEditable', true);\n                }\n                if (!this.elements[i].getAttribute('data-placeholder')) {\n                    this.elements[i].setAttribute('data-placeholder', this.options.placeholder);\n                }\n                this.elements[i].setAttribute('data-medium-element', true);\n                this.bindParagraphCreation(i).bindReturn(i).bindTab(i);\n                if (!this.options.disableToolbar && !this.elements[i].getAttribute('data-disable-toolbar')) {\n                    addToolbar = true;\n                }\n            }\n            // Init toolbar\n            if (addToolbar) {\n                this.initToolbar()\n                    .bindButtons()\n                    .bindAnchorForm()\n                    .bindAnchorPreview();\n            }\n            return this;\n        },\n\n        setElementSelection: function (selector) {\n            this.elementSelection = selector;\n            this.updateElementList();\n        },\n\n        updateElementList: function () {\n            this.elements = typeof this.elementSelection === 'string' ? this.options.ownerDocument.querySelectorAll(this.elementSelection) : this.elementSelection;\n            if (this.elements.nodeType === 1) {\n                this.elements = [this.elements];\n            }\n        },\n\n        serialize: function () {\n            var i,\n                elementid,\n                content = {};\n            for (i = 0; i < this.elements.length; i += 1) {\n                elementid = (this.elements[i].id !== '') ? this.elements[i].id : 'element-' + i;\n                content[elementid] = {\n                    value: this.elements[i].innerHTML.trim()\n                };\n            }\n            return content;\n        },\n\n        /**\n         * Helper function to call a method with a number of parameters on all registered extensions.\n         * The function assures that the function exists before calling.\n         *\n         * @param {string} funcName name of the function to call\n         * @param [args] arguments passed into funcName\n         */\n        callExtensions: function (funcName) {\n            if (arguments.length < 1) {\n                return;\n            }\n\n            var args = Array.prototype.slice.call(arguments, 1),\n                ext,\n                name;\n\n            for (name in this.options.extensions) {\n                if (this.options.extensions.hasOwnProperty(name)) {\n                    ext = this.options.extensions[name];\n                    if (ext[funcName] !== undefined) {\n                        ext[funcName].apply(ext, args);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Pass current Medium Editor instance to all extensions\n         * if extension constructor has 'parent' attribute set to 'true'\n         *\n         */\n        passInstance: function () {\n            var self = this,\n                ext,\n                name;\n\n            for (name in self.options.extensions) {\n                if (self.options.extensions.hasOwnProperty(name)) {\n                    ext = self.options.extensions[name];\n\n                    if (ext.parent) {\n                        ext.base = self;\n                    }\n                }\n            }\n\n            return self;\n        },\n\n        bindParagraphCreation: function (index) {\n            var self = this;\n            this.on(this.elements[index], 'keypress', function (e) {\n                var node = getSelectionStart.call(self),\n                    tagName;\n                if (e.which === 32) {\n                    tagName = node.tagName.toLowerCase();\n                    if (tagName === 'a') {\n                        document.execCommand('unlink', false, null);\n                    }\n                }\n            });\n\n            this.on(this.elements[index], 'keyup', function (e) {\n                var node = getSelectionStart.call(self),\n                    tagName,\n                    editorElement;\n\n                if (node && node.getAttribute('data-medium-element') && node.children.length === 0 && !(self.options.disableReturn || node.getAttribute('data-disable-return'))) {\n                    document.execCommand('formatBlock', false, 'p');\n                }\n                if (e.which === 13) {\n                    node = getSelectionStart.call(self);\n                    tagName = node.tagName.toLowerCase();\n                    editorElement = self.getSelectionElement();\n\n                    if (!(self.options.disableReturn || editorElement.getAttribute('data-disable-return')) &&\n                        tagName !== 'li' && !self.isListItemChild(node)) {\n                        if (!e.shiftKey) {\n                            document.execCommand('formatBlock', false, 'p');\n                        }\n                        if (tagName === 'a') {\n                            document.execCommand('unlink', false, null);\n                        }\n                    }\n                }\n            });\n            return this;\n        },\n\n        isListItemChild: function (node) {\n            var parentNode = node.parentNode,\n                tagName = parentNode.tagName.toLowerCase();\n            while (this.parentElements.indexOf(tagName) === -1 && tagName !== 'div') {\n                if (tagName === 'li') {\n                    return true;\n                }\n                parentNode = parentNode.parentNode;\n                if (parentNode && parentNode.tagName) {\n                    tagName = parentNode.tagName.toLowerCase();\n                } else {\n                    return false;\n                }\n            }\n            return false;\n        },\n\n        bindReturn: function (index) {\n            var self = this;\n            this.on(this.elements[index], 'keypress', function (e) {\n                if (e.which === 13) {\n                    if (self.options.disableReturn || this.getAttribute('data-disable-return')) {\n                        e.preventDefault();\n                    } else if (self.options.disableDoubleReturn || this.getAttribute('data-disable-double-return')) {\n                        var node = getSelectionStart.call(self);\n                        if (node && node.innerText === '\\n') {\n                            e.preventDefault();\n                        }\n                    }\n                }\n            });\n            return this;\n        },\n\n        bindTab: function (index) {\n            var self = this;\n            this.on(this.elements[index], 'keydown', function (e) {\n                if (e.which === 9) {\n                    // Override tab only for pre nodes\n                    var tag = getSelectionStart.call(self).tagName.toLowerCase();\n                    if (tag === 'pre') {\n                        e.preventDefault();\n                        document.execCommand('insertHtml', null, '    ');\n                    }\n\n                    // Tab to indent list structures!\n                    if (tag === 'li') {\n                        e.preventDefault();\n\n                        // If Shift is down, outdent, otherwise indent\n                        if (e.shiftKey) {\n                            document.execCommand('outdent', e);\n                        } else {\n                            document.execCommand('indent', e);\n                        }\n                    }\n                }\n            });\n            return this;\n        },\n\n        buttonTemplate: function (btnType) {\n            var buttonLabels = this.getButtonLabels(this.options.buttonLabels),\n                buttonTemplates = {\n                    'bold': '<button class=\"medium-editor-action medium-editor-action-bold\" data-action=\"bold\" data-element=\"b\">' + buttonLabels.bold + '</button>',\n                    'italic': '<button class=\"medium-editor-action medium-editor-action-italic\" data-action=\"italic\" data-element=\"i\">' + buttonLabels.italic + '</button>',\n                    'underline': '<button class=\"medium-editor-action medium-editor-action-underline\" data-action=\"underline\" data-element=\"u\">' + buttonLabels.underline + '</button>',\n                    'strikethrough': '<button class=\"medium-editor-action medium-editor-action-strikethrough\" data-action=\"strikethrough\" data-element=\"strike\">' + buttonLabels.strikethrough +'</button>',\n                    'superscript': '<button class=\"medium-editor-action medium-editor-action-superscript\" data-action=\"superscript\" data-element=\"sup\">' + buttonLabels.superscript + '</button>',\n                    'subscript': '<button class=\"medium-editor-action medium-editor-action-subscript\" data-action=\"subscript\" data-element=\"sub\">' + buttonLabels.subscript + '</button>',\n                    'anchor': '<button class=\"medium-editor-action medium-editor-action-anchor\" data-action=\"anchor\" data-element=\"a\">' + buttonLabels.anchor + '</button>',\n                    'image': '<button class=\"medium-editor-action medium-editor-action-image\" data-action=\"image\" data-element=\"img\">' + buttonLabels.image + '</button>',\n                    'header1': '<button class=\"medium-editor-action medium-editor-action-header1\" data-action=\"append-' + this.options.firstHeader + '\" data-element=\"' + this.options.firstHeader + '\">' + buttonLabels.header1 + '</button>',\n                    'header2': '<button class=\"medium-editor-action medium-editor-action-header2\" data-action=\"append-' + this.options.secondHeader + '\" data-element=\"' + this.options.secondHeader + '\">' + buttonLabels.header2 + '</button>',\n                    'quote': '<button class=\"medium-editor-action medium-editor-action-quote\" data-action=\"append-blockquote\" data-element=\"blockquote\">' + buttonLabels.quote + '</button>',\n                    'orderedlist': '<button class=\"medium-editor-action medium-editor-action-orderedlist\" data-action=\"insertorderedlist\" data-element=\"ol\">' + buttonLabels.orderedlist + '</button>',\n                    'unorderedlist': '<button class=\"medium-editor-action medium-editor-action-unorderedlist\" data-action=\"insertunorderedlist\" data-element=\"ul\">' + buttonLabels.unorderedlist + '</button>',\n                    'pre': '<button class=\"medium-editor-action medium-editor-action-pre\" data-action=\"append-pre\" data-element=\"pre\">' + buttonLabels.pre + '</button>',\n                    'indent': '<button class=\"medium-editor-action medium-editor-action-indent\" data-action=\"indent\" data-element=\"ul\">' + buttonLabels.indent + '</button>',\n                    'outdent': '<button class=\"medium-editor-action medium-editor-action-outdent\" data-action=\"outdent\" data-element=\"ul\">' + buttonLabels.outdent + '</button>',\n                    'justifyCenter': '<button class=\"medium-editor-action medium-editor-action-justifyCenter\" data-action=\"justifyCenter\" data-element=\"\">' + buttonLabels.justifyCenter + '</button>',\n                    'justifyFull': '<button class=\"medium-editor-action medium-editor-action-justifyFull\" data-action=\"justifyFull\" data-element=\"\">' + buttonLabels.justifyFull + '</button>',\n                    'justifyLeft': '<button class=\"medium-editor-action medium-editor-action-justifyLeft\" data-action=\"justifyLeft\" data-element=\"\">' + buttonLabels.justifyLeft + '</button>',\n                    'justifyRight': '<button class=\"medium-editor-action medium-editor-action-justifyRight\" data-action=\"justifyRight\" data-element=\"\">' + buttonLabels.justifyRight + '</button>'\n                };\n            return buttonTemplates[btnType] || false;\n        },\n\n        // TODO: break method\n        getButtonLabels: function (buttonLabelType) {\n            var customButtonLabels,\n                attrname,\n                buttonLabels = {\n                    'bold': '<b>B</b>',\n                    'italic': '<b><i>I</i></b>',\n                    'underline': '<b><u>U</u></b>',\n                    'strikethrough': '<s>A</s>',\n                    'superscript': '<b>x<sup>1</sup></b>',\n                    'subscript': '<b>x<sub>1</sub></b>',\n                    'anchor': '<b>#</b>',\n                    'image': '<b>image</b>',\n                    'header1': '<b>H1</b>',\n                    'header2': '<b>H2</b>',\n                    'quote': '<b>&ldquo;</b>',\n                    'orderedlist': '<b>1.</b>',\n                    'unorderedlist': '<b>&bull;</b>',\n                    'pre': '<b>0101</b>',\n                    'indent': '<b>&rarr;</b>',\n                    'outdent': '<b>&larr;</b>',\n                    'justifyCenter': '<b>C</b>',\n                    'justifyFull': '<b>J</b>',\n                    'justifyLeft': '<b>L</b>',\n                    'justifyRight': '<b>R</b>'\n                };\n            if (buttonLabelType === 'fontawesome') {\n                customButtonLabels = {\n                    'bold': '<i class=\"fa fa-bold\"></i>',\n                    'italic': '<i class=\"fa fa-italic\"></i>',\n                    'underline': '<i class=\"fa fa-underline\"></i>',\n                    'strikethrough': '<i class=\"fa fa-strikethrough\"></i>',\n                    'superscript': '<i class=\"fa fa-superscript\"></i>',\n                    'subscript': '<i class=\"fa fa-subscript\"></i>',\n                    'anchor': '<i class=\"fa fa-link\"></i>',\n                    'image': '<i class=\"fa fa-picture-o\"></i>',\n                    'quote': '<i class=\"fa fa-quote-right\"></i>',\n                    'orderedlist': '<i class=\"fa fa-list-ol\"></i>',\n                    'unorderedlist': '<i class=\"fa fa-list-ul\"></i>',\n                    'pre': '<i class=\"fa fa-code fa-lg\"></i>',\n                    'indent': '<i class=\"fa fa-indent\"></i>',\n                    'outdent': '<i class=\"fa fa-outdent\"></i>',\n                    'justifyCenter': '<i class=\"fa fa-align-center\"></i>',\n                    'justifyFull': '<i class=\"fa fa-align-justify\"></i>',\n                    'justifyLeft': '<i class=\"fa fa-align-left\"></i>',\n                    'justifyRight': '<i class=\"fa fa-align-right\"></i>'\n                };\n            } else if (typeof buttonLabelType === 'object') {\n                customButtonLabels = buttonLabelType;\n            }\n            if (typeof customButtonLabels === 'object') {\n                for (attrname in customButtonLabels) {\n                    if (customButtonLabels.hasOwnProperty(attrname)) {\n                        buttonLabels[attrname] = customButtonLabels[attrname];\n                    }\n                }\n            }\n            return buttonLabels;\n        },\n\n        initToolbar: function () {\n            if (this.toolbar) {\n                return this;\n            }\n            this.toolbar = this.createToolbar();\n            this.keepToolbarAlive = false;\n            this.anchorForm = this.toolbar.querySelector('.medium-editor-toolbar-form-anchor');\n            this.anchorInput = this.anchorForm.querySelector('input.medium-editor-toolbar-anchor-input');\n            this.anchorTarget = this.anchorForm.querySelector('input.medium-editor-toolbar-anchor-target');\n            this.anchorButton = this.anchorForm.querySelector('input.medium-editor-toolbar-anchor-button');\n            this.toolbarActions = this.toolbar.querySelector('.medium-editor-toolbar-actions');\n            this.anchorPreview = this.createAnchorPreview();\n\n            return this;\n        },\n\n        createToolbar: function () {\n            var toolbar = document.createElement('div');\n            toolbar.id = 'medium-editor-toolbar-' + this.id;\n            toolbar.className = 'medium-editor-toolbar';\n            toolbar.appendChild(this.toolbarButtons());\n            toolbar.appendChild(this.toolbarFormAnchor());\n            this.options.elementsContainer.appendChild(toolbar);\n            return toolbar;\n        },\n\n        //TODO: actionTemplate\n        toolbarButtons: function () {\n            var btns = this.options.buttons,\n                ul = document.createElement('ul'),\n                li,\n                i,\n                btn,\n                ext;\n\n            ul.id = 'medium-editor-toolbar-actions';\n            ul.className = 'medium-editor-toolbar-actions clearfix';\n\n            for (i = 0; i < btns.length; i += 1) {\n                if (this.options.extensions.hasOwnProperty(btns[i])) {\n                    ext = this.options.extensions[btns[i]];\n                    btn = ext.getButton !== undefined ? ext.getButton() : null;\n                } else {\n                    btn = this.buttonTemplate(btns[i]);\n                }\n\n                if (btn) {\n                    li = document.createElement('li');\n                    if (isElement(btn)) {\n                        li.appendChild(btn);\n                    } else {\n                        li.innerHTML = btn;\n                    }\n                    ul.appendChild(li);\n                }\n            }\n\n            return ul;\n        },\n\n        toolbarFormAnchor: function () {\n            var anchor = document.createElement('div'),\n                input = document.createElement('input'),\n                target_label = document.createElement('label'),\n                target = document.createElement('input'),\n                button_label = document.createElement('label'),\n                button = document.createElement('input'),\n                close = document.createElement('a'),\n                save = document.createElement('a');\n\n            close.setAttribute('href', '#');\n            close.className = 'medium-editor-toobar-anchor-close';\n            close.innerHTML = '&times;';\n\n            save.setAttribute('href', '#');\n            save.className = 'medium-editor-toobar-anchor-save';\n            save.innerHTML = '&#10003;';\n\n            input.setAttribute('type', 'text');\n            input.className = 'medium-editor-toolbar-anchor-input';\n            input.setAttribute('placeholder', this.options.anchorInputPlaceholder);\n\n\n            target.setAttribute('type', 'checkbox');\n            target.className = 'medium-editor-toolbar-anchor-target';\n            target_label.innerHTML = \"Open in New Window?\";\n            target_label.insertBefore(target, target_label.firstChild);\n\n            button.setAttribute('type', 'checkbox');\n            button.className = 'medium-editor-toolbar-anchor-button';\n            button_label.innerHTML = \"Button\";\n            button_label.insertBefore(button, button_label.firstChild);\n\n\n            anchor.className = 'medium-editor-toolbar-form-anchor';\n            anchor.id = 'medium-editor-toolbar-form-anchor';\n            anchor.appendChild(input);\n\n            anchor.appendChild(save);\n            anchor.appendChild(close);\n\n            if (this.options.anchorTarget) {\n                anchor.appendChild(target_label);\n            }\n\n            if (this.options.anchorButton) {\n                anchor.appendChild(button_label);\n            }\n\n            return anchor;\n        },\n\n        bindSelect: function () {\n            var self = this,\n                timer = '',\n                i;\n\n            this.checkSelectionWrapper = function (e) {\n\n                // Do not close the toolbar when bluring the editable area and clicking into the anchor form\n                if (e && self.clickingIntoArchorForm(e)) {\n                    return false;\n                }\n\n                clearTimeout(timer);\n                timer = setTimeout(function () {\n                    self.checkSelection();\n                }, self.options.delay);\n            };\n\n            this.on(document.documentElement, 'mouseup', this.checkSelectionWrapper);\n\n            for (i = 0; i < this.elements.length; i += 1) {\n                this.on(this.elements[i], 'keyup', this.checkSelectionWrapper);\n                this.on(this.elements[i], 'blur', this.checkSelectionWrapper);\n            }\n            return this;\n        },\n\n        checkSelection: function () {\n            var newSelection,\n                selectionElement;\n\n            if (this.keepToolbarAlive !== true && !this.options.disableToolbar) {\n\n                newSelection = this.options.contentWindow.getSelection();\n                if (newSelection.toString().trim() === '' ||\n                    (this.options.allowMultiParagraphSelection === false && this.hasMultiParagraphs()) ||\n                    this.selectionInContentEditableFalse()) {\n                    this.hideToolbarActions();\n                } else {\n                    selectionElement = this.getSelectionElement();\n                    if (!selectionElement || selectionElement.getAttribute('data-disable-toolbar')) {\n                        this.hideToolbarActions();\n                    } else {\n                        this.checkSelectionElement(newSelection, selectionElement);\n                    }\n                }\n            }\n            return this;\n        },\n\n        clickingIntoArchorForm: function (e) {\n            var self = this;\n\n            if (e.type && e.type.toLowerCase() === 'blur' && e.relatedTarget && e.relatedTarget === self.anchorInput) {\n                return true;\n            }\n\n            return false;\n        },\n\n        hasMultiParagraphs: function () {\n            var selectionHtml = getSelectionHtml.call(this).replace(/<[\\S]+><\\/[\\S]+>/gim, ''),\n                hasMultiParagraphs = selectionHtml.match(/<(p|h[0-6]|blockquote)>([\\s\\S]*?)<\\/(p|h[0-6]|blockquote)>/g);\n\n            return (hasMultiParagraphs ? hasMultiParagraphs.length : 0);\n        },\n\n        checkSelectionElement: function (newSelection, selectionElement) {\n            var i;\n            this.selection = newSelection;\n            this.selectionRange = this.selection.getRangeAt(0);\n            for (i = 0; i < this.elements.length; i += 1) {\n                if (this.elements[i] === selectionElement) {\n                    this.setToolbarButtonStates()\n                        .setToolbarPosition()\n                        .showToolbarActions();\n                    return;\n                }\n            }\n            this.hideToolbarActions();\n        },\n\n        findMatchingSelectionParent: function(testElementFunction) {\n            var selection = this.options.contentWindow.getSelection(), range, current;\n\n            if (selection.rangeCount === 0) {\n                return false;\n            }\n\n            range = selection.getRangeAt(0);\n            current = range.commonAncestorContainer;\n\n            do {\n              if (current.nodeType === 1){\n                if ( testElementFunction(current) )\n                {\n                    return current;\n                }\n                // do not traverse upwards past the nearest containing editor\n                if (current.getAttribute('data-medium-element')) {\n                    return false;\n                }\n              }\n\n              current = current.parentNode;\n            } while (current);\n\n            return false;\n        },\n\n        getSelectionElement: function () {\n            return this.findMatchingSelectionParent(function(el) {\n                return el.getAttribute('data-medium-element');\n            });\n        },\n\n        selectionInContentEditableFalse: function () {\n            return this.findMatchingSelectionParent(function(el) {\n                return (el && el.nodeName !== '#text' && el.getAttribute('contenteditable') === 'false');\n            });\n        },\n\n        setToolbarPosition: function () {\n            var buttonHeight = 50,\n                selection = this.options.contentWindow.getSelection(),\n                range = selection.getRangeAt(0),\n                boundary = range.getBoundingClientRect(),\n                defaultLeft = (this.options.diffLeft) - (this.toolbar.offsetWidth / 2),\n                middleBoundary = (boundary.left + boundary.right) / 2,\n                halfOffsetWidth = this.toolbar.offsetWidth / 2;\n            if (boundary.top < buttonHeight) {\n                this.toolbar.classList.add('medium-toolbar-arrow-over');\n                this.toolbar.classList.remove('medium-toolbar-arrow-under');\n                this.toolbar.style.top = buttonHeight + boundary.bottom - this.options.diffTop + this.options.contentWindow.pageYOffset - this.toolbar.offsetHeight + 'px';\n            } else {\n                this.toolbar.classList.add('medium-toolbar-arrow-under');\n                this.toolbar.classList.remove('medium-toolbar-arrow-over');\n                this.toolbar.style.top = boundary.top + this.options.diffTop + this.options.contentWindow.pageYOffset - this.toolbar.offsetHeight + 'px';\n            }\n            if (middleBoundary < halfOffsetWidth) {\n                this.toolbar.style.left = defaultLeft + halfOffsetWidth + 'px';\n            } else if ((this.options.contentWindow.innerWidth - middleBoundary) < halfOffsetWidth) {\n                this.toolbar.style.left = this.options.contentWindow.innerWidth + defaultLeft - halfOffsetWidth + 'px';\n            } else {\n                this.toolbar.style.left = defaultLeft + middleBoundary + 'px';\n            }\n\n            this.hideAnchorPreview();\n\n            return this;\n        },\n\n        setToolbarButtonStates: function () {\n            var buttons = this.toolbarActions.querySelectorAll('button'),\n                i;\n            for (i = 0; i < buttons.length; i += 1) {\n                buttons[i].classList.remove(this.options.activeButtonClass);\n            }\n            this.checkActiveButtons();\n            return this;\n        },\n\n        checkActiveButtons: function () {\n            var elements = Array.prototype.slice.call(this.elements),\n                parentNode = this.getSelectedParentElement();\n            while (parentNode.tagName !== undefined && this.parentElements.indexOf(parentNode.tagName.toLowerCase) === -1) {\n                this.activateButton(parentNode.tagName.toLowerCase());\n                this.callExtensions('checkState', parentNode);\n\n                // we can abort the search upwards if we leave the contentEditable element\n                if (elements.indexOf(parentNode) !== -1) {\n                    break;\n                }\n                parentNode = parentNode.parentNode;\n            }\n        },\n\n        activateButton: function (tag) {\n            var el = this.toolbar.querySelector('[data-element=\"' + tag + '\"]');\n            if (el !== null && el.className.indexOf(this.options.activeButtonClass) === -1) {\n                el.className += ' ' + this.options.activeButtonClass;\n            }\n        },\n\n        bindButtons: function () {\n            var buttons = this.toolbar.querySelectorAll('button'),\n                i,\n                self = this,\n                triggerAction = function (e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (self.selection === undefined) {\n                        self.checkSelection();\n                    }\n                    if (this.className.indexOf(self.options.activeButtonClass) > -1) {\n                        this.classList.remove(self.options.activeButtonClass);\n                    } else {\n                        this.className += ' ' + self.options.activeButtonClass;\n                    }\n                    if (this.hasAttribute('data-action')) {\n                        self.execAction(this.getAttribute('data-action'), e);\n                    }\n                };\n            for (i = 0; i < buttons.length; i += 1) {\n                this.on(buttons[i], 'click', triggerAction);\n            }\n            this.setFirstAndLastItems(buttons);\n            return this;\n        },\n\n        setFirstAndLastItems: function (buttons) {\n            if (buttons.length > 0) {\n                buttons[0].className += ' ' + this.options.firstButtonClass;\n                buttons[buttons.length - 1].className += ' ' + this.options.lastButtonClass;\n            }\n            return this;\n        },\n\n        execAction: function (action, e) {\n            if (action.indexOf('append-') > -1) {\n                this.execFormatBlock(action.replace('append-', ''));\n                this.setToolbarPosition();\n                this.setToolbarButtonStates();\n            } else if (action === 'anchor') {\n                this.triggerAnchorAction(e);\n            } else if (action === 'image') {\n                this.options.ownerDocument.execCommand('insertImage', false, this.options.contentWindow.getSelection());\n            } else {\n                this.options.ownerDocument.execCommand(action, false, null);\n                this.setToolbarPosition();\n            }\n        },\n\n        // http://stackoverflow.com/questions/15867542/range-object-get-selection-parent-node-chrome-vs-firefox\n        rangeSelectsSingleNode: function (range) {\n            var startNode = range.startContainer;\n            return startNode === range.endContainer &&\n                startNode.hasChildNodes() &&\n                range.endOffset === range.startOffset + 1;\n        },\n\n        getSelectedParentElement: function () {\n            var selectedParentElement = null,\n                range = this.selectionRange;\n            if (this.rangeSelectsSingleNode(range)) {\n                selectedParentElement = range.startContainer.childNodes[range.startOffset];\n            } else if (range.startContainer.nodeType === 3) {\n                selectedParentElement = range.startContainer.parentNode;\n            } else {\n                selectedParentElement = range.startContainer;\n            }\n            return selectedParentElement;\n        },\n\n        triggerAnchorAction: function () {\n            var selectedParentElement = this.getSelectedParentElement();\n            if (selectedParentElement.tagName &&\n                    selectedParentElement.tagName.toLowerCase() === 'a') {\n                this.options.ownerDocument.execCommand('unlink', false, null);\n            } else {\n                if (this.anchorForm.style.display === 'block') {\n                    this.showToolbarActions();\n                } else {\n                    this.showAnchorForm();\n                }\n            }\n            return this;\n        },\n\n        execFormatBlock: function (el) {\n            var selectionData = this.getSelectionData(this.selection.anchorNode);\n            // FF handles blockquote differently on formatBlock\n            // allowing nesting, we need to use outdent\n            // https://developer.mozilla.org/en-US/docs/Rich-Text_Editing_in_Mozilla\n            if (el === 'blockquote' && selectionData.el &&\n                selectionData.el.parentNode.tagName.toLowerCase() === 'blockquote') {\n                return this.options.ownerDocument.execCommand('outdent', false, null);\n            }\n            if (selectionData.tagName === el) {\n                el = 'p';\n            }\n            // When IE we need to add <> to heading elements and\n            //  blockquote needs to be called as indent\n            // http://stackoverflow.com/questions/10741831/execcommand-formatblock-headings-in-ie\n            // http://stackoverflow.com/questions/1816223/rich-text-editor-with-blockquote-function/1821777#1821777\n            if (this.isIE) {\n                if (el === 'blockquote') {\n                    return this.options.ownerDocument.execCommand('indent', false, el);\n                }\n                el = '<' + el + '>';\n            }\n            return this.options.ownerDocument.execCommand('formatBlock', false, el);\n        },\n\n        getSelectionData: function (el) {\n            var tagName;\n\n            if (el && el.tagName) {\n                tagName = el.tagName.toLowerCase();\n            }\n\n            while (el && this.parentElements.indexOf(tagName) === -1) {\n                el = el.parentNode;\n                if (el && el.tagName) {\n                    tagName = el.tagName.toLowerCase();\n                }\n            }\n\n            return {\n                el: el,\n                tagName: tagName\n            };\n        },\n\n        getFirstChild: function (el) {\n            var firstChild = el.firstChild;\n            while (firstChild !== null && firstChild.nodeType !== 1) {\n                firstChild = firstChild.nextSibling;\n            }\n            return firstChild;\n        },\n\n        hideToolbarActions: function () {\n            this.keepToolbarAlive = false;\n            if (this.toolbar !== undefined) {\n                this.toolbar.classList.remove('medium-editor-toolbar-active');\n            }\n        },\n\n        showToolbarActions: function () {\n            var self = this,\n                timer;\n            this.anchorForm.style.display = 'none';\n            this.toolbarActions.style.display = 'block';\n            this.keepToolbarAlive = false;\n            clearTimeout(timer);\n            timer = setTimeout(function () {\n                if (self.toolbar && !self.toolbar.classList.contains('medium-editor-toolbar-active')) {\n                    self.toolbar.classList.add('medium-editor-toolbar-active');\n                }\n            }, 100);\n        },\n\n        saveSelection: function() {\n            this.savedSelection = saveSelection.call(this);\n        },\n\n        restoreSelection: function() {\n            restoreSelection.call(this, this.savedSelection);\n        },\n\n        showAnchorForm: function (link_value) {\n            this.toolbarActions.style.display = 'none';\n            this.saveSelection();\n            this.anchorForm.style.display = 'block';\n            this.setToolbarPosition();\n            this.keepToolbarAlive = true;\n            this.anchorInput.focus();\n            this.anchorInput.value = link_value || '';\n        },\n\n        bindAnchorForm: function () {\n            var linkCancel = this.anchorForm.querySelector('a.medium-editor-toobar-anchor-close'),\n                linkSave = this.anchorForm.querySelector('a.medium-editor-toobar-anchor-save'),\n                self = this;\n\n            this.on(this.anchorForm, 'click', function (e) {\n                e.stopPropagation();\n                self.keepToolbarAlive = true;\n            });\n\n            this.on(this.anchorInput, 'keyup', function (e) {\n                var button = null,\n                    target;\n\n                if (e.keyCode === 13) {\n                    e.preventDefault();\n                    if (self.options.anchorTarget && self.anchorTarget.checked) {\n                        target = \"_blank\";\n                    }\n                    else {\n                        target = \"_self\";\n                    }\n\n                    if (self.options.anchorButton && self.anchorButton.checked) {\n                        button = self.options.anchorButtonClass;\n                    }\n\n                    self.createLink(this, target, button);\n                }\n            });\n\n            this.on(linkSave, 'click', function(e) {\n                var button = null,\n                    target;\n                e.preventDefault();\n                if ( self.options.anchorTarget && self.anchorTarget.checked) {\n                    target = \"_blank\";\n                }\n                else {\n                    target = \"_self\";\n                }\n\n                if (self.options.anchorButton && self.anchorButton.checked) {\n                    button = self.options.anchorButtonClass;\n                }\n\n                self.createLink(self.anchorInput, target, button);\n            }, true);\n\n            this.on(this.anchorInput, 'click', function (e) {\n                // make sure not to hide form when cliking into the input\n                e.stopPropagation();\n                self.keepToolbarAlive = true;\n            });\n\n            // Hide the anchor form when focusing outside of it.\n            this.on(this.options.ownerDocument.body, 'click', function (e) {\n                if (e.target !== self.anchorForm && !isDescendant(self.anchorForm, e.target) && !isDescendant(self.toolbarActions, e.target)) {\n                    self.keepToolbarAlive = false;\n                    self.checkSelection();\n                }\n            }, true);\n            this.on(this.options.ownerDocument.body, 'focus', function (e) {\n                if (e.target !== self.anchorForm && !isDescendant(self.anchorForm, e.target) && !isDescendant(self.toolbarActions, e.target)) {\n                    self.keepToolbarAlive = false;\n                    self.checkSelection();\n                }\n            }, true);\n\n            this.on(linkCancel, 'click', function (e) {\n                e.preventDefault();\n                self.showToolbarActions();\n                restoreSelection.call(self, self.savedSelection);\n            });\n            return this;\n        },\n\n\n        hideAnchorPreview: function () {\n            this.anchorPreview.classList.remove('medium-editor-anchor-preview-active');\n        },\n\n        // TODO: break method\n        showAnchorPreview: function (anchorEl) {\n            if (this.anchorPreview.classList.contains('medium-editor-anchor-preview-active')\n                || anchorEl.getAttribute('data-disable-preview')) {\n                return true;\n            }\n\n            var self = this,\n                buttonHeight = 40,\n                boundary = anchorEl.getBoundingClientRect(),\n                middleBoundary = (boundary.left + boundary.right) / 2,\n                halfOffsetWidth,\n                defaultLeft,\n                timer;\n\n            self.anchorPreview.querySelector('i').textContent = anchorEl.href;\n            halfOffsetWidth = self.anchorPreview.offsetWidth / 2;\n            defaultLeft = self.options.diffLeft - halfOffsetWidth;\n\n            clearTimeout(timer);\n            timer = setTimeout(function () {\n                if (self.anchorPreview && !self.anchorPreview.classList.contains('medium-editor-anchor-preview-active')) {\n                    self.anchorPreview.classList.add('medium-editor-anchor-preview-active');\n                }\n            }, 100);\n\n            self.observeAnchorPreview(anchorEl);\n\n            self.anchorPreview.classList.add('medium-toolbar-arrow-over');\n            self.anchorPreview.classList.remove('medium-toolbar-arrow-under');\n            self.anchorPreview.style.top = Math.round(buttonHeight + boundary.bottom - self.options.diffTop + this.options.contentWindow.pageYOffset - self.anchorPreview.offsetHeight) + 'px';\n            if (middleBoundary < halfOffsetWidth) {\n                self.anchorPreview.style.left = defaultLeft + halfOffsetWidth + 'px';\n            } else if ((this.options.contentWindow.innerWidth - middleBoundary) < halfOffsetWidth) {\n                self.anchorPreview.style.left = this.options.contentWindow.innerWidth + defaultLeft - halfOffsetWidth + 'px';\n            } else {\n                self.anchorPreview.style.left = defaultLeft + middleBoundary + 'px';\n            }\n\n            return this;\n        },\n\n        // TODO: break method\n        observeAnchorPreview: function (anchorEl) {\n            var self = this,\n                lastOver = (new Date()).getTime(),\n                over = true,\n                stamp = function () {\n                    lastOver = (new Date()).getTime();\n                    over = true;\n                },\n                unstamp = function (e) {\n                    if (!e.relatedTarget || !/anchor-preview/.test(e.relatedTarget.className)) {\n                        over = false;\n                    }\n                },\n                interval_timer = setInterval(function () {\n                    if (over) {\n                        return true;\n                    }\n                    var durr = (new Date()).getTime() - lastOver;\n                    if (durr > self.options.anchorPreviewHideDelay) {\n                        // hide the preview 1/2 second after mouse leaves the link\n                        self.hideAnchorPreview();\n\n                        // cleanup\n                        clearInterval(interval_timer);\n                        self.off(self.anchorPreview, 'mouseover', stamp);\n                        self.off(self.anchorPreview, 'mouseout', unstamp);\n                        self.off(anchorEl, 'mouseover', stamp);\n                        self.off(anchorEl, 'mouseout', unstamp);\n\n                    }\n                }, 200);\n\n            this.on(self.anchorPreview, 'mouseover', stamp);\n            this.on(self.anchorPreview, 'mouseout', unstamp);\n            this.on(anchorEl, 'mouseover', stamp);\n            this.on(anchorEl, 'mouseout', unstamp);\n        },\n\n        createAnchorPreview: function () {\n            var self = this,\n                anchorPreview = this.options.ownerDocument.createElement('div');\n\n            anchorPreview.id = 'medium-editor-anchor-preview-' + this.id;\n            anchorPreview.className = 'medium-editor-anchor-preview';\n            anchorPreview.innerHTML = this.anchorPreviewTemplate();\n            this.options.elementsContainer.appendChild(anchorPreview);\n\n            this.on(anchorPreview, 'click', function () {\n                self.anchorPreviewClickHandler();\n            });\n\n            return anchorPreview;\n        },\n\n        anchorPreviewTemplate: function () {\n            return '<div class=\"medium-editor-toolbar-anchor-preview\" id=\"medium-editor-toolbar-anchor-preview\">' +\n                '    <i class=\"medium-editor-toolbar-anchor-preview-inner\"></i>' +\n                '</div>';\n        },\n\n        anchorPreviewClickHandler: function (e) {\n            if (this.activeAnchor) {\n\n                var self = this,\n                    range = this.options.ownerDocument.createRange(),\n                    sel = this.options.contentWindow.getSelection();\n\n                range.selectNodeContents(self.activeAnchor);\n                sel.removeAllRanges();\n                sel.addRange(range);\n                setTimeout(function () {\n                    if (self.activeAnchor) {\n                        self.showAnchorForm(self.activeAnchor.href);\n                    }\n                    self.keepToolbarAlive = false;\n                }, 100 + self.options.delay);\n\n            }\n\n            this.hideAnchorPreview();\n        },\n\n        editorAnchorObserver: function (e) {\n            var self = this,\n                overAnchor = true,\n                leaveAnchor = function () {\n                    // mark the anchor as no longer hovered, and stop listening\n                    overAnchor = false;\n                    self.off(self.activeAnchor, 'mouseout', leaveAnchor);\n                };\n\n            if (e.target && e.target.tagName.toLowerCase() === 'a') {\n\n                // Detect empty href attributes\n                // The browser will make href=\"\" or href=\"#top\"\n                // into absolute urls when accessed as e.targed.href, so check the html\n                if (!/href=[\"']\\S+[\"']/.test(e.target.outerHTML) || /href=[\"']#\\S+[\"']/.test(e.target.outerHTML)) {\n                    return true;\n                }\n\n                // only show when hovering on anchors\n                if (this.toolbar.classList.contains('medium-editor-toolbar-active')) {\n                    // only show when toolbar is not present\n                    return true;\n                }\n                this.activeAnchor = e.target;\n                this.on(this.activeAnchor, 'mouseout', leaveAnchor);\n                // show the anchor preview according to the configured delay\n                // if the mouse has not left the anchor tag in that time\n                setTimeout(function () {\n                    if (overAnchor) {\n                        self.showAnchorPreview(e.target);\n                    }\n                }, self.options.delay);\n\n\n            }\n        },\n\n        bindAnchorPreview: function (index) {\n            var i, self = this;\n            this.editorAnchorObserverWrapper = function (e) {\n                self.editorAnchorObserver(e);\n            };\n            for (i = 0; i < this.elements.length; i += 1) {\n                this.on(this.elements[i], 'mouseover', this.editorAnchorObserverWrapper);\n            }\n            return this;\n        },\n\n        checkLinkFormat: function (value) {\n            var re = /^(https?|ftps?|rtmpt?):\\/\\/|mailto:/;\n            return (re.test(value) ? '' : 'http://') + value;\n        },\n\n        setTargetBlank: function (el) {\n            var i;\n            el = el || getSelectionStart.call(this);\n            if (el.tagName.toLowerCase() === 'a') {\n                el.target = '_blank';\n            } else {\n                el = el.getElementsByTagName('a');\n\n                for (i = 0; i < el.length; i += 1) {\n                    el[i].target = '_blank';\n                }\n            }\n        },\n\n        setButtonClass: function (buttonClass) {\n            var el = getSelectionStart.call(this),\n                classes = buttonClass.split(' '),\n                i, j;\n            if (el.tagName.toLowerCase() === 'a') {\n                for (j = 0; j < classes.length; j += 1) {\n                    el.classList.add(classes[j]);\n                }\n            } else {\n                el = el.getElementsByTagName('a');\n                for (i = 0; i < el.length; i += 1) {\n                    for (j = 0; j < classes.length; j += 1) {\n                        el[i].classList.add(classes[j]);\n                    }\n                }\n            }\n        },\n\n        createLink: function (input, target, buttonClass) {\n            var i, event;\n\n            if (input.value.trim().length === 0) {\n                this.hideToolbarActions();\n                return;\n            }\n\n            restoreSelection.call(this, this.savedSelection);\n\n            if (this.options.checkLinkFormat) {\n                input.value = this.checkLinkFormat(input.value);\n            }\n\n            this.options.ownerDocument.execCommand('createLink', false, input.value);\n\n            if (this.options.targetBlank || target === \"_blank\") {\n                this.setTargetBlank();\n            }\n\n            if (buttonClass) {\n                this.setButtonClass(buttonClass);\n            }\n\n            if (this.options.targetBlank || target === \"_blank\" || buttonClass) {\n                event = this.options.ownerDocument.createEvent(\"HTMLEvents\");\n                event.initEvent(\"input\", true, true, this.options.contentWindow);\n                for (i = 0; i < this.elements.length; i += 1) {\n                    this.elements[i].dispatchEvent(event);\n                }\n            }\n\n            this.checkSelection();\n            this.showToolbarActions();\n            input.value = '';\n        },\n\n        bindWindowActions: function () {\n            var timerResize,\n                self = this;\n            this.windowResizeHandler = function () {\n                clearTimeout(timerResize);\n                timerResize = setTimeout(function () {\n                    if (self.toolbar && self.toolbar.classList.contains('medium-editor-toolbar-active')) {\n                        self.setToolbarPosition();\n                    }\n                }, 100);\n            };\n            this.on(this.options.contentWindow, 'resize', this.windowResizeHandler);\n            return this;\n        },\n\n        activate: function () {\n            if (this.isActive) {\n                return;\n            }\n\n            this.setup();\n        },\n\n        // TODO: break method\n        deactivate: function () {\n            var i;\n            if (!this.isActive) {\n                return;\n            }\n            this.isActive = false;\n\n            if (this.toolbar !== undefined) {\n                this.options.elementsContainer.removeChild(this.anchorPreview);\n                this.options.elementsContainer.removeChild(this.toolbar);\n                delete this.toolbar;\n                delete this.anchorPreview;\n            }\n\n            for (i = 0; i < this.elements.length; i += 1) {\n                this.elements[i].removeAttribute('contentEditable');\n                this.elements[i].removeAttribute('data-medium-element');\n            }\n\n            this.removeAllEvents();\n        },\n\n        htmlEntities: function (str) {\n            // converts special characters (like <) into their escaped/encoded values (like &lt;).\n            // This allows you to show to display the string without the browser reading it as HTML.\n            return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n        },\n\n        bindPaste: function () {\n            var i, self = this;\n            this.pasteWrapper = function (e) {\n                var paragraphs,\n                    html = '',\n                    p;\n\n                this.classList.remove('medium-editor-placeholder');\n                if (!self.options.forcePlainText && !self.options.cleanPastedHTML) {\n                    return this;\n                }\n\n                if (e.clipboardData && e.clipboardData.getData && !e.defaultPrevented) {\n                    e.preventDefault();\n\n                    if (self.options.cleanPastedHTML && e.clipboardData.getData('text/html')) {\n                        return self.cleanPaste(e.clipboardData.getData('text/html'));\n                    }\n                    if (!(self.options.disableReturn || this.getAttribute('data-disable-return'))) {\n                        paragraphs = e.clipboardData.getData('text/plain').split(/[\\r\\n]/g);\n                        for (p = 0; p < paragraphs.length; p += 1) {\n                            if (paragraphs[p] !== '') {\n                                if (navigator.userAgent.match(/firefox/i) && p === 0) {\n                                    html += self.htmlEntities(paragraphs[p]);\n                                } else {\n                                    html += '<p>' + self.htmlEntities(paragraphs[p]) + '</p>';\n                                }\n                            }\n                        }\n                        self.options.ownerDocument.execCommand('insertHTML', false, html);\n                    } else {\n                        html = self.htmlEntities(e.clipboardData.getData('text/plain'));\n                        self.options.ownerDocument.execCommand('insertHTML', false, html);\n                    }\n                }\n            };\n            for (i = 0; i < this.elements.length; i += 1) {\n                this.on(this.elements[i], 'paste', this.pasteWrapper);\n            }\n            return this;\n        },\n\n        setPlaceholders: function () {\n            var i,\n                activatePlaceholder = function (el) {\n                    if (!(el.querySelector('img')) &&\n                            !(el.querySelector('blockquote')) &&\n                            el.textContent.replace(/^\\s+|\\s+$/g, '') === '') {\n                        el.classList.add('medium-editor-placeholder');\n                    }\n                },\n                placeholderWrapper = function (e) {\n                    this.classList.remove('medium-editor-placeholder');\n                    if (e.type !== 'keypress') {\n                        activatePlaceholder(this);\n                    }\n                };\n            for (i = 0; i < this.elements.length; i += 1) {\n                activatePlaceholder(this.elements[i]);\n                this.on(this.elements[i], 'blur', placeholderWrapper);\n                this.on(this.elements[i], 'keypress', placeholderWrapper);\n            }\n            return this;\n        },\n\n        cleanPaste: function (text) {\n\n            /*jslint regexp: true*/\n            /*\n                jslint does not allow character negation, because the negation\n                will not match any unicode characters. In the regexes in this\n                block, negation is used specifically to match the end of an html\n                tag, and in fact unicode characters *should* be allowed.\n            */\n            var i, elList, workEl,\n                el = this.getSelectionElement(),\n                multiline = /<p|<br|<div/.test(text),\n                replacements = [\n\n                    // replace two bogus tags that begin pastes from google docs\n                    [new RegExp(/<[^>]*docs-internal-guid[^>]*>/gi), \"\"],\n                    [new RegExp(/<\\/b>(<br[^>]*>)?$/gi), \"\"],\n\n                     // un-html spaces and newlines inserted by OS X\n                    [new RegExp(/<span class=\"Apple-converted-space\">\\s+<\\/span>/g), ' '],\n                    [new RegExp(/<br class=\"Apple-interchange-newline\">/g), '<br>'],\n\n                    // replace google docs italics+bold with a span to be replaced once the html is inserted\n                    [new RegExp(/<span[^>]*(font-style:italic;font-weight:bold|font-weight:bold;font-style:italic)[^>]*>/gi), '<span class=\"replace-with italic bold\">'],\n\n                    // replace google docs italics with a span to be replaced once the html is inserted\n                    [new RegExp(/<span[^>]*font-style:italic[^>]*>/gi), '<span class=\"replace-with italic\">'],\n\n                    //[replace google docs bolds with a span to be replaced once the html is inserted\n                    [new RegExp(/<span[^>]*font-weight:bold[^>]*>/gi), '<span class=\"replace-with bold\">'],\n\n                     // replace manually entered b/i/a tags with real ones\n                    [new RegExp(/&lt;(\\/?)(i|b|a)&gt;/gi), '<$1$2>'],\n\n                     // replace manually a tags with real ones, converting smart-quotes from google docs\n                    [new RegExp(/&lt;a\\s+href=(&quot;|&rdquo;|&ldquo;|“|”)([^&]+)(&quot;|&rdquo;|&ldquo;|“|”)&gt;/gi), '<a href=\"$2\">']\n\n                ];\n            /*jslint regexp: false*/\n\n            for (i = 0; i < replacements.length; i += 1) {\n                text = text.replace(replacements[i][0], replacements[i][1]);\n            }\n\n            if (multiline) {\n\n                // double br's aren't converted to p tags, but we want paragraphs.\n                elList = text.split('<br><br>');\n\n                this.pasteHTML('<p>' + elList.join('</p><p>') + '</p>');\n                this.options.ownerDocument.execCommand('insertText', false, \"\\n\");\n\n                // block element cleanup\n                elList = el.querySelectorAll('a,p,div,br');\n                for (i = 0; i < elList.length; i += 1) {\n\n                    workEl = elList[i];\n\n                    switch (workEl.tagName.toLowerCase()) {\n                    case 'a':\n                        if (this.options.targetBlank){\n                          this.setTargetBlank(workEl);\n                        }\n                        break;\n                    case 'p':\n                    case 'div':\n                        this.filterCommonBlocks(workEl);\n                        break;\n                    case 'br':\n                        this.filterLineBreak(workEl);\n                        break;\n                    }\n\n                }\n\n\n            } else {\n\n                this.pasteHTML(text);\n\n            }\n\n        },\n\n        pasteHTML: function (html) {\n            var elList, workEl, i, fragmentBody, pasteBlock = this.options.ownerDocument.createDocumentFragment();\n\n            pasteBlock.appendChild(this.options.ownerDocument.createElement('body'));\n\n            fragmentBody = pasteBlock.querySelector('body');\n            fragmentBody.innerHTML = html;\n\n            this.cleanupSpans(fragmentBody);\n\n            elList = fragmentBody.querySelectorAll('*');\n            for (i = 0; i < elList.length; i += 1) {\n\n                workEl = elList[i];\n\n                // delete ugly attributes\n                workEl.removeAttribute('class');\n                workEl.removeAttribute('style');\n                workEl.removeAttribute('dir');\n\n                if (workEl.tagName.toLowerCase() === 'meta') {\n                    workEl.parentNode.removeChild(workEl);\n                }\n\n            }\n            this.options.ownerDocument.execCommand('insertHTML', false, fragmentBody.innerHTML.replace(/&nbsp;/g, ' '));\n        },\n        isCommonBlock: function (el) {\n            return (el && (el.tagName.toLowerCase() === 'p' || el.tagName.toLowerCase() === 'div'));\n        },\n        filterCommonBlocks: function (el) {\n            if (/^\\s*$/.test(el.innerText)) {\n                el.parentNode.removeChild(el);\n            }\n        },\n        filterLineBreak: function (el) {\n            if (this.isCommonBlock(el.previousElementSibling)) {\n\n                // remove stray br's following common block elements\n                el.parentNode.removeChild(el);\n\n            } else if (this.isCommonBlock(el.parentNode) && (el.parentNode.firstChild === el || el.parentNode.lastChild === el)) {\n\n                // remove br's just inside open or close tags of a div/p\n                el.parentNode.removeChild(el);\n\n            } else if (el.parentNode.childElementCount === 1) {\n\n                // and br's that are the only child of a div/p\n                this.removeWithParent(el);\n\n            }\n\n        },\n\n        // remove an element, including its parent, if it is the only element within its parent\n        removeWithParent: function (el) {\n            if (el && el.parentNode) {\n                if (el.parentNode.parentNode && el.parentNode.childElementCount === 1) {\n                    el.parentNode.parentNode.removeChild(el.parentNode);\n                } else {\n                    el.parentNode.removeChild(el.parentNode);\n                }\n            }\n        },\n\n        cleanupSpans: function (container_el) {\n\n            var i,\n                el,\n                new_el,\n                spans = container_el.querySelectorAll('.replace-with');\n\n            for (i = 0; i < spans.length; i += 1) {\n\n                el = spans[i];\n                new_el = this.options.ownerDocument.createElement(el.classList.contains('bold') ? 'b' : 'i');\n\n                if (el.classList.contains('bold') && el.classList.contains('italic')) {\n\n                    // add an i tag as well if this has both italics and bold\n                    new_el.innerHTML = '<i>' + el.innerHTML + '</i>';\n\n                } else {\n\n                    new_el.innerHTML = el.innerHTML;\n\n                }\n                el.parentNode.replaceChild(new_el, el);\n\n            }\n\n            spans = container_el.querySelectorAll('span');\n            for (i = 0; i < spans.length; i += 1) {\n\n                el = spans[i];\n\n                // remove empty spans, replace others with their contents\n                if (/^\\s*$/.test()) {\n                    el.parentNode.removeChild(el);\n                } else {\n                    el.parentNode.replaceChild(this.options.ownerDocument.createTextNode(el.innerText), el);\n                }\n\n            }\n\n        }\n\n    };\n\n}(window, document));\n\n\n\n/** WEBPACK FOOTER **\n ** ./addons/medium/vendor/medium-editor.js\n **/"],"sourceRoot":""}