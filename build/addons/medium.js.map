{"version":3,"sources":["addons/medium.js","webpack:///webpack/bootstrap 6bfc2f9649ee417b3f62?a339**","./addons/medium/index.jsx","webpack:///external \"react\"?3c62**","./addons/medium/vendor/medium-editor.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequire","obj","__esModule","MediumEditor","React","Medium","createClass","displayName","propTypes","content","PropTypes","object","isRequired","onChange","func","getDefaultProps","html","text","options","buttons","firstHeader","secondHeader","diffLeft","diffTop","disableDoubleReturn","shouldComponentUpdate","componentDidMount","this","setState","editor","refs","getDOMNode","props","componentWillUnmount","state","deactivate","render","createElement","className","onBlur","_onBlur","role","aria-multiline","ref","dangerouslySetInnerHTML","__html","children","textContent","innerHTML",1,"require",14,"elements","init","window","document","extend","b","a","prop","undefined","hasOwnProperty","isDescendant","parent","child","node","parentNode","saveSelection","i","len","ranges","sel","contentWindow","getSelection","getRangeAt","rangeCount","push","restoreSelection","savedSel","removeAllRanges","length","addRange","getSelectionStart","ownerDocument","anchorNode","startNode","nodeType","getSelectionHtml","container","appendChild","cloneContents","selection","type","createRange","htmlText","isElement","prototype","defaults","allowMultiParagraphSelection","anchorInputPlaceholder","anchorPreviewHideDelay","buttonLabels","checkLinkFormat","cleanPastedHTML","delay","disableReturn","disableToolbar","disableEditing","elementsContainer","forcePlainText","placeholder","targetBlank","anchorTarget","anchorButton","anchorButtonClass","extensions","activeButtonClass","firstButtonClass","lastButtonClass","isIE","navigator","appName","RegExp","exec","userAgent","setElementSelection","parentElements","body","querySelectorAll","setup","events","isActive","initElements","bindSelect","bindPaste","setPlaceholders","bindWindowActions","passInstance","on","target","event","listener","useCapture","addEventListener","off","e","index","indexOf","splice","removeEventListener","removeAllEvents","pop","updateElementList","addToolbar","getAttribute","setAttribute","bindParagraphCreation","bindReturn","bindTab","initToolbar","bindButtons","bindAnchorForm","bindAnchorPreview","selector","elementSelection","serialize","elementid","value","trim","callExtensions","funcName","arguments","ext","name","args","Array","slice","apply","self","base","tagName","which","toLowerCase","execCommand","editorElement","getSelectionElement","isListItemChild","shiftKey","preventDefault","innerText","tag","buttonTemplate","btnType","getButtonLabels","buttonTemplates","bold","italic","underline","strikethrough","superscript","subscript","anchor","image","header1","header2","quote","orderedlist","unorderedlist","pre","indent","outdent","justifyCenter","justifyFull","justifyLeft","justifyRight","buttonLabelType","customButtonLabels","attrname","toolbar","createToolbar","keepToolbarAlive","anchorForm","querySelector","anchorInput","toolbarActions","anchorPreview","createAnchorPreview","toolbarButtons","toolbarFormAnchor","li","btn","btns","ul","getButton","input","target_label","button_label","button","close","save","insertBefore","firstChild","timer","checkSelectionWrapper","clickingIntoArchorForm","clearTimeout","setTimeout","checkSelection","documentElement","newSelection","selectionElement","toString","hasMultiParagraphs","selectionInContentEditableFalse","hideToolbarActions","checkSelectionElement","relatedTarget","_hasMultiParagraphs","_hasMultiParagraphsWrapper","selectionHtml","replace","match","selectionRange","setToolbarButtonStates","setToolbarPosition","showToolbarActions","findMatchingSelectionParent","testElementFunction","range","current","commonAncestorContainer","el","nodeName","buttonHeight","boundary","getBoundingClientRect","defaultLeft","offsetWidth","middleBoundary","left","right","halfOffsetWidth","top","classList","add","remove","style","bottom","pageYOffset","offsetHeight","innerWidth","hideAnchorPreview","checkActiveButtons","getSelectedParentElement","activateButton","triggerAction","stopPropagation","hasAttribute","execAction","setFirstAndLastItems","action","execFormatBlock","triggerAnchorAction","rangeSelectsSingleNode","startContainer","endContainer","hasChildNodes","endOffset","startOffset","selectedParentElement","childNodes","display","showAnchorForm","selectionData","getSelectionData","getFirstChild","nextSibling","contains","_saveSelection","_saveSelectionWrapper","savedSelection","_restoreSelection","_restoreSelectionWrapper","link_value","focus","linkCancel","linkSave","keyCode","checked","createLink","showAnchorPreview","anchorEl","href","observeAnchorPreview","Math","round","lastOver","Date","getTime","over","stamp","unstamp","test","interval_timer","setInterval","durr","clearInterval","anchorPreviewTemplate","anchorPreviewClickHandler","activeAnchor","selectNodeContents","editorAnchorObserver","overAnchor","leaveAnchor","_leaveAnchor","_leaveAnchorWrapper","outerHTML","editorAnchorObserverWrapper","re","setTargetBlank","getElementsByTagName","setButtonClass","buttonClass","j","classes","split","createEvent","initEvent","dispatchEvent","timerResize","windowResizeHandler","activate","removeChild","removeAttribute","htmlEntities","str","String","pasteWrapper","paragraphs","clipboardData","getData","defaultPrevented","cleanPaste","activatePlaceholder","placeholderWrapper","elList","workEl","multiline","replacements","pasteHTML","join","filterCommonBlocks","filterLineBreak","fragmentBody","pasteBlock","createDocumentFragment","cleanupSpans","isCommonBlock","previousElementSibling","lastChild","childElementCount","removeWithParent","container_el","new_el","spans","replaceChild","createTextNode",29],"mappings":"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","file":"addons/medium.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\t/**\n\t * This component adds a medium.com-like rich text editor block type.\n\t *\n\t * Source for this component can be found here:\n\t * https://github.com/daviferreira/medium-editor\n\t */\n\n\tvar MediumEditor = _interopRequire(__webpack_require__(14));\n\n\tvar React = _interopRequire(__webpack_require__(1));\n\n\t__webpack_require__(29);\n\n\tvar Medium = React.createClass({\n\t  displayName: \"Medium\",\n\n\t  propTypes: {\n\t    content: React.PropTypes.object.isRequired,\n\t    onChange: React.PropTypes.func.isRequired\n\t  },\n\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      content: { html: \"\", text: \"\" },\n\t      options: {\n\t        buttons: [\"header1\", \"header2\", \"bold\", \"italic\", \"underline\", \"anchor\", \"quote\", \"unorderedlist\", \"orderedlist\"],\n\t        firstHeader: \"h1\",\n\t        secondHeader: \"h2\",\n\t        diffLeft: 0,\n\t        diffTop: -10,\n\t        disableDoubleReturn: true\n\t      }\n\t    };\n\t  },\n\n\t  shouldComponentUpdate: function shouldComponentUpdate(props, state) {\n\t    return false;\n\t  },\n\n\t  componentDidMount: function componentDidMount() {\n\t    this.setState({\n\t      editor: new MediumEditor(this.refs.editor.getDOMNode(), this.props.options)\n\t    });\n\t  },\n\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    this.state.editor.deactivate();\n\t  },\n\n\t  render: function render() {\n\t    return React.createElement(\n\t      \"div\",\n\t      { className: \"col-block-medium\" },\n\t      React.createElement(\"div\", { className: \"col-medium\", onBlur: this._onBlur, role: \"textarea\", \"aria-multiline\": \"true\", ref: \"editor\", dangerouslySetInnerHTML: { __html: this.props.content.html } }),\n\t      this.props.children\n\t    );\n\t  },\n\n\t  _onBlur: function _onBlur() {\n\t    var editor = this.refs.editor.getDOMNode();\n\n\t    this.props.onChange({\n\t      text: editor.textContent,\n\t      html: editor.innerHTML\n\t    });\n\t  }\n\n\t});\n\n\tmodule.exports = Medium;\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"react\");\n\n/***/ },\n\n/***/ 14:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*global module, console, define*/\n\n\t\"use strict\";\n\n\tfunction MediumEditor(elements, options) {\n\t    \"use strict\";\n\t    return this.init(elements, options);\n\t}\n\n\tif (true) {\n\t    module.exports = MediumEditor;\n\t}\n\t// AMD support\n\telse if (typeof define === \"function\" && define.amd) {\n\t    define(function () {\n\t        \"use strict\";\n\t        return MediumEditor;\n\t    });\n\t}\n\n\t(function (window, document) {\n\t    \"use strict\";\n\n\t    function extend(b, a) {\n\t        var prop;\n\t        if (b === undefined) {\n\t            return a;\n\t        }\n\t        for (prop in a) {\n\t            if (a.hasOwnProperty(prop) && b.hasOwnProperty(prop) === false) {\n\t                b[prop] = a[prop];\n\t            }\n\t        }\n\t        return b;\n\t    }\n\n\t    function isDescendant(parent, child) {\n\t        var node = child.parentNode;\n\t        while (node !== null) {\n\t            if (node === parent) {\n\t                return true;\n\t            }\n\t            node = node.parentNode;\n\t        }\n\t        return false;\n\t    }\n\n\t    // http://stackoverflow.com/questions/5605401/insert-link-in-contenteditable-element\n\t    // by Tim Down\n\t    function saveSelection() {\n\t        var i,\n\t            len,\n\t            ranges,\n\t            sel = this.options.contentWindow.getSelection();\n\t        if (sel.getRangeAt && sel.rangeCount) {\n\t            ranges = [];\n\t            for (i = 0, len = sel.rangeCount; i < len; i += 1) {\n\t                ranges.push(sel.getRangeAt(i));\n\t            }\n\t            return ranges;\n\t        }\n\t        return null;\n\t    }\n\n\t    function restoreSelection(savedSel) {\n\t        var i,\n\t            len,\n\t            sel = this.options.contentWindow.getSelection();\n\t        if (savedSel) {\n\t            sel.removeAllRanges();\n\t            for (i = 0, len = savedSel.length; i < len; i += 1) {\n\t                sel.addRange(savedSel[i]);\n\t            }\n\t        }\n\t    }\n\n\t    // http://stackoverflow.com/questions/1197401/how-can-i-get-the-element-the-caret-is-in-with-javascript-when-using-contentedi\n\t    // by You\n\t    function getSelectionStart() {\n\t        var node = this.options.ownerDocument.getSelection().anchorNode,\n\t            startNode = node && node.nodeType === 3 ? node.parentNode : node;\n\t        return startNode;\n\t    }\n\n\t    // http://stackoverflow.com/questions/4176923/html-of-selected-text\n\t    // by Tim Down\n\t    function getSelectionHtml() {\n\t        var i,\n\t            html = \"\",\n\t            sel,\n\t            len,\n\t            container;\n\t        if (this.options.contentWindow.getSelection !== undefined) {\n\t            sel = this.options.contentWindow.getSelection();\n\t            if (sel.rangeCount) {\n\t                container = this.options.ownerDocument.createElement(\"div\");\n\t                for (i = 0, len = sel.rangeCount; i < len; i += 1) {\n\t                    container.appendChild(sel.getRangeAt(i).cloneContents());\n\t                }\n\t                html = container.innerHTML;\n\t            }\n\t        } else if (this.options.ownerDocument.selection !== undefined) {\n\t            if (this.options.ownerDocument.selection.type === \"Text\") {\n\t                html = this.options.ownerDocument.selection.createRange().htmlText;\n\t            }\n\t        }\n\t        return html;\n\t    }\n\n\t    // https://github.com/jashkenas/underscore\n\t    function isElement(obj) {\n\t        return !!(obj && obj.nodeType === 1);\n\t    }\n\n\t    MediumEditor.prototype = {\n\t        defaults: {\n\t            allowMultiParagraphSelection: true,\n\t            anchorInputPlaceholder: \"Paste or type a link\",\n\t            anchorPreviewHideDelay: 500,\n\t            buttons: [\"bold\", \"italic\", \"underline\", \"anchor\", \"header1\", \"header2\", \"quote\"],\n\t            buttonLabels: false,\n\t            checkLinkFormat: false,\n\t            cleanPastedHTML: false,\n\t            delay: 0,\n\t            diffLeft: 0,\n\t            diffTop: -10,\n\t            disableReturn: false,\n\t            disableDoubleReturn: false,\n\t            disableToolbar: false,\n\t            disableEditing: false,\n\t            elementsContainer: false,\n\t            contentWindow: window,\n\t            ownerDocument: document,\n\t            firstHeader: \"h3\",\n\t            forcePlainText: true,\n\t            placeholder: \"Type your text\",\n\t            secondHeader: \"h4\",\n\t            targetBlank: false,\n\t            anchorTarget: false,\n\t            anchorButton: false,\n\t            anchorButtonClass: \"btn\",\n\t            extensions: {},\n\t            activeButtonClass: \"medium-editor-button-active\",\n\t            firstButtonClass: \"medium-editor-button-first\",\n\t            lastButtonClass: \"medium-editor-button-last\"\n\t        },\n\n\t        // http://stackoverflow.com/questions/17907445/how-to-detect-ie11#comment30165888_17907562\n\t        // by rg89\n\t        isIE: navigator.appName === \"Microsoft Internet Explorer\" || navigator.appName === \"Netscape\" && new RegExp(\"Trident/.*rv:([0-9]{1,}[.0-9]{0,})\").exec(navigator.userAgent) !== null,\n\n\t        init: function init(elements, options) {\n\t            this.options = extend(options, this.defaults);\n\t            this.setElementSelection(elements);\n\t            if (this.elements.length === 0) {\n\t                return;\n\t            }\n\t            this.parentElements = [\"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"blockquote\", \"pre\"];\n\t            if (!this.options.elementsContainer) {\n\t                this.options.elementsContainer = document.body;\n\t            }\n\t            this.id = this.options.elementsContainer.querySelectorAll(\".medium-editor-toolbar\").length + 1;\n\t            return this.setup();\n\t        },\n\n\t        setup: function setup() {\n\t            this.events = [];\n\t            this.isActive = true;\n\t            this.initElements().bindSelect().bindPaste().setPlaceholders().bindWindowActions().passInstance();\n\t        },\n\n\t        on: function on(target, event, listener, useCapture) {\n\t            target.addEventListener(event, listener, useCapture);\n\t            this.events.push([target, event, listener, useCapture]);\n\t        },\n\n\t        off: function off(target, event, listener, useCapture) {\n\t            var index = this.events.indexOf([target, event, listener, useCapture]),\n\t                e;\n\t            if (index !== -1) {\n\t                e = this.events.splice(index, 1);\n\t                e[0].removeEventListener(e[1], e[2], e[3]);\n\t            }\n\t        },\n\n\t        removeAllEvents: function removeAllEvents() {\n\t            var e = this.events.pop();\n\t            while (e) {\n\t                e[0].removeEventListener(e[1], e[2], e[3]);\n\t                e = this.events.pop();\n\t            }\n\t        },\n\n\t        initElements: function initElements() {\n\t            this.updateElementList();\n\t            var i,\n\t                addToolbar = false;\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                if (!this.options.disableEditing && !this.elements[i].getAttribute(\"data-disable-editing\")) {\n\t                    this.elements[i].setAttribute(\"contentEditable\", true);\n\t                }\n\t                if (!this.elements[i].getAttribute(\"data-placeholder\")) {\n\t                    this.elements[i].setAttribute(\"data-placeholder\", this.options.placeholder);\n\t                }\n\t                this.elements[i].setAttribute(\"data-medium-element\", true);\n\t                this.bindParagraphCreation(i).bindReturn(i).bindTab(i);\n\t                if (!this.options.disableToolbar && !this.elements[i].getAttribute(\"data-disable-toolbar\")) {\n\t                    addToolbar = true;\n\t                }\n\t            }\n\t            // Init toolbar\n\t            if (addToolbar) {\n\t                this.initToolbar().bindButtons().bindAnchorForm().bindAnchorPreview();\n\t            }\n\t            return this;\n\t        },\n\n\t        setElementSelection: function setElementSelection(selector) {\n\t            this.elementSelection = selector;\n\t            this.updateElementList();\n\t        },\n\n\t        updateElementList: function updateElementList() {\n\t            this.elements = typeof this.elementSelection === \"string\" ? this.options.ownerDocument.querySelectorAll(this.elementSelection) : this.elementSelection;\n\t            if (this.elements.nodeType === 1) {\n\t                this.elements = [this.elements];\n\t            }\n\t        },\n\n\t        serialize: function serialize() {\n\t            var i,\n\t                elementid,\n\t                content = {};\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                elementid = this.elements[i].id !== \"\" ? this.elements[i].id : \"element-\" + i;\n\t                content[elementid] = {\n\t                    value: this.elements[i].innerHTML.trim()\n\t                };\n\t            }\n\t            return content;\n\t        },\n\n\t        /**\n\t         * Helper function to call a method with a number of parameters on all registered extensions.\n\t         * The function assures that the function exists before calling.\n\t         *\n\t         * @param {string} funcName name of the function to call\n\t         * @param [args] arguments passed into funcName\n\t         */\n\t        callExtensions: function callExtensions(funcName) {\n\t            if (arguments.length < 1) {\n\t                return;\n\t            }\n\n\t            var args = Array.prototype.slice.call(arguments, 1),\n\t                ext,\n\t                name;\n\n\t            for (name in this.options.extensions) {\n\t                if (this.options.extensions.hasOwnProperty(name)) {\n\t                    ext = this.options.extensions[name];\n\t                    if (ext[funcName] !== undefined) {\n\t                        ext[funcName].apply(ext, args);\n\t                    }\n\t                }\n\t            }\n\t        },\n\n\t        /**\n\t         * Pass current Medium Editor instance to all extensions\n\t         * if extension constructor has 'parent' attribute set to 'true'\n\t         *\n\t         */\n\t        passInstance: function passInstance() {\n\t            var self = this,\n\t                ext,\n\t                name;\n\n\t            for (name in self.options.extensions) {\n\t                if (self.options.extensions.hasOwnProperty(name)) {\n\t                    ext = self.options.extensions[name];\n\n\t                    if (ext.parent) {\n\t                        ext.base = self;\n\t                    }\n\t                }\n\t            }\n\n\t            return self;\n\t        },\n\n\t        bindParagraphCreation: function bindParagraphCreation(index) {\n\t            var self = this;\n\t            this.on(this.elements[index], \"keypress\", function (e) {\n\t                var node = getSelectionStart.call(self),\n\t                    tagName;\n\t                if (e.which === 32) {\n\t                    tagName = node.tagName.toLowerCase();\n\t                    if (tagName === \"a\") {\n\t                        document.execCommand(\"unlink\", false, null);\n\t                    }\n\t                }\n\t            });\n\n\t            this.on(this.elements[index], \"keyup\", function (e) {\n\t                var node = getSelectionStart.call(self),\n\t                    tagName,\n\t                    editorElement;\n\n\t                if (node && node.getAttribute(\"data-medium-element\") && node.children.length === 0 && !(self.options.disableReturn || node.getAttribute(\"data-disable-return\"))) {\n\t                    document.execCommand(\"formatBlock\", false, \"p\");\n\t                }\n\t                if (e.which === 13) {\n\t                    node = getSelectionStart.call(self);\n\t                    tagName = node.tagName.toLowerCase();\n\t                    editorElement = self.getSelectionElement();\n\n\t                    if (!(self.options.disableReturn || editorElement.getAttribute(\"data-disable-return\")) && tagName !== \"li\" && !self.isListItemChild(node)) {\n\t                        if (!e.shiftKey) {\n\t                            document.execCommand(\"formatBlock\", false, \"p\");\n\t                        }\n\t                        if (tagName === \"a\") {\n\t                            document.execCommand(\"unlink\", false, null);\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t            return this;\n\t        },\n\n\t        isListItemChild: function isListItemChild(node) {\n\t            var parentNode = node.parentNode,\n\t                tagName = parentNode.tagName.toLowerCase();\n\t            while (this.parentElements.indexOf(tagName) === -1 && tagName !== \"div\") {\n\t                if (tagName === \"li\") {\n\t                    return true;\n\t                }\n\t                parentNode = parentNode.parentNode;\n\t                if (parentNode && parentNode.tagName) {\n\t                    tagName = parentNode.tagName.toLowerCase();\n\t                } else {\n\t                    return false;\n\t                }\n\t            }\n\t            return false;\n\t        },\n\n\t        bindReturn: function bindReturn(index) {\n\t            var self = this;\n\t            this.on(this.elements[index], \"keypress\", function (e) {\n\t                if (e.which === 13) {\n\t                    if (self.options.disableReturn || this.getAttribute(\"data-disable-return\")) {\n\t                        e.preventDefault();\n\t                    } else if (self.options.disableDoubleReturn || this.getAttribute(\"data-disable-double-return\")) {\n\t                        var node = getSelectionStart.call(self);\n\t                        if (node && node.innerText === \"\\n\") {\n\t                            e.preventDefault();\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t            return this;\n\t        },\n\n\t        bindTab: function bindTab(index) {\n\t            var self = this;\n\t            this.on(this.elements[index], \"keydown\", function (e) {\n\t                if (e.which === 9) {\n\t                    // Override tab only for pre nodes\n\t                    var tag = getSelectionStart.call(self).tagName.toLowerCase();\n\t                    if (tag === \"pre\") {\n\t                        e.preventDefault();\n\t                        document.execCommand(\"insertHtml\", null, \"    \");\n\t                    }\n\n\t                    // Tab to indent list structures!\n\t                    if (tag === \"li\") {\n\t                        e.preventDefault();\n\n\t                        // If Shift is down, outdent, otherwise indent\n\t                        if (e.shiftKey) {\n\t                            document.execCommand(\"outdent\", e);\n\t                        } else {\n\t                            document.execCommand(\"indent\", e);\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t            return this;\n\t        },\n\n\t        buttonTemplate: function buttonTemplate(btnType) {\n\t            var buttonLabels = this.getButtonLabels(this.options.buttonLabels),\n\t                buttonTemplates = {\n\t                bold: \"<button class=\\\"medium-editor-action medium-editor-action-bold\\\" data-action=\\\"bold\\\" data-element=\\\"b\\\">\" + buttonLabels.bold + \"</button>\",\n\t                italic: \"<button class=\\\"medium-editor-action medium-editor-action-italic\\\" data-action=\\\"italic\\\" data-element=\\\"i\\\">\" + buttonLabels.italic + \"</button>\",\n\t                underline: \"<button class=\\\"medium-editor-action medium-editor-action-underline\\\" data-action=\\\"underline\\\" data-element=\\\"u\\\">\" + buttonLabels.underline + \"</button>\",\n\t                strikethrough: \"<button class=\\\"medium-editor-action medium-editor-action-strikethrough\\\" data-action=\\\"strikethrough\\\" data-element=\\\"strike\\\">\" + buttonLabels.strikethrough + \"</button>\",\n\t                superscript: \"<button class=\\\"medium-editor-action medium-editor-action-superscript\\\" data-action=\\\"superscript\\\" data-element=\\\"sup\\\">\" + buttonLabels.superscript + \"</button>\",\n\t                subscript: \"<button class=\\\"medium-editor-action medium-editor-action-subscript\\\" data-action=\\\"subscript\\\" data-element=\\\"sub\\\">\" + buttonLabels.subscript + \"</button>\",\n\t                anchor: \"<button class=\\\"medium-editor-action medium-editor-action-anchor\\\" data-action=\\\"anchor\\\" data-element=\\\"a\\\">\" + buttonLabels.anchor + \"</button>\",\n\t                image: \"<button class=\\\"medium-editor-action medium-editor-action-image\\\" data-action=\\\"image\\\" data-element=\\\"img\\\">\" + buttonLabels.image + \"</button>\",\n\t                header1: \"<button class=\\\"medium-editor-action medium-editor-action-header1\\\" data-action=\\\"append-\" + this.options.firstHeader + \"\\\" data-element=\\\"\" + this.options.firstHeader + \"\\\">\" + buttonLabels.header1 + \"</button>\",\n\t                header2: \"<button class=\\\"medium-editor-action medium-editor-action-header2\\\" data-action=\\\"append-\" + this.options.secondHeader + \"\\\" data-element=\\\"\" + this.options.secondHeader + \"\\\">\" + buttonLabels.header2 + \"</button>\",\n\t                quote: \"<button class=\\\"medium-editor-action medium-editor-action-quote\\\" data-action=\\\"append-blockquote\\\" data-element=\\\"blockquote\\\">\" + buttonLabels.quote + \"</button>\",\n\t                orderedlist: \"<button class=\\\"medium-editor-action medium-editor-action-orderedlist\\\" data-action=\\\"insertorderedlist\\\" data-element=\\\"ol\\\">\" + buttonLabels.orderedlist + \"</button>\",\n\t                unorderedlist: \"<button class=\\\"medium-editor-action medium-editor-action-unorderedlist\\\" data-action=\\\"insertunorderedlist\\\" data-element=\\\"ul\\\">\" + buttonLabels.unorderedlist + \"</button>\",\n\t                pre: \"<button class=\\\"medium-editor-action medium-editor-action-pre\\\" data-action=\\\"append-pre\\\" data-element=\\\"pre\\\">\" + buttonLabels.pre + \"</button>\",\n\t                indent: \"<button class=\\\"medium-editor-action medium-editor-action-indent\\\" data-action=\\\"indent\\\" data-element=\\\"ul\\\">\" + buttonLabels.indent + \"</button>\",\n\t                outdent: \"<button class=\\\"medium-editor-action medium-editor-action-outdent\\\" data-action=\\\"outdent\\\" data-element=\\\"ul\\\">\" + buttonLabels.outdent + \"</button>\",\n\t                justifyCenter: \"<button class=\\\"medium-editor-action medium-editor-action-justifyCenter\\\" data-action=\\\"justifyCenter\\\" data-element=\\\"\\\">\" + buttonLabels.justifyCenter + \"</button>\",\n\t                justifyFull: \"<button class=\\\"medium-editor-action medium-editor-action-justifyFull\\\" data-action=\\\"justifyFull\\\" data-element=\\\"\\\">\" + buttonLabels.justifyFull + \"</button>\",\n\t                justifyLeft: \"<button class=\\\"medium-editor-action medium-editor-action-justifyLeft\\\" data-action=\\\"justifyLeft\\\" data-element=\\\"\\\">\" + buttonLabels.justifyLeft + \"</button>\",\n\t                justifyRight: \"<button class=\\\"medium-editor-action medium-editor-action-justifyRight\\\" data-action=\\\"justifyRight\\\" data-element=\\\"\\\">\" + buttonLabels.justifyRight + \"</button>\"\n\t            };\n\t            return buttonTemplates[btnType] || false;\n\t        },\n\n\t        // TODO: break method\n\t        getButtonLabels: function getButtonLabels(buttonLabelType) {\n\t            var customButtonLabels,\n\t                attrname,\n\t                buttonLabels = {\n\t                bold: \"<b>B</b>\",\n\t                italic: \"<b><i>I</i></b>\",\n\t                underline: \"<b><u>U</u></b>\",\n\t                strikethrough: \"<s>A</s>\",\n\t                superscript: \"<b>x<sup>1</sup></b>\",\n\t                subscript: \"<b>x<sub>1</sub></b>\",\n\t                anchor: \"<b>#</b>\",\n\t                image: \"<b>image</b>\",\n\t                header1: \"<b>H1</b>\",\n\t                header2: \"<b>H2</b>\",\n\t                quote: \"<b>&ldquo;</b>\",\n\t                orderedlist: \"<b>1.</b>\",\n\t                unorderedlist: \"<b>&bull;</b>\",\n\t                pre: \"<b>0101</b>\",\n\t                indent: \"<b>&rarr;</b>\",\n\t                outdent: \"<b>&larr;</b>\",\n\t                justifyCenter: \"<b>C</b>\",\n\t                justifyFull: \"<b>J</b>\",\n\t                justifyLeft: \"<b>L</b>\",\n\t                justifyRight: \"<b>R</b>\"\n\t            };\n\t            if (buttonLabelType === \"fontawesome\") {\n\t                customButtonLabels = {\n\t                    bold: \"<i class=\\\"fa fa-bold\\\"></i>\",\n\t                    italic: \"<i class=\\\"fa fa-italic\\\"></i>\",\n\t                    underline: \"<i class=\\\"fa fa-underline\\\"></i>\",\n\t                    strikethrough: \"<i class=\\\"fa fa-strikethrough\\\"></i>\",\n\t                    superscript: \"<i class=\\\"fa fa-superscript\\\"></i>\",\n\t                    subscript: \"<i class=\\\"fa fa-subscript\\\"></i>\",\n\t                    anchor: \"<i class=\\\"fa fa-link\\\"></i>\",\n\t                    image: \"<i class=\\\"fa fa-picture-o\\\"></i>\",\n\t                    quote: \"<i class=\\\"fa fa-quote-right\\\"></i>\",\n\t                    orderedlist: \"<i class=\\\"fa fa-list-ol\\\"></i>\",\n\t                    unorderedlist: \"<i class=\\\"fa fa-list-ul\\\"></i>\",\n\t                    pre: \"<i class=\\\"fa fa-code fa-lg\\\"></i>\",\n\t                    indent: \"<i class=\\\"fa fa-indent\\\"></i>\",\n\t                    outdent: \"<i class=\\\"fa fa-outdent\\\"></i>\",\n\t                    justifyCenter: \"<i class=\\\"fa fa-align-center\\\"></i>\",\n\t                    justifyFull: \"<i class=\\\"fa fa-align-justify\\\"></i>\",\n\t                    justifyLeft: \"<i class=\\\"fa fa-align-left\\\"></i>\",\n\t                    justifyRight: \"<i class=\\\"fa fa-align-right\\\"></i>\"\n\t                };\n\t            } else if (typeof buttonLabelType === \"object\") {\n\t                customButtonLabels = buttonLabelType;\n\t            }\n\t            if (typeof customButtonLabels === \"object\") {\n\t                for (attrname in customButtonLabels) {\n\t                    if (customButtonLabels.hasOwnProperty(attrname)) {\n\t                        buttonLabels[attrname] = customButtonLabels[attrname];\n\t                    }\n\t                }\n\t            }\n\t            return buttonLabels;\n\t        },\n\n\t        initToolbar: function initToolbar() {\n\t            if (this.toolbar) {\n\t                return this;\n\t            }\n\t            this.toolbar = this.createToolbar();\n\t            this.keepToolbarAlive = false;\n\t            this.anchorForm = this.toolbar.querySelector(\".medium-editor-toolbar-form-anchor\");\n\t            this.anchorInput = this.anchorForm.querySelector(\"input.medium-editor-toolbar-anchor-input\");\n\t            this.anchorTarget = this.anchorForm.querySelector(\"input.medium-editor-toolbar-anchor-target\");\n\t            this.anchorButton = this.anchorForm.querySelector(\"input.medium-editor-toolbar-anchor-button\");\n\t            this.toolbarActions = this.toolbar.querySelector(\".medium-editor-toolbar-actions\");\n\t            this.anchorPreview = this.createAnchorPreview();\n\n\t            return this;\n\t        },\n\n\t        createToolbar: function createToolbar() {\n\t            var toolbar = document.createElement(\"div\");\n\t            toolbar.id = \"medium-editor-toolbar-\" + this.id;\n\t            toolbar.className = \"medium-editor-toolbar\";\n\t            toolbar.appendChild(this.toolbarButtons());\n\t            toolbar.appendChild(this.toolbarFormAnchor());\n\t            this.options.elementsContainer.appendChild(toolbar);\n\t            return toolbar;\n\t        },\n\n\t        //TODO: actionTemplate\n\t        toolbarButtons: function toolbarButtons() {\n\t            var btns = this.options.buttons,\n\t                ul = document.createElement(\"ul\"),\n\t                li,\n\t                i,\n\t                btn,\n\t                ext;\n\n\t            ul.id = \"medium-editor-toolbar-actions\";\n\t            ul.className = \"medium-editor-toolbar-actions clearfix\";\n\n\t            for (i = 0; i < btns.length; i += 1) {\n\t                if (this.options.extensions.hasOwnProperty(btns[i])) {\n\t                    ext = this.options.extensions[btns[i]];\n\t                    btn = ext.getButton !== undefined ? ext.getButton() : null;\n\t                } else {\n\t                    btn = this.buttonTemplate(btns[i]);\n\t                }\n\n\t                if (btn) {\n\t                    li = document.createElement(\"li\");\n\t                    if (isElement(btn)) {\n\t                        li.appendChild(btn);\n\t                    } else {\n\t                        li.innerHTML = btn;\n\t                    }\n\t                    ul.appendChild(li);\n\t                }\n\t            }\n\n\t            return ul;\n\t        },\n\n\t        toolbarFormAnchor: function toolbarFormAnchor() {\n\t            var anchor = document.createElement(\"div\"),\n\t                input = document.createElement(\"input\"),\n\t                target_label = document.createElement(\"label\"),\n\t                target = document.createElement(\"input\"),\n\t                button_label = document.createElement(\"label\"),\n\t                button = document.createElement(\"input\"),\n\t                close = document.createElement(\"a\"),\n\t                save = document.createElement(\"a\");\n\n\t            close.setAttribute(\"href\", \"#\");\n\t            close.className = \"medium-editor-toobar-anchor-close\";\n\t            close.innerHTML = \"&times;\";\n\n\t            save.setAttribute(\"href\", \"#\");\n\t            save.className = \"medium-editor-toobar-anchor-save\";\n\t            save.innerHTML = \"&#10003;\";\n\n\t            input.setAttribute(\"type\", \"text\");\n\t            input.className = \"medium-editor-toolbar-anchor-input\";\n\t            input.setAttribute(\"placeholder\", this.options.anchorInputPlaceholder);\n\n\t            target.setAttribute(\"type\", \"checkbox\");\n\t            target.className = \"medium-editor-toolbar-anchor-target\";\n\t            target_label.innerHTML = \"Open in New Window?\";\n\t            target_label.insertBefore(target, target_label.firstChild);\n\n\t            button.setAttribute(\"type\", \"checkbox\");\n\t            button.className = \"medium-editor-toolbar-anchor-button\";\n\t            button_label.innerHTML = \"Button\";\n\t            button_label.insertBefore(button, button_label.firstChild);\n\n\t            anchor.className = \"medium-editor-toolbar-form-anchor\";\n\t            anchor.id = \"medium-editor-toolbar-form-anchor\";\n\t            anchor.appendChild(input);\n\n\t            anchor.appendChild(save);\n\t            anchor.appendChild(close);\n\n\t            if (this.options.anchorTarget) {\n\t                anchor.appendChild(target_label);\n\t            }\n\n\t            if (this.options.anchorButton) {\n\t                anchor.appendChild(button_label);\n\t            }\n\n\t            return anchor;\n\t        },\n\n\t        bindSelect: function bindSelect() {\n\t            var self = this,\n\t                timer = \"\",\n\t                i;\n\n\t            this.checkSelectionWrapper = function (e) {\n\n\t                // Do not close the toolbar when bluring the editable area and clicking into the anchor form\n\t                if (e && self.clickingIntoArchorForm(e)) {\n\t                    return false;\n\t                }\n\n\t                clearTimeout(timer);\n\t                timer = setTimeout(function () {\n\t                    self.checkSelection();\n\t                }, self.options.delay);\n\t            };\n\n\t            this.on(document.documentElement, \"mouseup\", this.checkSelectionWrapper);\n\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                this.on(this.elements[i], \"keyup\", this.checkSelectionWrapper);\n\t                this.on(this.elements[i], \"blur\", this.checkSelectionWrapper);\n\t            }\n\t            return this;\n\t        },\n\n\t        checkSelection: function checkSelection() {\n\t            var newSelection, selectionElement;\n\n\t            if (this.keepToolbarAlive !== true && !this.options.disableToolbar) {\n\n\t                newSelection = this.options.contentWindow.getSelection();\n\t                if (newSelection.toString().trim() === \"\" || this.options.allowMultiParagraphSelection === false && this.hasMultiParagraphs() || this.selectionInContentEditableFalse()) {\n\t                    this.hideToolbarActions();\n\t                } else {\n\t                    selectionElement = this.getSelectionElement();\n\t                    if (!selectionElement || selectionElement.getAttribute(\"data-disable-toolbar\")) {\n\t                        this.hideToolbarActions();\n\t                    } else {\n\t                        this.checkSelectionElement(newSelection, selectionElement);\n\t                    }\n\t                }\n\t            }\n\t            return this;\n\t        },\n\n\t        clickingIntoArchorForm: function clickingIntoArchorForm(e) {\n\t            var self = this;\n\n\t            if (e.type && e.type.toLowerCase() === \"blur\" && e.relatedTarget && e.relatedTarget === self.anchorInput) {\n\t                return true;\n\t            }\n\n\t            return false;\n\t        },\n\n\t        hasMultiParagraphs: (function (_hasMultiParagraphs) {\n\t            var _hasMultiParagraphsWrapper = function hasMultiParagraphs() {\n\t                return _hasMultiParagraphs.apply(this, arguments);\n\t            };\n\n\t            _hasMultiParagraphsWrapper.toString = function () {\n\t                return _hasMultiParagraphs.toString();\n\t            };\n\n\t            return _hasMultiParagraphsWrapper;\n\t        })(function () {\n\t            var selectionHtml = getSelectionHtml.call(this).replace(/<[\\S]+><\\/[\\S]+>/gim, \"\"),\n\t                hasMultiParagraphs = selectionHtml.match(/<(p|h[0-6]|blockquote)>([\\s\\S]*?)<\\/(p|h[0-6]|blockquote)>/g);\n\n\t            return hasMultiParagraphs ? hasMultiParagraphs.length : 0;\n\t        }),\n\n\t        checkSelectionElement: function checkSelectionElement(newSelection, selectionElement) {\n\t            var i;\n\t            this.selection = newSelection;\n\t            this.selectionRange = this.selection.getRangeAt(0);\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                if (this.elements[i] === selectionElement) {\n\t                    this.setToolbarButtonStates().setToolbarPosition().showToolbarActions();\n\t                    return;\n\t                }\n\t            }\n\t            this.hideToolbarActions();\n\t        },\n\n\t        findMatchingSelectionParent: function findMatchingSelectionParent(testElementFunction) {\n\t            var selection = this.options.contentWindow.getSelection(),\n\t                range,\n\t                current;\n\n\t            if (selection.rangeCount === 0) {\n\t                return false;\n\t            }\n\n\t            range = selection.getRangeAt(0);\n\t            current = range.commonAncestorContainer;\n\n\t            do {\n\t                if (current.nodeType === 1) {\n\t                    if (testElementFunction(current)) {\n\t                        return current;\n\t                    }\n\t                    // do not traverse upwards past the nearest containing editor\n\t                    if (current.getAttribute(\"data-medium-element\")) {\n\t                        return false;\n\t                    }\n\t                }\n\n\t                current = current.parentNode;\n\t            } while (current);\n\n\t            return false;\n\t        },\n\n\t        getSelectionElement: function getSelectionElement() {\n\t            return this.findMatchingSelectionParent(function (el) {\n\t                return el.getAttribute(\"data-medium-element\");\n\t            });\n\t        },\n\n\t        selectionInContentEditableFalse: function selectionInContentEditableFalse() {\n\t            return this.findMatchingSelectionParent(function (el) {\n\t                return el && el.nodeName !== \"#text\" && el.getAttribute(\"contenteditable\") === \"false\";\n\t            });\n\t        },\n\n\t        setToolbarPosition: function setToolbarPosition() {\n\t            var buttonHeight = 50,\n\t                selection = this.options.contentWindow.getSelection(),\n\t                range = selection.getRangeAt(0),\n\t                boundary = range.getBoundingClientRect(),\n\t                defaultLeft = this.options.diffLeft - this.toolbar.offsetWidth / 2,\n\t                middleBoundary = (boundary.left + boundary.right) / 2,\n\t                halfOffsetWidth = this.toolbar.offsetWidth / 2;\n\t            if (boundary.top < buttonHeight) {\n\t                this.toolbar.classList.add(\"medium-toolbar-arrow-over\");\n\t                this.toolbar.classList.remove(\"medium-toolbar-arrow-under\");\n\t                this.toolbar.style.top = buttonHeight + boundary.bottom - this.options.diffTop + this.options.contentWindow.pageYOffset - this.toolbar.offsetHeight + \"px\";\n\t            } else {\n\t                this.toolbar.classList.add(\"medium-toolbar-arrow-under\");\n\t                this.toolbar.classList.remove(\"medium-toolbar-arrow-over\");\n\t                this.toolbar.style.top = boundary.top + this.options.diffTop + this.options.contentWindow.pageYOffset - this.toolbar.offsetHeight + \"px\";\n\t            }\n\t            if (middleBoundary < halfOffsetWidth) {\n\t                this.toolbar.style.left = defaultLeft + halfOffsetWidth + \"px\";\n\t            } else if (this.options.contentWindow.innerWidth - middleBoundary < halfOffsetWidth) {\n\t                this.toolbar.style.left = this.options.contentWindow.innerWidth + defaultLeft - halfOffsetWidth + \"px\";\n\t            } else {\n\t                this.toolbar.style.left = defaultLeft + middleBoundary + \"px\";\n\t            }\n\n\t            this.hideAnchorPreview();\n\n\t            return this;\n\t        },\n\n\t        setToolbarButtonStates: function setToolbarButtonStates() {\n\t            var buttons = this.toolbarActions.querySelectorAll(\"button\"),\n\t                i;\n\t            for (i = 0; i < buttons.length; i += 1) {\n\t                buttons[i].classList.remove(this.options.activeButtonClass);\n\t            }\n\t            this.checkActiveButtons();\n\t            return this;\n\t        },\n\n\t        checkActiveButtons: function checkActiveButtons() {\n\t            var elements = Array.prototype.slice.call(this.elements),\n\t                parentNode = this.getSelectedParentElement();\n\t            while (parentNode.tagName !== undefined && this.parentElements.indexOf(parentNode.tagName.toLowerCase) === -1) {\n\t                this.activateButton(parentNode.tagName.toLowerCase());\n\t                this.callExtensions(\"checkState\", parentNode);\n\n\t                // we can abort the search upwards if we leave the contentEditable element\n\t                if (elements.indexOf(parentNode) !== -1) {\n\t                    break;\n\t                }\n\t                parentNode = parentNode.parentNode;\n\t            }\n\t        },\n\n\t        activateButton: function activateButton(tag) {\n\t            var el = this.toolbar.querySelector(\"[data-element=\\\"\" + tag + \"\\\"]\");\n\t            if (el !== null && el.className.indexOf(this.options.activeButtonClass) === -1) {\n\t                el.className += \" \" + this.options.activeButtonClass;\n\t            }\n\t        },\n\n\t        bindButtons: function bindButtons() {\n\t            var buttons = this.toolbar.querySelectorAll(\"button\"),\n\t                i,\n\t                self = this,\n\t                triggerAction = function triggerAction(e) {\n\t                e.preventDefault();\n\t                e.stopPropagation();\n\t                if (self.selection === undefined) {\n\t                    self.checkSelection();\n\t                }\n\t                if (this.className.indexOf(self.options.activeButtonClass) > -1) {\n\t                    this.classList.remove(self.options.activeButtonClass);\n\t                } else {\n\t                    this.className += \" \" + self.options.activeButtonClass;\n\t                }\n\t                if (this.hasAttribute(\"data-action\")) {\n\t                    self.execAction(this.getAttribute(\"data-action\"), e);\n\t                }\n\t            };\n\t            for (i = 0; i < buttons.length; i += 1) {\n\t                this.on(buttons[i], \"click\", triggerAction);\n\t            }\n\t            this.setFirstAndLastItems(buttons);\n\t            return this;\n\t        },\n\n\t        setFirstAndLastItems: function setFirstAndLastItems(buttons) {\n\t            if (buttons.length > 0) {\n\t                buttons[0].className += \" \" + this.options.firstButtonClass;\n\t                buttons[buttons.length - 1].className += \" \" + this.options.lastButtonClass;\n\t            }\n\t            return this;\n\t        },\n\n\t        execAction: function execAction(action, e) {\n\t            if (action.indexOf(\"append-\") > -1) {\n\t                this.execFormatBlock(action.replace(\"append-\", \"\"));\n\t                this.setToolbarPosition();\n\t                this.setToolbarButtonStates();\n\t            } else if (action === \"anchor\") {\n\t                this.triggerAnchorAction(e);\n\t            } else if (action === \"image\") {\n\t                this.options.ownerDocument.execCommand(\"insertImage\", false, this.options.contentWindow.getSelection());\n\t            } else {\n\t                this.options.ownerDocument.execCommand(action, false, null);\n\t                this.setToolbarPosition();\n\t            }\n\t        },\n\n\t        // http://stackoverflow.com/questions/15867542/range-object-get-selection-parent-node-chrome-vs-firefox\n\t        rangeSelectsSingleNode: function rangeSelectsSingleNode(range) {\n\t            var startNode = range.startContainer;\n\t            return startNode === range.endContainer && startNode.hasChildNodes() && range.endOffset === range.startOffset + 1;\n\t        },\n\n\t        getSelectedParentElement: function getSelectedParentElement() {\n\t            var selectedParentElement = null,\n\t                range = this.selectionRange;\n\t            if (this.rangeSelectsSingleNode(range)) {\n\t                selectedParentElement = range.startContainer.childNodes[range.startOffset];\n\t            } else if (range.startContainer.nodeType === 3) {\n\t                selectedParentElement = range.startContainer.parentNode;\n\t            } else {\n\t                selectedParentElement = range.startContainer;\n\t            }\n\t            return selectedParentElement;\n\t        },\n\n\t        triggerAnchorAction: function triggerAnchorAction() {\n\t            var selectedParentElement = this.getSelectedParentElement();\n\t            if (selectedParentElement.tagName && selectedParentElement.tagName.toLowerCase() === \"a\") {\n\t                this.options.ownerDocument.execCommand(\"unlink\", false, null);\n\t            } else {\n\t                if (this.anchorForm.style.display === \"block\") {\n\t                    this.showToolbarActions();\n\t                } else {\n\t                    this.showAnchorForm();\n\t                }\n\t            }\n\t            return this;\n\t        },\n\n\t        execFormatBlock: function execFormatBlock(el) {\n\t            var selectionData = this.getSelectionData(this.selection.anchorNode);\n\t            // FF handles blockquote differently on formatBlock\n\t            // allowing nesting, we need to use outdent\n\t            // https://developer.mozilla.org/en-US/docs/Rich-Text_Editing_in_Mozilla\n\t            if (el === \"blockquote\" && selectionData.el && selectionData.el.parentNode.tagName.toLowerCase() === \"blockquote\") {\n\t                return this.options.ownerDocument.execCommand(\"outdent\", false, null);\n\t            }\n\t            if (selectionData.tagName === el) {\n\t                el = \"p\";\n\t            }\n\t            // When IE we need to add <> to heading elements and\n\t            //  blockquote needs to be called as indent\n\t            // http://stackoverflow.com/questions/10741831/execcommand-formatblock-headings-in-ie\n\t            // http://stackoverflow.com/questions/1816223/rich-text-editor-with-blockquote-function/1821777#1821777\n\t            if (this.isIE) {\n\t                if (el === \"blockquote\") {\n\t                    return this.options.ownerDocument.execCommand(\"indent\", false, el);\n\t                }\n\t                el = \"<\" + el + \">\";\n\t            }\n\t            return this.options.ownerDocument.execCommand(\"formatBlock\", false, el);\n\t        },\n\n\t        getSelectionData: function getSelectionData(el) {\n\t            var tagName;\n\n\t            if (el && el.tagName) {\n\t                tagName = el.tagName.toLowerCase();\n\t            }\n\n\t            while (el && this.parentElements.indexOf(tagName) === -1) {\n\t                el = el.parentNode;\n\t                if (el && el.tagName) {\n\t                    tagName = el.tagName.toLowerCase();\n\t                }\n\t            }\n\n\t            return {\n\t                el: el,\n\t                tagName: tagName\n\t            };\n\t        },\n\n\t        getFirstChild: function getFirstChild(el) {\n\t            var firstChild = el.firstChild;\n\t            while (firstChild !== null && firstChild.nodeType !== 1) {\n\t                firstChild = firstChild.nextSibling;\n\t            }\n\t            return firstChild;\n\t        },\n\n\t        hideToolbarActions: function hideToolbarActions() {\n\t            this.keepToolbarAlive = false;\n\t            if (this.toolbar !== undefined) {\n\t                this.toolbar.classList.remove(\"medium-editor-toolbar-active\");\n\t            }\n\t        },\n\n\t        showToolbarActions: function showToolbarActions() {\n\t            var self = this,\n\t                timer;\n\t            this.anchorForm.style.display = \"none\";\n\t            this.toolbarActions.style.display = \"block\";\n\t            this.keepToolbarAlive = false;\n\t            clearTimeout(timer);\n\t            timer = setTimeout(function () {\n\t                if (self.toolbar && !self.toolbar.classList.contains(\"medium-editor-toolbar-active\")) {\n\t                    self.toolbar.classList.add(\"medium-editor-toolbar-active\");\n\t                }\n\t            }, 100);\n\t        },\n\n\t        saveSelection: (function (_saveSelection) {\n\t            var _saveSelectionWrapper = function saveSelection() {\n\t                return _saveSelection.apply(this, arguments);\n\t            };\n\n\t            _saveSelectionWrapper.toString = function () {\n\t                return _saveSelection.toString();\n\t            };\n\n\t            return _saveSelectionWrapper;\n\t        })(function () {\n\t            this.savedSelection = saveSelection.call(this);\n\t        }),\n\n\t        restoreSelection: (function (_restoreSelection) {\n\t            var _restoreSelectionWrapper = function restoreSelection() {\n\t                return _restoreSelection.apply(this, arguments);\n\t            };\n\n\t            _restoreSelectionWrapper.toString = function () {\n\t                return _restoreSelection.toString();\n\t            };\n\n\t            return _restoreSelectionWrapper;\n\t        })(function () {\n\t            restoreSelection.call(this, this.savedSelection);\n\t        }),\n\n\t        showAnchorForm: function showAnchorForm(link_value) {\n\t            this.toolbarActions.style.display = \"none\";\n\t            this.saveSelection();\n\t            this.anchorForm.style.display = \"block\";\n\t            this.setToolbarPosition();\n\t            this.keepToolbarAlive = true;\n\t            this.anchorInput.focus();\n\t            this.anchorInput.value = link_value || \"\";\n\t        },\n\n\t        bindAnchorForm: function bindAnchorForm() {\n\t            var linkCancel = this.anchorForm.querySelector(\"a.medium-editor-toobar-anchor-close\"),\n\t                linkSave = this.anchorForm.querySelector(\"a.medium-editor-toobar-anchor-save\"),\n\t                self = this;\n\n\t            this.on(this.anchorForm, \"click\", function (e) {\n\t                e.stopPropagation();\n\t                self.keepToolbarAlive = true;\n\t            });\n\n\t            this.on(this.anchorInput, \"keyup\", function (e) {\n\t                var button = null,\n\t                    target;\n\n\t                if (e.keyCode === 13) {\n\t                    e.preventDefault();\n\t                    if (self.options.anchorTarget && self.anchorTarget.checked) {\n\t                        target = \"_blank\";\n\t                    } else {\n\t                        target = \"_self\";\n\t                    }\n\n\t                    if (self.options.anchorButton && self.anchorButton.checked) {\n\t                        button = self.options.anchorButtonClass;\n\t                    }\n\n\t                    self.createLink(this, target, button);\n\t                }\n\t            });\n\n\t            this.on(linkSave, \"click\", function (e) {\n\t                var button = null,\n\t                    target;\n\t                e.preventDefault();\n\t                if (self.options.anchorTarget && self.anchorTarget.checked) {\n\t                    target = \"_blank\";\n\t                } else {\n\t                    target = \"_self\";\n\t                }\n\n\t                if (self.options.anchorButton && self.anchorButton.checked) {\n\t                    button = self.options.anchorButtonClass;\n\t                }\n\n\t                self.createLink(self.anchorInput, target, button);\n\t            }, true);\n\n\t            this.on(this.anchorInput, \"click\", function (e) {\n\t                // make sure not to hide form when cliking into the input\n\t                e.stopPropagation();\n\t                self.keepToolbarAlive = true;\n\t            });\n\n\t            // Hide the anchor form when focusing outside of it.\n\t            this.on(this.options.ownerDocument.body, \"click\", function (e) {\n\t                if (e.target !== self.anchorForm && !isDescendant(self.anchorForm, e.target) && !isDescendant(self.toolbarActions, e.target)) {\n\t                    self.keepToolbarAlive = false;\n\t                    self.checkSelection();\n\t                }\n\t            }, true);\n\t            this.on(this.options.ownerDocument.body, \"focus\", function (e) {\n\t                if (e.target !== self.anchorForm && !isDescendant(self.anchorForm, e.target) && !isDescendant(self.toolbarActions, e.target)) {\n\t                    self.keepToolbarAlive = false;\n\t                    self.checkSelection();\n\t                }\n\t            }, true);\n\n\t            this.on(linkCancel, \"click\", function (e) {\n\t                e.preventDefault();\n\t                self.showToolbarActions();\n\t                restoreSelection.call(self, self.savedSelection);\n\t            });\n\t            return this;\n\t        },\n\n\t        hideAnchorPreview: function hideAnchorPreview() {\n\t            this.anchorPreview.classList.remove(\"medium-editor-anchor-preview-active\");\n\t        },\n\n\t        // TODO: break method\n\t        showAnchorPreview: function showAnchorPreview(anchorEl) {\n\t            if (this.anchorPreview.classList.contains(\"medium-editor-anchor-preview-active\") || anchorEl.getAttribute(\"data-disable-preview\")) {\n\t                return true;\n\t            }\n\n\t            var self = this,\n\t                buttonHeight = 40,\n\t                boundary = anchorEl.getBoundingClientRect(),\n\t                middleBoundary = (boundary.left + boundary.right) / 2,\n\t                halfOffsetWidth,\n\t                defaultLeft,\n\t                timer;\n\n\t            self.anchorPreview.querySelector(\"i\").textContent = anchorEl.href;\n\t            halfOffsetWidth = self.anchorPreview.offsetWidth / 2;\n\t            defaultLeft = self.options.diffLeft - halfOffsetWidth;\n\n\t            clearTimeout(timer);\n\t            timer = setTimeout(function () {\n\t                if (self.anchorPreview && !self.anchorPreview.classList.contains(\"medium-editor-anchor-preview-active\")) {\n\t                    self.anchorPreview.classList.add(\"medium-editor-anchor-preview-active\");\n\t                }\n\t            }, 100);\n\n\t            self.observeAnchorPreview(anchorEl);\n\n\t            self.anchorPreview.classList.add(\"medium-toolbar-arrow-over\");\n\t            self.anchorPreview.classList.remove(\"medium-toolbar-arrow-under\");\n\t            self.anchorPreview.style.top = Math.round(buttonHeight + boundary.bottom - self.options.diffTop + this.options.contentWindow.pageYOffset - self.anchorPreview.offsetHeight) + \"px\";\n\t            if (middleBoundary < halfOffsetWidth) {\n\t                self.anchorPreview.style.left = defaultLeft + halfOffsetWidth + \"px\";\n\t            } else if (this.options.contentWindow.innerWidth - middleBoundary < halfOffsetWidth) {\n\t                self.anchorPreview.style.left = this.options.contentWindow.innerWidth + defaultLeft - halfOffsetWidth + \"px\";\n\t            } else {\n\t                self.anchorPreview.style.left = defaultLeft + middleBoundary + \"px\";\n\t            }\n\n\t            return this;\n\t        },\n\n\t        // TODO: break method\n\t        observeAnchorPreview: function observeAnchorPreview(anchorEl) {\n\t            var self = this,\n\t                lastOver = new Date().getTime(),\n\t                over = true,\n\t                stamp = function stamp() {\n\t                lastOver = new Date().getTime();\n\t                over = true;\n\t            },\n\t                unstamp = function unstamp(e) {\n\t                if (!e.relatedTarget || !/anchor-preview/.test(e.relatedTarget.className)) {\n\t                    over = false;\n\t                }\n\t            },\n\t                interval_timer = setInterval(function () {\n\t                if (over) {\n\t                    return true;\n\t                }\n\t                var durr = new Date().getTime() - lastOver;\n\t                if (durr > self.options.anchorPreviewHideDelay) {\n\t                    // hide the preview 1/2 second after mouse leaves the link\n\t                    self.hideAnchorPreview();\n\n\t                    // cleanup\n\t                    clearInterval(interval_timer);\n\t                    self.off(self.anchorPreview, \"mouseover\", stamp);\n\t                    self.off(self.anchorPreview, \"mouseout\", unstamp);\n\t                    self.off(anchorEl, \"mouseover\", stamp);\n\t                    self.off(anchorEl, \"mouseout\", unstamp);\n\t                }\n\t            }, 200);\n\n\t            this.on(self.anchorPreview, \"mouseover\", stamp);\n\t            this.on(self.anchorPreview, \"mouseout\", unstamp);\n\t            this.on(anchorEl, \"mouseover\", stamp);\n\t            this.on(anchorEl, \"mouseout\", unstamp);\n\t        },\n\n\t        createAnchorPreview: function createAnchorPreview() {\n\t            var self = this,\n\t                anchorPreview = this.options.ownerDocument.createElement(\"div\");\n\n\t            anchorPreview.id = \"medium-editor-anchor-preview-\" + this.id;\n\t            anchorPreview.className = \"medium-editor-anchor-preview\";\n\t            anchorPreview.innerHTML = this.anchorPreviewTemplate();\n\t            this.options.elementsContainer.appendChild(anchorPreview);\n\n\t            this.on(anchorPreview, \"click\", function () {\n\t                self.anchorPreviewClickHandler();\n\t            });\n\n\t            return anchorPreview;\n\t        },\n\n\t        anchorPreviewTemplate: function anchorPreviewTemplate() {\n\t            return \"<div class=\\\"medium-editor-toolbar-anchor-preview\\\" id=\\\"medium-editor-toolbar-anchor-preview\\\">\" + \"    <i class=\\\"medium-editor-toolbar-anchor-preview-inner\\\"></i>\" + \"</div>\";\n\t        },\n\n\t        anchorPreviewClickHandler: function anchorPreviewClickHandler(e) {\n\t            if (this.activeAnchor) {\n\n\t                var self = this,\n\t                    range = this.options.ownerDocument.createRange(),\n\t                    sel = this.options.contentWindow.getSelection();\n\n\t                range.selectNodeContents(self.activeAnchor);\n\t                sel.removeAllRanges();\n\t                sel.addRange(range);\n\t                setTimeout(function () {\n\t                    if (self.activeAnchor) {\n\t                        self.showAnchorForm(self.activeAnchor.href);\n\t                    }\n\t                    self.keepToolbarAlive = false;\n\t                }, 100 + self.options.delay);\n\t            }\n\n\t            this.hideAnchorPreview();\n\t        },\n\n\t        editorAnchorObserver: function editorAnchorObserver(e) {\n\t            var self = this,\n\t                overAnchor = true,\n\t                leaveAnchor = (function (_leaveAnchor) {\n\t                var _leaveAnchorWrapper = function leaveAnchor() {\n\t                    return _leaveAnchor.apply(this, arguments);\n\t                };\n\n\t                _leaveAnchorWrapper.toString = function () {\n\t                    return _leaveAnchor.toString();\n\t                };\n\n\t                return _leaveAnchorWrapper;\n\t            })(function () {\n\t                // mark the anchor as no longer hovered, and stop listening\n\t                overAnchor = false;\n\t                self.off(self.activeAnchor, \"mouseout\", leaveAnchor);\n\t            });\n\n\t            if (e.target && e.target.tagName.toLowerCase() === \"a\") {\n\n\t                // Detect empty href attributes\n\t                // The browser will make href=\"\" or href=\"#top\"\n\t                // into absolute urls when accessed as e.targed.href, so check the html\n\t                if (!/href=[\"']\\S+[\"']/.test(e.target.outerHTML) || /href=[\"']#\\S+[\"']/.test(e.target.outerHTML)) {\n\t                    return true;\n\t                }\n\n\t                // only show when hovering on anchors\n\t                if (this.toolbar.classList.contains(\"medium-editor-toolbar-active\")) {\n\t                    // only show when toolbar is not present\n\t                    return true;\n\t                }\n\t                this.activeAnchor = e.target;\n\t                this.on(this.activeAnchor, \"mouseout\", leaveAnchor);\n\t                // show the anchor preview according to the configured delay\n\t                // if the mouse has not left the anchor tag in that time\n\t                setTimeout(function () {\n\t                    if (overAnchor) {\n\t                        self.showAnchorPreview(e.target);\n\t                    }\n\t                }, self.options.delay);\n\t            }\n\t        },\n\n\t        bindAnchorPreview: function bindAnchorPreview(index) {\n\t            var i,\n\t                self = this;\n\t            this.editorAnchorObserverWrapper = function (e) {\n\t                self.editorAnchorObserver(e);\n\t            };\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                this.on(this.elements[i], \"mouseover\", this.editorAnchorObserverWrapper);\n\t            }\n\t            return this;\n\t        },\n\n\t        checkLinkFormat: function checkLinkFormat(value) {\n\t            var re = /^(https?|ftps?|rtmpt?):\\/\\/|mailto:/;\n\t            return (re.test(value) ? \"\" : \"http://\") + value;\n\t        },\n\n\t        setTargetBlank: function setTargetBlank(el) {\n\t            var i;\n\t            el = el || getSelectionStart.call(this);\n\t            if (el.tagName.toLowerCase() === \"a\") {\n\t                el.target = \"_blank\";\n\t            } else {\n\t                el = el.getElementsByTagName(\"a\");\n\n\t                for (i = 0; i < el.length; i += 1) {\n\t                    el[i].target = \"_blank\";\n\t                }\n\t            }\n\t        },\n\n\t        setButtonClass: function setButtonClass(buttonClass) {\n\t            var el = getSelectionStart.call(this),\n\t                classes = buttonClass.split(\" \"),\n\t                i,\n\t                j;\n\t            if (el.tagName.toLowerCase() === \"a\") {\n\t                for (j = 0; j < classes.length; j += 1) {\n\t                    el.classList.add(classes[j]);\n\t                }\n\t            } else {\n\t                el = el.getElementsByTagName(\"a\");\n\t                for (i = 0; i < el.length; i += 1) {\n\t                    for (j = 0; j < classes.length; j += 1) {\n\t                        el[i].classList.add(classes[j]);\n\t                    }\n\t                }\n\t            }\n\t        },\n\n\t        createLink: function createLink(input, target, buttonClass) {\n\t            var i, event;\n\n\t            if (input.value.trim().length === 0) {\n\t                this.hideToolbarActions();\n\t                return;\n\t            }\n\n\t            restoreSelection.call(this, this.savedSelection);\n\n\t            if (this.options.checkLinkFormat) {\n\t                input.value = this.checkLinkFormat(input.value);\n\t            }\n\n\t            this.options.ownerDocument.execCommand(\"createLink\", false, input.value);\n\n\t            if (this.options.targetBlank || target === \"_blank\") {\n\t                this.setTargetBlank();\n\t            }\n\n\t            if (buttonClass) {\n\t                this.setButtonClass(buttonClass);\n\t            }\n\n\t            if (this.options.targetBlank || target === \"_blank\" || buttonClass) {\n\t                event = this.options.ownerDocument.createEvent(\"HTMLEvents\");\n\t                event.initEvent(\"input\", true, true, this.options.contentWindow);\n\t                for (i = 0; i < this.elements.length; i += 1) {\n\t                    this.elements[i].dispatchEvent(event);\n\t                }\n\t            }\n\n\t            this.checkSelection();\n\t            this.showToolbarActions();\n\t            input.value = \"\";\n\t        },\n\n\t        bindWindowActions: function bindWindowActions() {\n\t            var timerResize,\n\t                self = this;\n\t            this.windowResizeHandler = function () {\n\t                clearTimeout(timerResize);\n\t                timerResize = setTimeout(function () {\n\t                    if (self.toolbar && self.toolbar.classList.contains(\"medium-editor-toolbar-active\")) {\n\t                        self.setToolbarPosition();\n\t                    }\n\t                }, 100);\n\t            };\n\t            this.on(this.options.contentWindow, \"resize\", this.windowResizeHandler);\n\t            return this;\n\t        },\n\n\t        activate: function activate() {\n\t            if (this.isActive) {\n\t                return;\n\t            }\n\n\t            this.setup();\n\t        },\n\n\t        // TODO: break method\n\t        deactivate: function deactivate() {\n\t            var i;\n\t            if (!this.isActive) {\n\t                return;\n\t            }\n\t            this.isActive = false;\n\n\t            if (this.toolbar !== undefined) {\n\t                this.options.elementsContainer.removeChild(this.anchorPreview);\n\t                this.options.elementsContainer.removeChild(this.toolbar);\n\t                delete this.toolbar;\n\t                delete this.anchorPreview;\n\t            }\n\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                this.elements[i].removeAttribute(\"contentEditable\");\n\t                this.elements[i].removeAttribute(\"data-medium-element\");\n\t            }\n\n\t            this.removeAllEvents();\n\t        },\n\n\t        htmlEntities: function htmlEntities(str) {\n\t            // converts special characters (like <) into their escaped/encoded values (like &lt;).\n\t            // This allows you to show to display the string without the browser reading it as HTML.\n\t            return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\");\n\t        },\n\n\t        bindPaste: function bindPaste() {\n\t            var i,\n\t                self = this;\n\t            this.pasteWrapper = function (e) {\n\t                var paragraphs,\n\t                    html = \"\",\n\t                    p;\n\n\t                this.classList.remove(\"medium-editor-placeholder\");\n\t                if (!self.options.forcePlainText && !self.options.cleanPastedHTML) {\n\t                    return this;\n\t                }\n\n\t                if (e.clipboardData && e.clipboardData.getData && !e.defaultPrevented) {\n\t                    e.preventDefault();\n\n\t                    if (self.options.cleanPastedHTML && e.clipboardData.getData(\"text/html\")) {\n\t                        return self.cleanPaste(e.clipboardData.getData(\"text/html\"));\n\t                    }\n\t                    if (!(self.options.disableReturn || this.getAttribute(\"data-disable-return\"))) {\n\t                        paragraphs = e.clipboardData.getData(\"text/plain\").split(/[\\r\\n]/g);\n\t                        for (p = 0; p < paragraphs.length; p += 1) {\n\t                            if (paragraphs[p] !== \"\") {\n\t                                if (navigator.userAgent.match(/firefox/i) && p === 0) {\n\t                                    html += self.htmlEntities(paragraphs[p]);\n\t                                } else {\n\t                                    html += \"<p>\" + self.htmlEntities(paragraphs[p]) + \"</p>\";\n\t                                }\n\t                            }\n\t                        }\n\t                        self.options.ownerDocument.execCommand(\"insertHTML\", false, html);\n\t                    } else {\n\t                        html = self.htmlEntities(e.clipboardData.getData(\"text/plain\"));\n\t                        self.options.ownerDocument.execCommand(\"insertHTML\", false, html);\n\t                    }\n\t                }\n\t            };\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                this.on(this.elements[i], \"paste\", this.pasteWrapper);\n\t            }\n\t            return this;\n\t        },\n\n\t        setPlaceholders: function setPlaceholders() {\n\t            var i,\n\t                activatePlaceholder = function activatePlaceholder(el) {\n\t                if (!el.querySelector(\"img\") && !el.querySelector(\"blockquote\") && el.textContent.replace(/^\\s+|\\s+$/g, \"\") === \"\") {\n\t                    el.classList.add(\"medium-editor-placeholder\");\n\t                }\n\t            },\n\t                placeholderWrapper = function placeholderWrapper(e) {\n\t                this.classList.remove(\"medium-editor-placeholder\");\n\t                if (e.type !== \"keypress\") {\n\t                    activatePlaceholder(this);\n\t                }\n\t            };\n\t            for (i = 0; i < this.elements.length; i += 1) {\n\t                activatePlaceholder(this.elements[i]);\n\t                this.on(this.elements[i], \"blur\", placeholderWrapper);\n\t                this.on(this.elements[i], \"keypress\", placeholderWrapper);\n\t            }\n\t            return this;\n\t        },\n\n\t        cleanPaste: function cleanPaste(text) {\n\n\t            /*jslint regexp: true*/\n\t            /*\n\t                jslint does not allow character negation, because the negation\n\t                will not match any unicode characters. In the regexes in this\n\t                block, negation is used specifically to match the end of an html\n\t                tag, and in fact unicode characters *should* be allowed.\n\t            */\n\t            var i,\n\t                elList,\n\t                workEl,\n\t                el = this.getSelectionElement(),\n\t                multiline = /<p|<br|<div/.test(text),\n\t                replacements = [\n\n\t            // replace two bogus tags that begin pastes from google docs\n\t            [new RegExp(/<[^>]*docs-internal-guid[^>]*>/gi), \"\"], [new RegExp(/<\\/b>(<br[^>]*>)?$/gi), \"\"],\n\n\t            // un-html spaces and newlines inserted by OS X\n\t            [new RegExp(/<span class=\"Apple-converted-space\">\\s+<\\/span>/g), \" \"], [new RegExp(/<br class=\"Apple-interchange-newline\">/g), \"<br>\"],\n\n\t            // replace google docs italics+bold with a span to be replaced once the html is inserted\n\t            [new RegExp(/<span[^>]*(font-style:italic;font-weight:bold|font-weight:bold;font-style:italic)[^>]*>/gi), \"<span class=\\\"replace-with italic bold\\\">\"],\n\n\t            // replace google docs italics with a span to be replaced once the html is inserted\n\t            [new RegExp(/<span[^>]*font-style:italic[^>]*>/gi), \"<span class=\\\"replace-with italic\\\">\"],\n\n\t            //[replace google docs bolds with a span to be replaced once the html is inserted\n\t            [new RegExp(/<span[^>]*font-weight:bold[^>]*>/gi), \"<span class=\\\"replace-with bold\\\">\"],\n\n\t            // replace manually entered b/i/a tags with real ones\n\t            [new RegExp(/&lt;(\\/?)(i|b|a)&gt;/gi), \"<$1$2>\"],\n\n\t            // replace manually a tags with real ones, converting smart-quotes from google docs\n\t            [new RegExp(/&lt;a\\s+href=(&quot;|&rdquo;|&ldquo;|“|”)([^&]+)(&quot;|&rdquo;|&ldquo;|“|”)&gt;/gi), \"<a href=\\\"$2\\\">\"]];\n\t            /*jslint regexp: false*/\n\n\t            for (i = 0; i < replacements.length; i += 1) {\n\t                text = text.replace(replacements[i][0], replacements[i][1]);\n\t            }\n\n\t            if (multiline) {\n\n\t                // double br's aren't converted to p tags, but we want paragraphs.\n\t                elList = text.split(\"<br><br>\");\n\n\t                this.pasteHTML(\"<p>\" + elList.join(\"</p><p>\") + \"</p>\");\n\t                this.options.ownerDocument.execCommand(\"insertText\", false, \"\\n\");\n\n\t                // block element cleanup\n\t                elList = el.querySelectorAll(\"a,p,div,br\");\n\t                for (i = 0; i < elList.length; i += 1) {\n\n\t                    workEl = elList[i];\n\n\t                    switch (workEl.tagName.toLowerCase()) {\n\t                        case \"a\":\n\t                            if (this.options.targetBlank) {\n\t                                this.setTargetBlank(workEl);\n\t                            }\n\t                            break;\n\t                        case \"p\":\n\t                        case \"div\":\n\t                            this.filterCommonBlocks(workEl);\n\t                            break;\n\t                        case \"br\":\n\t                            this.filterLineBreak(workEl);\n\t                            break;\n\t                    }\n\t                }\n\t            } else {\n\n\t                this.pasteHTML(text);\n\t            }\n\t        },\n\n\t        pasteHTML: function pasteHTML(html) {\n\t            var elList,\n\t                workEl,\n\t                i,\n\t                fragmentBody,\n\t                pasteBlock = this.options.ownerDocument.createDocumentFragment();\n\n\t            pasteBlock.appendChild(this.options.ownerDocument.createElement(\"body\"));\n\n\t            fragmentBody = pasteBlock.querySelector(\"body\");\n\t            fragmentBody.innerHTML = html;\n\n\t            this.cleanupSpans(fragmentBody);\n\n\t            elList = fragmentBody.querySelectorAll(\"*\");\n\t            for (i = 0; i < elList.length; i += 1) {\n\n\t                workEl = elList[i];\n\n\t                // delete ugly attributes\n\t                workEl.removeAttribute(\"class\");\n\t                workEl.removeAttribute(\"style\");\n\t                workEl.removeAttribute(\"dir\");\n\n\t                if (workEl.tagName.toLowerCase() === \"meta\") {\n\t                    workEl.parentNode.removeChild(workEl);\n\t                }\n\t            }\n\t            this.options.ownerDocument.execCommand(\"insertHTML\", false, fragmentBody.innerHTML.replace(/&nbsp;/g, \" \"));\n\t        },\n\t        isCommonBlock: function isCommonBlock(el) {\n\t            return el && (el.tagName.toLowerCase() === \"p\" || el.tagName.toLowerCase() === \"div\");\n\t        },\n\t        filterCommonBlocks: function filterCommonBlocks(el) {\n\t            if (/^\\s*$/.test(el.innerText)) {\n\t                el.parentNode.removeChild(el);\n\t            }\n\t        },\n\t        filterLineBreak: function filterLineBreak(el) {\n\t            if (this.isCommonBlock(el.previousElementSibling)) {\n\n\t                // remove stray br's following common block elements\n\t                el.parentNode.removeChild(el);\n\t            } else if (this.isCommonBlock(el.parentNode) && (el.parentNode.firstChild === el || el.parentNode.lastChild === el)) {\n\n\t                // remove br's just inside open or close tags of a div/p\n\t                el.parentNode.removeChild(el);\n\t            } else if (el.parentNode.childElementCount === 1) {\n\n\t                // and br's that are the only child of a div/p\n\t                this.removeWithParent(el);\n\t            }\n\t        },\n\n\t        // remove an element, including its parent, if it is the only element within its parent\n\t        removeWithParent: function removeWithParent(el) {\n\t            if (el && el.parentNode) {\n\t                if (el.parentNode.parentNode && el.parentNode.childElementCount === 1) {\n\t                    el.parentNode.parentNode.removeChild(el.parentNode);\n\t                } else {\n\t                    el.parentNode.removeChild(el.parentNode);\n\t                }\n\t            }\n\t        },\n\n\t        cleanupSpans: function cleanupSpans(container_el) {\n\n\t            var i,\n\t                el,\n\t                new_el,\n\t                spans = container_el.querySelectorAll(\".replace-with\");\n\n\t            for (i = 0; i < spans.length; i += 1) {\n\n\t                el = spans[i];\n\t                new_el = this.options.ownerDocument.createElement(el.classList.contains(\"bold\") ? \"b\" : \"i\");\n\n\t                if (el.classList.contains(\"bold\") && el.classList.contains(\"italic\")) {\n\n\t                    // add an i tag as well if this has both italics and bold\n\t                    new_el.innerHTML = \"<i>\" + el.innerHTML + \"</i>\";\n\t                } else {\n\n\t                    new_el.innerHTML = el.innerHTML;\n\t                }\n\t                el.parentNode.replaceChild(new_el, el);\n\t            }\n\n\t            spans = container_el.querySelectorAll(\"span\");\n\t            for (i = 0; i < spans.length; i += 1) {\n\n\t                el = spans[i];\n\n\t                // remove empty spans, replace others with their contents\n\t                if (/^\\s*$/.test()) {\n\t                    el.parentNode.removeChild(el);\n\t                } else {\n\t                    el.parentNode.replaceChild(this.options.ownerDocument.createTextNode(el.innerText), el);\n\t                }\n\t            }\n\t        }\n\n\t    };\n\t})(window, document);\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** addons/medium.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6bfc2f9649ee417b3f62\n **/","/**\n * This component adds a medium.com-like rich text editor block type.\n *\n * Source for this component can be found here:\n * https://github.com/daviferreira/medium-editor\n */\n\nimport MediumEditor from './vendor/medium-editor'\nimport React        from 'react'\n\nrequire('./style')\n\nvar Medium = React.createClass({\n\n  propTypes: {\n    content  : React.PropTypes.object.isRequired,\n    onChange : React.PropTypes.func.isRequired\n  },\n\n  getDefaultProps() {\n    return {\n      content: { html: '', text: ''},\n      options: {\n        buttons: [ 'header1', 'header2', 'bold', 'italic', 'underline', 'anchor', 'quote',  'unorderedlist', 'orderedlist' ],\n        firstHeader: 'h1',\n        secondHeader: 'h2',\n        diffLeft: 0,\n        diffTop: -10,\n        disableDoubleReturn: true\n      }\n    }\n  },\n\n  shouldComponentUpdate(props: Object, state: Object){\n    return false\n  },\n\n  componentDidMount() {\n    this.setState({\n      editor: new MediumEditor(this.refs.editor.getDOMNode(), this.props.options)\n    })\n  },\n\n  componentWillUnmount() {\n    this.state.editor.deactivate()\n  },\n\n  render() {\n    return (\n      <div className=\"col-block-medium\">\n        <div className=\"col-medium\" onBlur={ this._onBlur } role=\"textarea\" aria-multiline=\"true\" ref=\"editor\" dangerouslySetInnerHTML={{ __html: this.props.content.html }} />\n        { this.props.children }\n      </div>\n    )\n  },\n\n  _onBlur() {\n    var editor = this.refs.editor.getDOMNode()\n\n    this.props.onChange({\n      text: editor.textContent,\n      html: editor.innerHTML\n    })\n  }\n\n})\n\nmodule.exports = Medium\n\n\n\n/** WEBPACK FOOTER **\n ** ./addons/medium/index.jsx\n **/","module.exports = require(\"react\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react\"\n ** module id = 1\n ** module chunks = 0 1 2 3\n **/","/*global module, console, define*/\n\nfunction MediumEditor(elements, options) {\n    'use strict';\n    return this.init(elements, options);\n}\n\nif (typeof module === 'object') {\n    module.exports = MediumEditor;\n}\n// AMD support\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {\n        'use strict';\n        return MediumEditor;\n    });\n}\n\n(function (window, document) {\n    'use strict';\n\n    function extend(b, a) {\n        var prop;\n        if (b === undefined) {\n            return a;\n        }\n        for (prop in a) {\n            if (a.hasOwnProperty(prop) && b.hasOwnProperty(prop) === false) {\n                b[prop] = a[prop];\n            }\n        }\n        return b;\n    }\n\n    function isDescendant(parent, child) {\n         var node = child.parentNode;\n         while (node !== null) {\n             if (node === parent) {\n                 return true;\n             }\n             node = node.parentNode;\n         }\n         return false;\n    }\n\n    // http://stackoverflow.com/questions/5605401/insert-link-in-contenteditable-element\n    // by Tim Down\n    function saveSelection() {\n        var i,\n            len,\n            ranges,\n            sel = this.options.contentWindow.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            ranges = [];\n            for (i = 0, len = sel.rangeCount; i < len; i += 1) {\n                ranges.push(sel.getRangeAt(i));\n            }\n            return ranges;\n        }\n        return null;\n    }\n\n    function restoreSelection(savedSel) {\n        var i,\n            len,\n            sel = this.options.contentWindow.getSelection();\n        if (savedSel) {\n            sel.removeAllRanges();\n            for (i = 0, len = savedSel.length; i < len; i += 1) {\n                sel.addRange(savedSel[i]);\n            }\n        }\n    }\n\n    // http://stackoverflow.com/questions/1197401/how-can-i-get-the-element-the-caret-is-in-with-javascript-when-using-contentedi\n    // by You\n    function getSelectionStart() {\n        var node = this.options.ownerDocument.getSelection().anchorNode,\n            startNode = (node && node.nodeType === 3 ? node.parentNode : node);\n        return startNode;\n    }\n\n    // http://stackoverflow.com/questions/4176923/html-of-selected-text\n    // by Tim Down\n    function getSelectionHtml() {\n        var i,\n            html = '',\n            sel,\n            len,\n            container;\n        if (this.options.contentWindow.getSelection !== undefined) {\n            sel = this.options.contentWindow.getSelection();\n            if (sel.rangeCount) {\n                container = this.options.ownerDocument.createElement('div');\n                for (i = 0, len = sel.rangeCount; i < len; i += 1) {\n                    container.appendChild(sel.getRangeAt(i).cloneContents());\n                }\n                html = container.innerHTML;\n            }\n        } else if (this.options.ownerDocument.selection !== undefined) {\n            if (this.options.ownerDocument.selection.type === 'Text') {\n                html = this.options.ownerDocument.selection.createRange().htmlText;\n            }\n        }\n        return html;\n    }\n\n    // https://github.com/jashkenas/underscore\n    function isElement(obj) {\n        return !!(obj && obj.nodeType === 1);\n    }\n\n    MediumEditor.prototype = {\n        defaults: {\n            allowMultiParagraphSelection: true,\n            anchorInputPlaceholder: 'Paste or type a link',\n            anchorPreviewHideDelay: 500,\n            buttons: ['bold', 'italic', 'underline', 'anchor', 'header1', 'header2', 'quote'],\n            buttonLabels: false,\n            checkLinkFormat: false,\n            cleanPastedHTML: false,\n            delay: 0,\n            diffLeft: 0,\n            diffTop: -10,\n            disableReturn: false,\n            disableDoubleReturn: false,\n            disableToolbar: false,\n            disableEditing: false,\n            elementsContainer: false,\n            contentWindow: window,\n            ownerDocument: document,\n            firstHeader: 'h3',\n            forcePlainText: true,\n            placeholder: 'Type your text',\n            secondHeader: 'h4',\n            targetBlank: false,\n            anchorTarget: false,\n            anchorButton: false,\n            anchorButtonClass: 'btn',\n            extensions: {},\n            activeButtonClass: 'medium-editor-button-active',\n            firstButtonClass: 'medium-editor-button-first',\n            lastButtonClass: 'medium-editor-button-last'\n        },\n\n        // http://stackoverflow.com/questions/17907445/how-to-detect-ie11#comment30165888_17907562\n        // by rg89\n        isIE: ((navigator.appName === 'Microsoft Internet Explorer') || ((navigator.appName === 'Netscape') && (new RegExp('Trident/.*rv:([0-9]{1,}[.0-9]{0,})').exec(navigator.userAgent) !== null))),\n\n        init: function (elements, options) {\n            this.options = extend(options, this.defaults);\n            this.setElementSelection(elements);\n            if (this.elements.length === 0) {\n                return;\n            }\n            this.parentElements = ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'pre'];\n            if (!this.options.elementsContainer) {\n                this.options.elementsContainer = document.body;\n            }\n            this.id = this.options.elementsContainer.querySelectorAll('.medium-editor-toolbar').length + 1;\n            return this.setup();\n        },\n\n        setup: function () {\n            this.events = [];\n            this.isActive = true;\n            this.initElements()\n                .bindSelect()\n                .bindPaste()\n                .setPlaceholders()\n                .bindWindowActions()\n                .passInstance();\n        },\n\n        on: function(target, event, listener, useCapture) {\n            target.addEventListener(event, listener, useCapture);\n            this.events.push([target, event, listener, useCapture]);\n        },\n\n        off: function(target, event, listener, useCapture) {\n            var index = this.events.indexOf([target, event, listener, useCapture]),\n                e;\n            if(index !== -1) {\n                e = this.events.splice(index, 1);\n                e[0].removeEventListener(e[1], e[2], e[3]);\n            }\n        },\n\n        removeAllEvents: function() {\n            var e = this.events.pop();\n            while(e) {\n                e[0].removeEventListener(e[1], e[2], e[3]);\n                e = this.events.pop();\n            }\n        },\n\n        initElements: function () {\n            this.updateElementList();\n            var i,\n                addToolbar = false;\n            for (i = 0; i < this.elements.length; i += 1) {\n                if (!this.options.disableEditing && !this.elements[i].getAttribute('data-disable-editing')) {\n                    this.elements[i].setAttribute('contentEditable', true);\n                }\n                if (!this.elements[i].getAttribute('data-placeholder')) {\n                    this.elements[i].setAttribute('data-placeholder', this.options.placeholder);\n                }\n                this.elements[i].setAttribute('data-medium-element', true);\n                this.bindParagraphCreation(i).bindReturn(i).bindTab(i);\n                if (!this.options.disableToolbar && !this.elements[i].getAttribute('data-disable-toolbar')) {\n                    addToolbar = true;\n                }\n            }\n            // Init toolbar\n            if (addToolbar) {\n                this.initToolbar()\n                    .bindButtons()\n                    .bindAnchorForm()\n                    .bindAnchorPreview();\n            }\n            return this;\n        },\n\n        setElementSelection: function (selector) {\n            this.elementSelection = selector;\n            this.updateElementList();\n        },\n\n        updateElementList: function () {\n            this.elements = typeof this.elementSelection === 'string' ? this.options.ownerDocument.querySelectorAll(this.elementSelection) : this.elementSelection;\n            if (this.elements.nodeType === 1) {\n                this.elements = [this.elements];\n            }\n        },\n\n        serialize: function () {\n            var i,\n                elementid,\n                content = {};\n            for (i = 0; i < this.elements.length; i += 1) {\n                elementid = (this.elements[i].id !== '') ? this.elements[i].id : 'element-' + i;\n                content[elementid] = {\n                    value: this.elements[i].innerHTML.trim()\n                };\n            }\n            return content;\n        },\n\n        /**\n         * Helper function to call a method with a number of parameters on all registered extensions.\n         * The function assures that the function exists before calling.\n         *\n         * @param {string} funcName name of the function to call\n         * @param [args] arguments passed into funcName\n         */\n        callExtensions: function (funcName) {\n            if (arguments.length < 1) {\n                return;\n            }\n\n            var args = Array.prototype.slice.call(arguments, 1),\n                ext,\n                name;\n\n            for (name in this.options.extensions) {\n                if (this.options.extensions.hasOwnProperty(name)) {\n                    ext = this.options.extensions[name];\n                    if (ext[funcName] !== undefined) {\n                        ext[funcName].apply(ext, args);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Pass current Medium Editor instance to all extensions\n         * if extension constructor has 'parent' attribute set to 'true'\n         *\n         */\n        passInstance: function () {\n            var self = this,\n                ext,\n                name;\n\n            for (name in self.options.extensions) {\n                if (self.options.extensions.hasOwnProperty(name)) {\n                    ext = self.options.extensions[name];\n\n                    if (ext.parent) {\n                        ext.base = self;\n                    }\n                }\n            }\n\n            return self;\n        },\n\n        bindParagraphCreation: function (index) {\n            var self = this;\n            this.on(this.elements[index], 'keypress', function (e) {\n                var node = getSelectionStart.call(self),\n                    tagName;\n                if (e.which === 32) {\n                    tagName = node.tagName.toLowerCase();\n                    if (tagName === 'a') {\n                        document.execCommand('unlink', false, null);\n                    }\n                }\n            });\n\n            this.on(this.elements[index], 'keyup', function (e) {\n                var node = getSelectionStart.call(self),\n                    tagName,\n                    editorElement;\n\n                if (node && node.getAttribute('data-medium-element') && node.children.length === 0 && !(self.options.disableReturn || node.getAttribute('data-disable-return'))) {\n                    document.execCommand('formatBlock', false, 'p');\n                }\n                if (e.which === 13) {\n                    node = getSelectionStart.call(self);\n                    tagName = node.tagName.toLowerCase();\n                    editorElement = self.getSelectionElement();\n\n                    if (!(self.options.disableReturn || editorElement.getAttribute('data-disable-return')) &&\n                        tagName !== 'li' && !self.isListItemChild(node)) {\n                        if (!e.shiftKey) {\n                            document.execCommand('formatBlock', false, 'p');\n                        }\n                        if (tagName === 'a') {\n                            document.execCommand('unlink', false, null);\n                        }\n                    }\n                }\n            });\n            return this;\n        },\n\n        isListItemChild: function (node) {\n            var parentNode = node.parentNode,\n                tagName = parentNode.tagName.toLowerCase();\n            while (this.parentElements.indexOf(tagName) === -1 && tagName !== 'div') {\n                if (tagName === 'li') {\n                    return true;\n                }\n                parentNode = parentNode.parentNode;\n                if (parentNode && parentNode.tagName) {\n                    tagName = parentNode.tagName.toLowerCase();\n                } else {\n                    return false;\n                }\n            }\n            return false;\n        },\n\n        bindReturn: function (index) {\n            var self = this;\n            this.on(this.elements[index], 'keypress', function (e) {\n                if (e.which === 13) {\n                    if (self.options.disableReturn || this.getAttribute('data-disable-return')) {\n                        e.preventDefault();\n                    } else if (self.options.disableDoubleReturn || this.getAttribute('data-disable-double-return')) {\n                        var node = getSelectionStart.call(self);\n                        if (node && node.innerText === '\\n') {\n                            e.preventDefault();\n                        }\n                    }\n                }\n            });\n            return this;\n        },\n\n        bindTab: function (index) {\n            var self = this;\n            this.on(this.elements[index], 'keydown', function (e) {\n                if (e.which === 9) {\n                    // Override tab only for pre nodes\n                    var tag = getSelectionStart.call(self).tagName.toLowerCase();\n                    if (tag === 'pre') {\n                        e.preventDefault();\n                        document.execCommand('insertHtml', null, '    ');\n                    }\n\n                    // Tab to indent list structures!\n                    if (tag === 'li') {\n                        e.preventDefault();\n\n                        // If Shift is down, outdent, otherwise indent\n                        if (e.shiftKey) {\n                            document.execCommand('outdent', e);\n                        } else {\n                            document.execCommand('indent', e);\n                        }\n                    }\n                }\n            });\n            return this;\n        },\n\n        buttonTemplate: function (btnType) {\n            var buttonLabels = this.getButtonLabels(this.options.buttonLabels),\n                buttonTemplates = {\n                    'bold': '<button class=\"medium-editor-action medium-editor-action-bold\" data-action=\"bold\" data-element=\"b\">' + buttonLabels.bold + '</button>',\n                    'italic': '<button class=\"medium-editor-action medium-editor-action-italic\" data-action=\"italic\" data-element=\"i\">' + buttonLabels.italic + '</button>',\n                    'underline': '<button class=\"medium-editor-action medium-editor-action-underline\" data-action=\"underline\" data-element=\"u\">' + buttonLabels.underline + '</button>',\n                    'strikethrough': '<button class=\"medium-editor-action medium-editor-action-strikethrough\" data-action=\"strikethrough\" data-element=\"strike\">' + buttonLabels.strikethrough +'</button>',\n                    'superscript': '<button class=\"medium-editor-action medium-editor-action-superscript\" data-action=\"superscript\" data-element=\"sup\">' + buttonLabels.superscript + '</button>',\n                    'subscript': '<button class=\"medium-editor-action medium-editor-action-subscript\" data-action=\"subscript\" data-element=\"sub\">' + buttonLabels.subscript + '</button>',\n                    'anchor': '<button class=\"medium-editor-action medium-editor-action-anchor\" data-action=\"anchor\" data-element=\"a\">' + buttonLabels.anchor + '</button>',\n                    'image': '<button class=\"medium-editor-action medium-editor-action-image\" data-action=\"image\" data-element=\"img\">' + buttonLabels.image + '</button>',\n                    'header1': '<button class=\"medium-editor-action medium-editor-action-header1\" data-action=\"append-' + this.options.firstHeader + '\" data-element=\"' + this.options.firstHeader + '\">' + buttonLabels.header1 + '</button>',\n                    'header2': '<button class=\"medium-editor-action medium-editor-action-header2\" data-action=\"append-' + this.options.secondHeader + '\" data-element=\"' + this.options.secondHeader + '\">' + buttonLabels.header2 + '</button>',\n                    'quote': '<button class=\"medium-editor-action medium-editor-action-quote\" data-action=\"append-blockquote\" data-element=\"blockquote\">' + buttonLabels.quote + '</button>',\n                    'orderedlist': '<button class=\"medium-editor-action medium-editor-action-orderedlist\" data-action=\"insertorderedlist\" data-element=\"ol\">' + buttonLabels.orderedlist + '</button>',\n                    'unorderedlist': '<button class=\"medium-editor-action medium-editor-action-unorderedlist\" data-action=\"insertunorderedlist\" data-element=\"ul\">' + buttonLabels.unorderedlist + '</button>',\n                    'pre': '<button class=\"medium-editor-action medium-editor-action-pre\" data-action=\"append-pre\" data-element=\"pre\">' + buttonLabels.pre + '</button>',\n                    'indent': '<button class=\"medium-editor-action medium-editor-action-indent\" data-action=\"indent\" data-element=\"ul\">' + buttonLabels.indent + '</button>',\n                    'outdent': '<button class=\"medium-editor-action medium-editor-action-outdent\" data-action=\"outdent\" data-element=\"ul\">' + buttonLabels.outdent + '</button>',\n                    'justifyCenter': '<button class=\"medium-editor-action medium-editor-action-justifyCenter\" data-action=\"justifyCenter\" data-element=\"\">' + buttonLabels.justifyCenter + '</button>',\n                    'justifyFull': '<button class=\"medium-editor-action medium-editor-action-justifyFull\" data-action=\"justifyFull\" data-element=\"\">' + buttonLabels.justifyFull + '</button>',\n                    'justifyLeft': '<button class=\"medium-editor-action medium-editor-action-justifyLeft\" data-action=\"justifyLeft\" data-element=\"\">' + buttonLabels.justifyLeft + '</button>',\n                    'justifyRight': '<button class=\"medium-editor-action medium-editor-action-justifyRight\" data-action=\"justifyRight\" data-element=\"\">' + buttonLabels.justifyRight + '</button>'\n                };\n            return buttonTemplates[btnType] || false;\n        },\n\n        // TODO: break method\n        getButtonLabels: function (buttonLabelType) {\n            var customButtonLabels,\n                attrname,\n                buttonLabels = {\n                    'bold': '<b>B</b>',\n                    'italic': '<b><i>I</i></b>',\n                    'underline': '<b><u>U</u></b>',\n                    'strikethrough': '<s>A</s>',\n                    'superscript': '<b>x<sup>1</sup></b>',\n                    'subscript': '<b>x<sub>1</sub></b>',\n                    'anchor': '<b>#</b>',\n                    'image': '<b>image</b>',\n                    'header1': '<b>H1</b>',\n                    'header2': '<b>H2</b>',\n                    'quote': '<b>&ldquo;</b>',\n                    'orderedlist': '<b>1.</b>',\n                    'unorderedlist': '<b>&bull;</b>',\n                    'pre': '<b>0101</b>',\n                    'indent': '<b>&rarr;</b>',\n                    'outdent': '<b>&larr;</b>',\n                    'justifyCenter': '<b>C</b>',\n                    'justifyFull': '<b>J</b>',\n                    'justifyLeft': '<b>L</b>',\n                    'justifyRight': '<b>R</b>'\n                };\n            if (buttonLabelType === 'fontawesome') {\n                customButtonLabels = {\n                    'bold': '<i class=\"fa fa-bold\"></i>',\n                    'italic': '<i class=\"fa fa-italic\"></i>',\n                    'underline': '<i class=\"fa fa-underline\"></i>',\n                    'strikethrough': '<i class=\"fa fa-strikethrough\"></i>',\n                    'superscript': '<i class=\"fa fa-superscript\"></i>',\n                    'subscript': '<i class=\"fa fa-subscript\"></i>',\n                    'anchor': '<i class=\"fa fa-link\"></i>',\n                    'image': '<i class=\"fa fa-picture-o\"></i>',\n                    'quote': '<i class=\"fa fa-quote-right\"></i>',\n                    'orderedlist': '<i class=\"fa fa-list-ol\"></i>',\n                    'unorderedlist': '<i class=\"fa fa-list-ul\"></i>',\n                    'pre': '<i class=\"fa fa-code fa-lg\"></i>',\n                    'indent': '<i class=\"fa fa-indent\"></i>',\n                    'outdent': '<i class=\"fa fa-outdent\"></i>',\n                    'justifyCenter': '<i class=\"fa fa-align-center\"></i>',\n                    'justifyFull': '<i class=\"fa fa-align-justify\"></i>',\n                    'justifyLeft': '<i class=\"fa fa-align-left\"></i>',\n                    'justifyRight': '<i class=\"fa fa-align-right\"></i>'\n                };\n            } else if (typeof buttonLabelType === 'object') {\n                customButtonLabels = buttonLabelType;\n            }\n            if (typeof customButtonLabels === 'object') {\n                for (attrname in customButtonLabels) {\n                    if (customButtonLabels.hasOwnProperty(attrname)) {\n                        buttonLabels[attrname] = customButtonLabels[attrname];\n                    }\n                }\n            }\n            return buttonLabels;\n        },\n\n        initToolbar: function () {\n            if (this.toolbar) {\n                return this;\n            }\n            this.toolbar = this.createToolbar();\n            this.keepToolbarAlive = false;\n            this.anchorForm = this.toolbar.querySelector('.medium-editor-toolbar-form-anchor');\n            this.anchorInput = this.anchorForm.querySelector('input.medium-editor-toolbar-anchor-input');\n            this.anchorTarget = this.anchorForm.querySelector('input.medium-editor-toolbar-anchor-target');\n            this.anchorButton = this.anchorForm.querySelector('input.medium-editor-toolbar-anchor-button');\n            this.toolbarActions = this.toolbar.querySelector('.medium-editor-toolbar-actions');\n            this.anchorPreview = this.createAnchorPreview();\n\n            return this;\n        },\n\n        createToolbar: function () {\n            var toolbar = document.createElement('div');\n            toolbar.id = 'medium-editor-toolbar-' + this.id;\n            toolbar.className = 'medium-editor-toolbar';\n            toolbar.appendChild(this.toolbarButtons());\n            toolbar.appendChild(this.toolbarFormAnchor());\n            this.options.elementsContainer.appendChild(toolbar);\n            return toolbar;\n        },\n\n        //TODO: actionTemplate\n        toolbarButtons: function () {\n            var btns = this.options.buttons,\n                ul = document.createElement('ul'),\n                li,\n                i,\n                btn,\n                ext;\n\n            ul.id = 'medium-editor-toolbar-actions';\n            ul.className = 'medium-editor-toolbar-actions clearfix';\n\n            for (i = 0; i < btns.length; i += 1) {\n                if (this.options.extensions.hasOwnProperty(btns[i])) {\n                    ext = this.options.extensions[btns[i]];\n                    btn = ext.getButton !== undefined ? ext.getButton() : null;\n                } else {\n                    btn = this.buttonTemplate(btns[i]);\n                }\n\n                if (btn) {\n                    li = document.createElement('li');\n                    if (isElement(btn)) {\n                        li.appendChild(btn);\n                    } else {\n                        li.innerHTML = btn;\n                    }\n                    ul.appendChild(li);\n                }\n            }\n\n            return ul;\n        },\n\n        toolbarFormAnchor: function () {\n            var anchor = document.createElement('div'),\n                input = document.createElement('input'),\n                target_label = document.createElement('label'),\n                target = document.createElement('input'),\n                button_label = document.createElement('label'),\n                button = document.createElement('input'),\n                close = document.createElement('a'),\n                save = document.createElement('a');\n\n            close.setAttribute('href', '#');\n            close.className = 'medium-editor-toobar-anchor-close';\n            close.innerHTML = '&times;';\n\n            save.setAttribute('href', '#');\n            save.className = 'medium-editor-toobar-anchor-save';\n            save.innerHTML = '&#10003;';\n\n            input.setAttribute('type', 'text');\n            input.className = 'medium-editor-toolbar-anchor-input';\n            input.setAttribute('placeholder', this.options.anchorInputPlaceholder);\n\n\n            target.setAttribute('type', 'checkbox');\n            target.className = 'medium-editor-toolbar-anchor-target';\n            target_label.innerHTML = \"Open in New Window?\";\n            target_label.insertBefore(target, target_label.firstChild);\n\n            button.setAttribute('type', 'checkbox');\n            button.className = 'medium-editor-toolbar-anchor-button';\n            button_label.innerHTML = \"Button\";\n            button_label.insertBefore(button, button_label.firstChild);\n\n\n            anchor.className = 'medium-editor-toolbar-form-anchor';\n            anchor.id = 'medium-editor-toolbar-form-anchor';\n            anchor.appendChild(input);\n\n            anchor.appendChild(save);\n            anchor.appendChild(close);\n\n            if (this.options.anchorTarget) {\n                anchor.appendChild(target_label);\n            }\n\n            if (this.options.anchorButton) {\n                anchor.appendChild(button_label);\n            }\n\n            return anchor;\n        },\n\n        bindSelect: function () {\n            var self = this,\n                timer = '',\n                i;\n\n            this.checkSelectionWrapper = function (e) {\n\n                // Do not close the toolbar when bluring the editable area and clicking into the anchor form\n                if (e && self.clickingIntoArchorForm(e)) {\n                    return false;\n                }\n\n                clearTimeout(timer);\n                timer = setTimeout(function () {\n                    self.checkSelection();\n                }, self.options.delay);\n            };\n\n            this.on(document.documentElement, 'mouseup', this.checkSelectionWrapper);\n\n            for (i = 0; i < this.elements.length; i += 1) {\n                this.on(this.elements[i], 'keyup', this.checkSelectionWrapper);\n                this.on(this.elements[i], 'blur', this.checkSelectionWrapper);\n            }\n            return this;\n        },\n\n        checkSelection: function () {\n            var newSelection,\n                selectionElement;\n\n            if (this.keepToolbarAlive !== true && !this.options.disableToolbar) {\n\n                newSelection = this.options.contentWindow.getSelection();\n                if (newSelection.toString().trim() === '' ||\n                    (this.options.allowMultiParagraphSelection === false && this.hasMultiParagraphs()) ||\n                    this.selectionInContentEditableFalse()) {\n                    this.hideToolbarActions();\n                } else {\n                    selectionElement = this.getSelectionElement();\n                    if (!selectionElement || selectionElement.getAttribute('data-disable-toolbar')) {\n                        this.hideToolbarActions();\n                    } else {\n                        this.checkSelectionElement(newSelection, selectionElement);\n                    }\n                }\n            }\n            return this;\n        },\n\n        clickingIntoArchorForm: function (e) {\n            var self = this;\n\n            if (e.type && e.type.toLowerCase() === 'blur' && e.relatedTarget && e.relatedTarget === self.anchorInput) {\n                return true;\n            }\n\n            return false;\n        },\n\n        hasMultiParagraphs: function () {\n            var selectionHtml = getSelectionHtml.call(this).replace(/<[\\S]+><\\/[\\S]+>/gim, ''),\n                hasMultiParagraphs = selectionHtml.match(/<(p|h[0-6]|blockquote)>([\\s\\S]*?)<\\/(p|h[0-6]|blockquote)>/g);\n\n            return (hasMultiParagraphs ? hasMultiParagraphs.length : 0);\n        },\n\n        checkSelectionElement: function (newSelection, selectionElement) {\n            var i;\n            this.selection = newSelection;\n            this.selectionRange = this.selection.getRangeAt(0);\n            for (i = 0; i < this.elements.length; i += 1) {\n                if (this.elements[i] === selectionElement) {\n                    this.setToolbarButtonStates()\n                        .setToolbarPosition()\n                        .showToolbarActions();\n                    return;\n                }\n            }\n            this.hideToolbarActions();\n        },\n\n        findMatchingSelectionParent: function(testElementFunction) {\n            var selection = this.options.contentWindow.getSelection(), range, current;\n\n            if (selection.rangeCount === 0) {\n                return false;\n            }\n\n            range = selection.getRangeAt(0);\n            current = range.commonAncestorContainer;\n\n            do {\n              if (current.nodeType === 1){\n                if ( testElementFunction(current) )\n                {\n                    return current;\n                }\n                // do not traverse upwards past the nearest containing editor\n                if (current.getAttribute('data-medium-element')) {\n                    return false;\n                }\n              }\n\n              current = current.parentNode;\n            } while (current);\n\n            return false;\n        },\n\n        getSelectionElement: function () {\n            return this.findMatchingSelectionParent(function(el) {\n                return el.getAttribute('data-medium-element');\n            });\n        },\n\n        selectionInContentEditableFalse: function () {\n            return this.findMatchingSelectionParent(function(el) {\n                return (el && el.nodeName !== '#text' && el.getAttribute('contenteditable') === 'false');\n            });\n        },\n\n        setToolbarPosition: function () {\n            var buttonHeight = 50,\n                selection = this.options.contentWindow.getSelection(),\n                range = selection.getRangeAt(0),\n                boundary = range.getBoundingClientRect(),\n                defaultLeft = (this.options.diffLeft) - (this.toolbar.offsetWidth / 2),\n                middleBoundary = (boundary.left + boundary.right) / 2,\n                halfOffsetWidth = this.toolbar.offsetWidth / 2;\n            if (boundary.top < buttonHeight) {\n                this.toolbar.classList.add('medium-toolbar-arrow-over');\n                this.toolbar.classList.remove('medium-toolbar-arrow-under');\n                this.toolbar.style.top = buttonHeight + boundary.bottom - this.options.diffTop + this.options.contentWindow.pageYOffset - this.toolbar.offsetHeight + 'px';\n            } else {\n                this.toolbar.classList.add('medium-toolbar-arrow-under');\n                this.toolbar.classList.remove('medium-toolbar-arrow-over');\n                this.toolbar.style.top = boundary.top + this.options.diffTop + this.options.contentWindow.pageYOffset - this.toolbar.offsetHeight + 'px';\n            }\n            if (middleBoundary < halfOffsetWidth) {\n                this.toolbar.style.left = defaultLeft + halfOffsetWidth + 'px';\n            } else if ((this.options.contentWindow.innerWidth - middleBoundary) < halfOffsetWidth) {\n                this.toolbar.style.left = this.options.contentWindow.innerWidth + defaultLeft - halfOffsetWidth + 'px';\n            } else {\n                this.toolbar.style.left = defaultLeft + middleBoundary + 'px';\n            }\n\n            this.hideAnchorPreview();\n\n            return this;\n        },\n\n        setToolbarButtonStates: function () {\n            var buttons = this.toolbarActions.querySelectorAll('button'),\n                i;\n            for (i = 0; i < buttons.length; i += 1) {\n                buttons[i].classList.remove(this.options.activeButtonClass);\n            }\n            this.checkActiveButtons();\n            return this;\n        },\n\n        checkActiveButtons: function () {\n            var elements = Array.prototype.slice.call(this.elements),\n                parentNode = this.getSelectedParentElement();\n            while (parentNode.tagName !== undefined && this.parentElements.indexOf(parentNode.tagName.toLowerCase) === -1) {\n                this.activateButton(parentNode.tagName.toLowerCase());\n                this.callExtensions('checkState', parentNode);\n\n                // we can abort the search upwards if we leave the contentEditable element\n                if (elements.indexOf(parentNode) !== -1) {\n                    break;\n                }\n                parentNode = parentNode.parentNode;\n            }\n        },\n\n        activateButton: function (tag) {\n            var el = this.toolbar.querySelector('[data-element=\"' + tag + '\"]');\n            if (el !== null && el.className.indexOf(this.options.activeButtonClass) === -1) {\n                el.className += ' ' + this.options.activeButtonClass;\n            }\n        },\n\n        bindButtons: function () {\n            var buttons = this.toolbar.querySelectorAll('button'),\n                i,\n                self = this,\n                triggerAction = function (e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (self.selection === undefined) {\n                        self.checkSelection();\n                    }\n                    if (this.className.indexOf(self.options.activeButtonClass) > -1) {\n                        this.classList.remove(self.options.activeButtonClass);\n                    } else {\n                        this.className += ' ' + self.options.activeButtonClass;\n                    }\n                    if (this.hasAttribute('data-action')) {\n                        self.execAction(this.getAttribute('data-action'), e);\n                    }\n                };\n            for (i = 0; i < buttons.length; i += 1) {\n                this.on(buttons[i], 'click', triggerAction);\n            }\n            this.setFirstAndLastItems(buttons);\n            return this;\n        },\n\n        setFirstAndLastItems: function (buttons) {\n            if (buttons.length > 0) {\n                buttons[0].className += ' ' + this.options.firstButtonClass;\n                buttons[buttons.length - 1].className += ' ' + this.options.lastButtonClass;\n            }\n            return this;\n        },\n\n        execAction: function (action, e) {\n            if (action.indexOf('append-') > -1) {\n                this.execFormatBlock(action.replace('append-', ''));\n                this.setToolbarPosition();\n                this.setToolbarButtonStates();\n            } else if (action === 'anchor') {\n                this.triggerAnchorAction(e);\n            } else if (action === 'image') {\n                this.options.ownerDocument.execCommand('insertImage', false, this.options.contentWindow.getSelection());\n            } else {\n                this.options.ownerDocument.execCommand(action, false, null);\n                this.setToolbarPosition();\n            }\n        },\n\n        // http://stackoverflow.com/questions/15867542/range-object-get-selection-parent-node-chrome-vs-firefox\n        rangeSelectsSingleNode: function (range) {\n            var startNode = range.startContainer;\n            return startNode === range.endContainer &&\n                startNode.hasChildNodes() &&\n                range.endOffset === range.startOffset + 1;\n        },\n\n        getSelectedParentElement: function () {\n            var selectedParentElement = null,\n                range = this.selectionRange;\n            if (this.rangeSelectsSingleNode(range)) {\n                selectedParentElement = range.startContainer.childNodes[range.startOffset];\n            } else if (range.startContainer.nodeType === 3) {\n                selectedParentElement = range.startContainer.parentNode;\n            } else {\n                selectedParentElement = range.startContainer;\n            }\n            return selectedParentElement;\n        },\n\n        triggerAnchorAction: function () {\n            var selectedParentElement = this.getSelectedParentElement();\n            if (selectedParentElement.tagName &&\n                    selectedParentElement.tagName.toLowerCase() === 'a') {\n                this.options.ownerDocument.execCommand('unlink', false, null);\n            } else {\n                if (this.anchorForm.style.display === 'block') {\n                    this.showToolbarActions();\n                } else {\n                    this.showAnchorForm();\n                }\n            }\n            return this;\n        },\n\n        execFormatBlock: function (el) {\n            var selectionData = this.getSelectionData(this.selection.anchorNode);\n            // FF handles blockquote differently on formatBlock\n            // allowing nesting, we need to use outdent\n            // https://developer.mozilla.org/en-US/docs/Rich-Text_Editing_in_Mozilla\n            if (el === 'blockquote' && selectionData.el &&\n                selectionData.el.parentNode.tagName.toLowerCase() === 'blockquote') {\n                return this.options.ownerDocument.execCommand('outdent', false, null);\n            }\n            if (selectionData.tagName === el) {\n                el = 'p';\n            }\n            // When IE we need to add <> to heading elements and\n            //  blockquote needs to be called as indent\n            // http://stackoverflow.com/questions/10741831/execcommand-formatblock-headings-in-ie\n            // http://stackoverflow.com/questions/1816223/rich-text-editor-with-blockquote-function/1821777#1821777\n            if (this.isIE) {\n                if (el === 'blockquote') {\n                    return this.options.ownerDocument.execCommand('indent', false, el);\n                }\n                el = '<' + el + '>';\n            }\n            return this.options.ownerDocument.execCommand('formatBlock', false, el);\n        },\n\n        getSelectionData: function (el) {\n            var tagName;\n\n            if (el && el.tagName) {\n                tagName = el.tagName.toLowerCase();\n            }\n\n            while (el && this.parentElements.indexOf(tagName) === -1) {\n                el = el.parentNode;\n                if (el && el.tagName) {\n                    tagName = el.tagName.toLowerCase();\n                }\n            }\n\n            return {\n                el: el,\n                tagName: tagName\n            };\n        },\n\n        getFirstChild: function (el) {\n            var firstChild = el.firstChild;\n            while (firstChild !== null && firstChild.nodeType !== 1) {\n                firstChild = firstChild.nextSibling;\n            }\n            return firstChild;\n        },\n\n        hideToolbarActions: function () {\n            this.keepToolbarAlive = false;\n            if (this.toolbar !== undefined) {\n                this.toolbar.classList.remove('medium-editor-toolbar-active');\n            }\n        },\n\n        showToolbarActions: function () {\n            var self = this,\n                timer;\n            this.anchorForm.style.display = 'none';\n            this.toolbarActions.style.display = 'block';\n            this.keepToolbarAlive = false;\n            clearTimeout(timer);\n            timer = setTimeout(function () {\n                if (self.toolbar && !self.toolbar.classList.contains('medium-editor-toolbar-active')) {\n                    self.toolbar.classList.add('medium-editor-toolbar-active');\n                }\n            }, 100);\n        },\n\n        saveSelection: function() {\n            this.savedSelection = saveSelection.call(this);\n        },\n\n        restoreSelection: function() {\n            restoreSelection.call(this, this.savedSelection);\n        },\n\n        showAnchorForm: function (link_value) {\n            this.toolbarActions.style.display = 'none';\n            this.saveSelection();\n            this.anchorForm.style.display = 'block';\n            this.setToolbarPosition();\n            this.keepToolbarAlive = true;\n            this.anchorInput.focus();\n            this.anchorInput.value = link_value || '';\n        },\n\n        bindAnchorForm: function () {\n            var linkCancel = this.anchorForm.querySelector('a.medium-editor-toobar-anchor-close'),\n                linkSave = this.anchorForm.querySelector('a.medium-editor-toobar-anchor-save'),\n                self = this;\n\n            this.on(this.anchorForm, 'click', function (e) {\n                e.stopPropagation();\n                self.keepToolbarAlive = true;\n            });\n\n            this.on(this.anchorInput, 'keyup', function (e) {\n                var button = null,\n                    target;\n\n                if (e.keyCode === 13) {\n                    e.preventDefault();\n                    if (self.options.anchorTarget && self.anchorTarget.checked) {\n                        target = \"_blank\";\n                    }\n                    else {\n                        target = \"_self\";\n                    }\n\n                    if (self.options.anchorButton && self.anchorButton.checked) {\n                        button = self.options.anchorButtonClass;\n                    }\n\n                    self.createLink(this, target, button);\n                }\n            });\n\n            this.on(linkSave, 'click', function(e) {\n                var button = null,\n                    target;\n                e.preventDefault();\n                if ( self.options.anchorTarget && self.anchorTarget.checked) {\n                    target = \"_blank\";\n                }\n                else {\n                    target = \"_self\";\n                }\n\n                if (self.options.anchorButton && self.anchorButton.checked) {\n                    button = self.options.anchorButtonClass;\n                }\n\n                self.createLink(self.anchorInput, target, button);\n            }, true);\n\n            this.on(this.anchorInput, 'click', function (e) {\n                // make sure not to hide form when cliking into the input\n                e.stopPropagation();\n                self.keepToolbarAlive = true;\n            });\n\n            // Hide the anchor form when focusing outside of it.\n            this.on(this.options.ownerDocument.body, 'click', function (e) {\n                if (e.target !== self.anchorForm && !isDescendant(self.anchorForm, e.target) && !isDescendant(self.toolbarActions, e.target)) {\n                    self.keepToolbarAlive = false;\n                    self.checkSelection();\n                }\n            }, true);\n            this.on(this.options.ownerDocument.body, 'focus', function (e) {\n                if (e.target !== self.anchorForm && !isDescendant(self.anchorForm, e.target) && !isDescendant(self.toolbarActions, e.target)) {\n                    self.keepToolbarAlive = false;\n                    self.checkSelection();\n                }\n            }, true);\n\n            this.on(linkCancel, 'click', function (e) {\n                e.preventDefault();\n                self.showToolbarActions();\n                restoreSelection.call(self, self.savedSelection);\n            });\n            return this;\n        },\n\n\n        hideAnchorPreview: function () {\n            this.anchorPreview.classList.remove('medium-editor-anchor-preview-active');\n        },\n\n        // TODO: break method\n        showAnchorPreview: function (anchorEl) {\n            if (this.anchorPreview.classList.contains('medium-editor-anchor-preview-active')\n                || anchorEl.getAttribute('data-disable-preview')) {\n                return true;\n            }\n\n            var self = this,\n                buttonHeight = 40,\n                boundary = anchorEl.getBoundingClientRect(),\n                middleBoundary = (boundary.left + boundary.right) / 2,\n                halfOffsetWidth,\n                defaultLeft,\n                timer;\n\n            self.anchorPreview.querySelector('i').textContent = anchorEl.href;\n            halfOffsetWidth = self.anchorPreview.offsetWidth / 2;\n            defaultLeft = self.options.diffLeft - halfOffsetWidth;\n\n            clearTimeout(timer);\n            timer = setTimeout(function () {\n                if (self.anchorPreview && !self.anchorPreview.classList.contains('medium-editor-anchor-preview-active')) {\n                    self.anchorPreview.classList.add('medium-editor-anchor-preview-active');\n                }\n            }, 100);\n\n            self.observeAnchorPreview(anchorEl);\n\n            self.anchorPreview.classList.add('medium-toolbar-arrow-over');\n            self.anchorPreview.classList.remove('medium-toolbar-arrow-under');\n            self.anchorPreview.style.top = Math.round(buttonHeight + boundary.bottom - self.options.diffTop + this.options.contentWindow.pageYOffset - self.anchorPreview.offsetHeight) + 'px';\n            if (middleBoundary < halfOffsetWidth) {\n                self.anchorPreview.style.left = defaultLeft + halfOffsetWidth + 'px';\n            } else if ((this.options.contentWindow.innerWidth - middleBoundary) < halfOffsetWidth) {\n                self.anchorPreview.style.left = this.options.contentWindow.innerWidth + defaultLeft - halfOffsetWidth + 'px';\n            } else {\n                self.anchorPreview.style.left = defaultLeft + middleBoundary + 'px';\n            }\n\n            return this;\n        },\n\n        // TODO: break method\n        observeAnchorPreview: function (anchorEl) {\n            var self = this,\n                lastOver = (new Date()).getTime(),\n                over = true,\n                stamp = function () {\n                    lastOver = (new Date()).getTime();\n                    over = true;\n                },\n                unstamp = function (e) {\n                    if (!e.relatedTarget || !/anchor-preview/.test(e.relatedTarget.className)) {\n                        over = false;\n                    }\n                },\n                interval_timer = setInterval(function () {\n                    if (over) {\n                        return true;\n                    }\n                    var durr = (new Date()).getTime() - lastOver;\n                    if (durr > self.options.anchorPreviewHideDelay) {\n                        // hide the preview 1/2 second after mouse leaves the link\n                        self.hideAnchorPreview();\n\n                        // cleanup\n                        clearInterval(interval_timer);\n                        self.off(self.anchorPreview, 'mouseover', stamp);\n                        self.off(self.anchorPreview, 'mouseout', unstamp);\n                        self.off(anchorEl, 'mouseover', stamp);\n                        self.off(anchorEl, 'mouseout', unstamp);\n\n                    }\n                }, 200);\n\n            this.on(self.anchorPreview, 'mouseover', stamp);\n            this.on(self.anchorPreview, 'mouseout', unstamp);\n            this.on(anchorEl, 'mouseover', stamp);\n            this.on(anchorEl, 'mouseout', unstamp);\n        },\n\n        createAnchorPreview: function () {\n            var self = this,\n                anchorPreview = this.options.ownerDocument.createElement('div');\n\n            anchorPreview.id = 'medium-editor-anchor-preview-' + this.id;\n            anchorPreview.className = 'medium-editor-anchor-preview';\n            anchorPreview.innerHTML = this.anchorPreviewTemplate();\n            this.options.elementsContainer.appendChild(anchorPreview);\n\n            this.on(anchorPreview, 'click', function () {\n                self.anchorPreviewClickHandler();\n            });\n\n            return anchorPreview;\n        },\n\n        anchorPreviewTemplate: function () {\n            return '<div class=\"medium-editor-toolbar-anchor-preview\" id=\"medium-editor-toolbar-anchor-preview\">' +\n                '    <i class=\"medium-editor-toolbar-anchor-preview-inner\"></i>' +\n                '</div>';\n        },\n\n        anchorPreviewClickHandler: function (e) {\n            if (this.activeAnchor) {\n\n                var self = this,\n                    range = this.options.ownerDocument.createRange(),\n                    sel = this.options.contentWindow.getSelection();\n\n                range.selectNodeContents(self.activeAnchor);\n                sel.removeAllRanges();\n                sel.addRange(range);\n                setTimeout(function () {\n                    if (self.activeAnchor) {\n                        self.showAnchorForm(self.activeAnchor.href);\n                    }\n                    self.keepToolbarAlive = false;\n                }, 100 + self.options.delay);\n\n            }\n\n            this.hideAnchorPreview();\n        },\n\n        editorAnchorObserver: function (e) {\n            var self = this,\n                overAnchor = true,\n                leaveAnchor = function () {\n                    // mark the anchor as no longer hovered, and stop listening\n                    overAnchor = false;\n                    self.off(self.activeAnchor, 'mouseout', leaveAnchor);\n                };\n\n            if (e.target && e.target.tagName.toLowerCase() === 'a') {\n\n                // Detect empty href attributes\n                // The browser will make href=\"\" or href=\"#top\"\n                // into absolute urls when accessed as e.targed.href, so check the html\n                if (!/href=[\"']\\S+[\"']/.test(e.target.outerHTML) || /href=[\"']#\\S+[\"']/.test(e.target.outerHTML)) {\n                    return true;\n                }\n\n                // only show when hovering on anchors\n                if (this.toolbar.classList.contains('medium-editor-toolbar-active')) {\n                    // only show when toolbar is not present\n                    return true;\n                }\n                this.activeAnchor = e.target;\n                this.on(this.activeAnchor, 'mouseout', leaveAnchor);\n                // show the anchor preview according to the configured delay\n                // if the mouse has not left the anchor tag in that time\n                setTimeout(function () {\n                    if (overAnchor) {\n                        self.showAnchorPreview(e.target);\n                    }\n                }, self.options.delay);\n\n\n            }\n        },\n\n        bindAnchorPreview: function (index) {\n            var i, self = this;\n            this.editorAnchorObserverWrapper = function (e) {\n                self.editorAnchorObserver(e);\n            };\n            for (i = 0; i < this.elements.length; i += 1) {\n                this.on(this.elements[i], 'mouseover', this.editorAnchorObserverWrapper);\n            }\n            return this;\n        },\n\n        checkLinkFormat: function (value) {\n            var re = /^(https?|ftps?|rtmpt?):\\/\\/|mailto:/;\n            return (re.test(value) ? '' : 'http://') + value;\n        },\n\n        setTargetBlank: function (el) {\n            var i;\n            el = el || getSelectionStart.call(this);\n            if (el.tagName.toLowerCase() === 'a') {\n                el.target = '_blank';\n            } else {\n                el = el.getElementsByTagName('a');\n\n                for (i = 0; i < el.length; i += 1) {\n                    el[i].target = '_blank';\n                }\n            }\n        },\n\n        setButtonClass: function (buttonClass) {\n            var el = getSelectionStart.call(this),\n                classes = buttonClass.split(' '),\n                i, j;\n            if (el.tagName.toLowerCase() === 'a') {\n                for (j = 0; j < classes.length; j += 1) {\n                    el.classList.add(classes[j]);\n                }\n            } else {\n                el = el.getElementsByTagName('a');\n                for (i = 0; i < el.length; i += 1) {\n                    for (j = 0; j < classes.length; j += 1) {\n                        el[i].classList.add(classes[j]);\n                    }\n                }\n            }\n        },\n\n        createLink: function (input, target, buttonClass) {\n            var i, event;\n\n            if (input.value.trim().length === 0) {\n                this.hideToolbarActions();\n                return;\n            }\n\n            restoreSelection.call(this, this.savedSelection);\n\n            if (this.options.checkLinkFormat) {\n                input.value = this.checkLinkFormat(input.value);\n            }\n\n            this.options.ownerDocument.execCommand('createLink', false, input.value);\n\n            if (this.options.targetBlank || target === \"_blank\") {\n                this.setTargetBlank();\n            }\n\n            if (buttonClass) {\n                this.setButtonClass(buttonClass);\n            }\n\n            if (this.options.targetBlank || target === \"_blank\" || buttonClass) {\n                event = this.options.ownerDocument.createEvent(\"HTMLEvents\");\n                event.initEvent(\"input\", true, true, this.options.contentWindow);\n                for (i = 0; i < this.elements.length; i += 1) {\n                    this.elements[i].dispatchEvent(event);\n                }\n            }\n\n            this.checkSelection();\n            this.showToolbarActions();\n            input.value = '';\n        },\n\n        bindWindowActions: function () {\n            var timerResize,\n                self = this;\n            this.windowResizeHandler = function () {\n                clearTimeout(timerResize);\n                timerResize = setTimeout(function () {\n                    if (self.toolbar && self.toolbar.classList.contains('medium-editor-toolbar-active')) {\n                        self.setToolbarPosition();\n                    }\n                }, 100);\n            };\n            this.on(this.options.contentWindow, 'resize', this.windowResizeHandler);\n            return this;\n        },\n\n        activate: function () {\n            if (this.isActive) {\n                return;\n            }\n\n            this.setup();\n        },\n\n        // TODO: break method\n        deactivate: function () {\n            var i;\n            if (!this.isActive) {\n                return;\n            }\n            this.isActive = false;\n\n            if (this.toolbar !== undefined) {\n                this.options.elementsContainer.removeChild(this.anchorPreview);\n                this.options.elementsContainer.removeChild(this.toolbar);\n                delete this.toolbar;\n                delete this.anchorPreview;\n            }\n\n            for (i = 0; i < this.elements.length; i += 1) {\n                this.elements[i].removeAttribute('contentEditable');\n                this.elements[i].removeAttribute('data-medium-element');\n            }\n\n            this.removeAllEvents();\n        },\n\n        htmlEntities: function (str) {\n            // converts special characters (like <) into their escaped/encoded values (like &lt;).\n            // This allows you to show to display the string without the browser reading it as HTML.\n            return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n        },\n\n        bindPaste: function () {\n            var i, self = this;\n            this.pasteWrapper = function (e) {\n                var paragraphs,\n                    html = '',\n                    p;\n\n                this.classList.remove('medium-editor-placeholder');\n                if (!self.options.forcePlainText && !self.options.cleanPastedHTML) {\n                    return this;\n                }\n\n                if (e.clipboardData && e.clipboardData.getData && !e.defaultPrevented) {\n                    e.preventDefault();\n\n                    if (self.options.cleanPastedHTML && e.clipboardData.getData('text/html')) {\n                        return self.cleanPaste(e.clipboardData.getData('text/html'));\n                    }\n                    if (!(self.options.disableReturn || this.getAttribute('data-disable-return'))) {\n                        paragraphs = e.clipboardData.getData('text/plain').split(/[\\r\\n]/g);\n                        for (p = 0; p < paragraphs.length; p += 1) {\n                            if (paragraphs[p] !== '') {\n                                if (navigator.userAgent.match(/firefox/i) && p === 0) {\n                                    html += self.htmlEntities(paragraphs[p]);\n                                } else {\n                                    html += '<p>' + self.htmlEntities(paragraphs[p]) + '</p>';\n                                }\n                            }\n                        }\n                        self.options.ownerDocument.execCommand('insertHTML', false, html);\n                    } else {\n                        html = self.htmlEntities(e.clipboardData.getData('text/plain'));\n                        self.options.ownerDocument.execCommand('insertHTML', false, html);\n                    }\n                }\n            };\n            for (i = 0; i < this.elements.length; i += 1) {\n                this.on(this.elements[i], 'paste', this.pasteWrapper);\n            }\n            return this;\n        },\n\n        setPlaceholders: function () {\n            var i,\n                activatePlaceholder = function (el) {\n                    if (!(el.querySelector('img')) &&\n                            !(el.querySelector('blockquote')) &&\n                            el.textContent.replace(/^\\s+|\\s+$/g, '') === '') {\n                        el.classList.add('medium-editor-placeholder');\n                    }\n                },\n                placeholderWrapper = function (e) {\n                    this.classList.remove('medium-editor-placeholder');\n                    if (e.type !== 'keypress') {\n                        activatePlaceholder(this);\n                    }\n                };\n            for (i = 0; i < this.elements.length; i += 1) {\n                activatePlaceholder(this.elements[i]);\n                this.on(this.elements[i], 'blur', placeholderWrapper);\n                this.on(this.elements[i], 'keypress', placeholderWrapper);\n            }\n            return this;\n        },\n\n        cleanPaste: function (text) {\n\n            /*jslint regexp: true*/\n            /*\n                jslint does not allow character negation, because the negation\n                will not match any unicode characters. In the regexes in this\n                block, negation is used specifically to match the end of an html\n                tag, and in fact unicode characters *should* be allowed.\n            */\n            var i, elList, workEl,\n                el = this.getSelectionElement(),\n                multiline = /<p|<br|<div/.test(text),\n                replacements = [\n\n                    // replace two bogus tags that begin pastes from google docs\n                    [new RegExp(/<[^>]*docs-internal-guid[^>]*>/gi), \"\"],\n                    [new RegExp(/<\\/b>(<br[^>]*>)?$/gi), \"\"],\n\n                     // un-html spaces and newlines inserted by OS X\n                    [new RegExp(/<span class=\"Apple-converted-space\">\\s+<\\/span>/g), ' '],\n                    [new RegExp(/<br class=\"Apple-interchange-newline\">/g), '<br>'],\n\n                    // replace google docs italics+bold with a span to be replaced once the html is inserted\n                    [new RegExp(/<span[^>]*(font-style:italic;font-weight:bold|font-weight:bold;font-style:italic)[^>]*>/gi), '<span class=\"replace-with italic bold\">'],\n\n                    // replace google docs italics with a span to be replaced once the html is inserted\n                    [new RegExp(/<span[^>]*font-style:italic[^>]*>/gi), '<span class=\"replace-with italic\">'],\n\n                    //[replace google docs bolds with a span to be replaced once the html is inserted\n                    [new RegExp(/<span[^>]*font-weight:bold[^>]*>/gi), '<span class=\"replace-with bold\">'],\n\n                     // replace manually entered b/i/a tags with real ones\n                    [new RegExp(/&lt;(\\/?)(i|b|a)&gt;/gi), '<$1$2>'],\n\n                     // replace manually a tags with real ones, converting smart-quotes from google docs\n                    [new RegExp(/&lt;a\\s+href=(&quot;|&rdquo;|&ldquo;|“|”)([^&]+)(&quot;|&rdquo;|&ldquo;|“|”)&gt;/gi), '<a href=\"$2\">']\n\n                ];\n            /*jslint regexp: false*/\n\n            for (i = 0; i < replacements.length; i += 1) {\n                text = text.replace(replacements[i][0], replacements[i][1]);\n            }\n\n            if (multiline) {\n\n                // double br's aren't converted to p tags, but we want paragraphs.\n                elList = text.split('<br><br>');\n\n                this.pasteHTML('<p>' + elList.join('</p><p>') + '</p>');\n                this.options.ownerDocument.execCommand('insertText', false, \"\\n\");\n\n                // block element cleanup\n                elList = el.querySelectorAll('a,p,div,br');\n                for (i = 0; i < elList.length; i += 1) {\n\n                    workEl = elList[i];\n\n                    switch (workEl.tagName.toLowerCase()) {\n                    case 'a':\n                        if (this.options.targetBlank){\n                          this.setTargetBlank(workEl);\n                        }\n                        break;\n                    case 'p':\n                    case 'div':\n                        this.filterCommonBlocks(workEl);\n                        break;\n                    case 'br':\n                        this.filterLineBreak(workEl);\n                        break;\n                    }\n\n                }\n\n\n            } else {\n\n                this.pasteHTML(text);\n\n            }\n\n        },\n\n        pasteHTML: function (html) {\n            var elList, workEl, i, fragmentBody, pasteBlock = this.options.ownerDocument.createDocumentFragment();\n\n            pasteBlock.appendChild(this.options.ownerDocument.createElement('body'));\n\n            fragmentBody = pasteBlock.querySelector('body');\n            fragmentBody.innerHTML = html;\n\n            this.cleanupSpans(fragmentBody);\n\n            elList = fragmentBody.querySelectorAll('*');\n            for (i = 0; i < elList.length; i += 1) {\n\n                workEl = elList[i];\n\n                // delete ugly attributes\n                workEl.removeAttribute('class');\n                workEl.removeAttribute('style');\n                workEl.removeAttribute('dir');\n\n                if (workEl.tagName.toLowerCase() === 'meta') {\n                    workEl.parentNode.removeChild(workEl);\n                }\n\n            }\n            this.options.ownerDocument.execCommand('insertHTML', false, fragmentBody.innerHTML.replace(/&nbsp;/g, ' '));\n        },\n        isCommonBlock: function (el) {\n            return (el && (el.tagName.toLowerCase() === 'p' || el.tagName.toLowerCase() === 'div'));\n        },\n        filterCommonBlocks: function (el) {\n            if (/^\\s*$/.test(el.innerText)) {\n                el.parentNode.removeChild(el);\n            }\n        },\n        filterLineBreak: function (el) {\n            if (this.isCommonBlock(el.previousElementSibling)) {\n\n                // remove stray br's following common block elements\n                el.parentNode.removeChild(el);\n\n            } else if (this.isCommonBlock(el.parentNode) && (el.parentNode.firstChild === el || el.parentNode.lastChild === el)) {\n\n                // remove br's just inside open or close tags of a div/p\n                el.parentNode.removeChild(el);\n\n            } else if (el.parentNode.childElementCount === 1) {\n\n                // and br's that are the only child of a div/p\n                this.removeWithParent(el);\n\n            }\n\n        },\n\n        // remove an element, including its parent, if it is the only element within its parent\n        removeWithParent: function (el) {\n            if (el && el.parentNode) {\n                if (el.parentNode.parentNode && el.parentNode.childElementCount === 1) {\n                    el.parentNode.parentNode.removeChild(el.parentNode);\n                } else {\n                    el.parentNode.removeChild(el.parentNode);\n                }\n            }\n        },\n\n        cleanupSpans: function (container_el) {\n\n            var i,\n                el,\n                new_el,\n                spans = container_el.querySelectorAll('.replace-with');\n\n            for (i = 0; i < spans.length; i += 1) {\n\n                el = spans[i];\n                new_el = this.options.ownerDocument.createElement(el.classList.contains('bold') ? 'b' : 'i');\n\n                if (el.classList.contains('bold') && el.classList.contains('italic')) {\n\n                    // add an i tag as well if this has both italics and bold\n                    new_el.innerHTML = '<i>' + el.innerHTML + '</i>';\n\n                } else {\n\n                    new_el.innerHTML = el.innerHTML;\n\n                }\n                el.parentNode.replaceChild(new_el, el);\n\n            }\n\n            spans = container_el.querySelectorAll('span');\n            for (i = 0; i < spans.length; i += 1) {\n\n                el = spans[i];\n\n                // remove empty spans, replace others with their contents\n                if (/^\\s*$/.test()) {\n                    el.parentNode.removeChild(el);\n                } else {\n                    el.parentNode.replaceChild(this.options.ownerDocument.createTextNode(el.innerText), el);\n                }\n\n            }\n\n        }\n\n    };\n\n}(window, document));\n\n\n\n/** WEBPACK FOOTER **\n ** ./addons/medium/vendor/medium-editor.js\n **/"],"sourceRoot":""}